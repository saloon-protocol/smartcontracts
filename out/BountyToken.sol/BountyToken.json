{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        }
      ],
      "name": "convertStakeToPoolMeasurements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolPercentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentAPY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "apy",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "projectName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "projectDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "multiplier",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.GeneralInfo",
          "name": "generalInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "requiredPremiumBalancePerPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premiumBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premiumAvailable",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.PremiumInfo",
          "name": "premiumInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalScheduledAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "withdrawalExecuted",
              "type": "bool"
            }
          ],
          "internalType": "struct ISaloon.TimelockInfo",
          "name": "poolTimelock",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "freezeTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seeEffectiveStakingAPY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200018e60201b620006161760201c565b15801562000063575060005460ff166001145b620000cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015620000f0576000805461ff0019166101001790555b620001406040518060400160405280600b81526020016a2137bab73a3caa37b5b2b760a91b8152506040518060400160405280600381526020016210951560ea1b8152506200019d60201b60201c565b801562000187576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620003f7565b6001600160a01b03163b151590565b600054610100900460ff16620001f95760405162461bcd60e51b815260206004820152602b60248201526000805160206200112583398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000c3565b62000205828262000209565b5050565b600054610100900460ff16620002655760405162461bcd60e51b815260206004820152602b60248201526000805160206200112583398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000c3565b60366200027383826200032b565b5060376200028282826200032b565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002b257607f821691505b602082108103620002d357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028257600081815260208120601f850160051c81016020861015620003025750805b601f850160051c820191505b8181101562000323578281556001016200030e565b505050505050565b81516001600160401b0381111562000347576200034762000287565b6200035f816200035884546200029d565b84620002d9565b602080601f8311600181146200039757600084156200037e5750858301515b600019600386901b1c1916600185901b17855562000323565b600085815260208120601f198616915b82811015620003c857888601518255948401946001909101908401620003a7565b5085821015620003e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d1e80620004076000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101f2578063dd62ed3e14610205578063de1b75ec14610218578063fceb3d761461024057600080fd5b806370a08231146101a657806395d89b41146101cf578063962ca496146101d7578063a457c2d7146101df57600080fd5b806318160ddd116100d357806318160ddd1461015f57806323b872dd14610171578063313ce56714610184578063395093511461019357600080fd5b806306fdde03146100fa578063095ea7b3146101185780631526fe271461013b575b600080fd5b610102610242565b60405161010f9190610a14565b60405180910390f35b61012b610126366004610a4a565b6102d4565b604051901515815260200161010f565b61014e610149366004610a74565b6102ee565b60405161010f959493929190610a8d565b6035545b60405190815260200161010f565b61012b61017f366004610b8a565b61049a565b6040516012815260200161010f565b61012b6101a1366004610a4a565b6104be565b6101636101b4366004610bc6565b6001600160a01b031660009081526033602052604090205490565b6101026104e0565b6101636104ef565b61012b6101ed366004610a4a565b610501565b61012b610200366004610a4a565b610581565b610163610213366004610be1565b61058f565b61022b610226366004610c14565b6105ba565b6040805192835260208301919091520161010f565b005b60606036805461025190610c36565b80601f016020809104026020016040519081016040528092919081815260200182805461027d90610c36565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b5050505050905090565b6000336102e2818585610625565b60019150505b92915050565b606581815481106102fe57600080fd5b60009182526020918290206040805161012081018252601190930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b90910416918301919091526001810154909216606082015260028201805492935090918391608084019161037790610c36565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610c36565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050509183525050600382015460208083019190915260048301546040808401919091526005840154606080850191909152600690940154608093840152805180850182526007870154815260088701548184015260098701548183015281519384018252600a8701548452600b87015492840192909252600c86015490830152600d85015460ff908116151593830193909352600f850154601090950154939490939192169085565b6000336104a8858285610749565b6104b38585856107c3565b506001949350505050565b6000336102e28185856104d1838361058f565b6104db9190610c86565b610625565b60606037805461025190610c36565b6000806104fb8161096e565b91505090565b6000338161050f828661058f565b9050838110156105745760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104b38286868403610625565b6000336102e28185856107c3565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600080606583815481106105d0576105d0610c99565b60009182526020909120600460119092020101546105f6670de0b6b3a764000086610caf565b6106009190610cc6565b905061060d816005610caf565b91509250929050565b6001600160a01b03163b151590565b6001600160a01b0383166106875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056b565b6001600160a01b0382166106e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610755848461058f565b905060001981146107bd57818110156107b05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161056b565b6107bd8484848403610625565b50505050565b6001600160a01b0383166108275760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056b565b6001600160a01b0382166108895760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056b565b6001600160a01b038316600090815260336020526040902054818110156109015760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161056b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109619086815260200190565b60405180910390a36107bd565b600080670de0b6b3a764000061098c84670928ca80cfc20000610caf565b6109969190610cc6565b6109a89067016345785d8a0000610c86565b905060006109c5826ec097ce7bc90715b34b9f1000000000610cc6565b90505050919050565b6000815180845260005b818110156109f4576020818501810151868301820152016109d8565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610a2760208301846109ce565b9392505050565b80356001600160a01b0381168114610a4557600080fd5b919050565b60008060408385031215610a5d57600080fd5b610a6683610a2e565b946020939093013593505050565b600060208284031215610a8657600080fd5b5035919050565b6000610140808352610aaa81840189516001600160a01b03169052565b50602087015160ff16610160830152604087015161ffff1661018083015260608701516001600160a01b03166101a083015260808701516101206101c08401819052610afa6102608501836109ce565b915060a08901516101e085015260c089015161020085015260e0890151610220850152610100808a0151610240860152829350610b4e602086018a8051825260208082015190830152604090810151910152565b87516080860152602088015160a0860152604088015160c0860152606090970151151560e0850152941515958301959095529201529392505050565b600080600060608486031215610b9f57600080fd5b610ba884610a2e565b9250610bb660208501610a2e565b9150604084013590509250925092565b600060208284031215610bd857600080fd5b610a2782610a2e565b60008060408385031215610bf457600080fd5b610bfd83610a2e565b9150610c0b60208401610a2e565b90509250929050565b60008060408385031215610c2757600080fd5b50508035926020909101359150565b600181811c90821680610c4a57607f821691505b602082108103610c6a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102e8576102e8610c70565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176102e8576102e8610c70565b600082610ce357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122018c074e9fc913796fb2ccc0aa6e3920610eb78b3f7b7bb8497f40a86ccfa3df264736f6c63430008110033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
    "sourceMap": "1657:2546:36:-:0;;;1910:77;;;;;;;;;-1:-1:-1;3268:19:9;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:9;;3369:1;3354:12;;;;:16;3336:34;3335:124;;;;3393:44;3431:4;3393:29;;;;;:44;;:::i;:::-;3392:45;:66;;;;-1:-1:-1;3441:12:9;;;;;:17;3392:66;3314:217;;;;-1:-1:-1;;;3314:217:9;;216:2:44;3314:217:9;;;198:21:44;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:44;;;338:44;399:19;;3314:217:9;;;;;;;;;3541:12;:16;;-1:-1:-1;;3541:16:9;3556:1;3541:16;;;3567:65;;;;3601:13;:20;;-1:-1:-1;;3601:20:9;;;;;3567:65;1946:34:36::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1946:34:36::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1946:34:36::1;;::::0;:12:::1;;;:34;;:::i;:::-;3656:14:9::0;3652:99;;;3702:5;3686:21;;-1:-1:-1;;3686:21:9;;;3726:14;;-1:-1:-1;581:36:44;;3726:14:9;;569:2:44;554:18;3726:14:9;;;;;;;3652:99;3258:499;1657:2546:36;;1186:320:14;-1:-1:-1;;;;;1476:19:14;;:23;;;1186:320::o;2114:147:11:-;5379:13:9;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:9;;830:2:44;5371:69:9;;;812:21:44;869:2;849:18;;;842:30;-1:-1:-1;;;;;;;;;;;888:18:44;;;881:62;-1:-1:-1;;;959:18:44;;;952:41;1010:19;;5371:69:9;628:407:44;5371:69:9;2216:38:11::1;2239:5:::0;2246:7;2216:22:::1;:38::i;:::-;2114:147:::0;;:::o;2267:159::-;5379:13:9;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:9;;830:2:44;5371:69:9;;;812:21:44;869:2;849:18;;;842:30;-1:-1:-1;;;;;;;;;;;888:18:44;;;881:62;-1:-1:-1;;;959:18:44;;;952:41;1010:19;;5371:69:9;628:407:44;5371:69:9;2379:5:11::1;:13;2387:5:::0;2379;:13:::1;:::i;:::-;-1:-1:-1::0;2402:7:11::1;:17;2412:7:::0;2402;:17:::1;:::i;:::-;;2267:159:::0;;:::o;1040:127:44:-;1101:10;1096:3;1092:20;1089:1;1082:31;1132:4;1129:1;1122:15;1156:4;1153:1;1146:15;1172:380;1251:1;1247:12;;;;1294;;;1315:61;;1369:4;1361:6;1357:17;1347:27;;1315:61;1422:2;1414:6;1411:14;1391:18;1388:38;1385:161;;1468:10;1463:3;1459:20;1456:1;1449:31;1503:4;1500:1;1493:15;1531:4;1528:1;1521:15;1385:161;;1172:380;;;:::o;1683:545::-;1785:2;1780:3;1777:11;1774:448;;;1821:1;1846:5;1842:2;1835:17;1891:4;1887:2;1877:19;1961:2;1949:10;1945:19;1942:1;1938:27;1932:4;1928:38;1997:4;1985:10;1982:20;1979:47;;;-1:-1:-1;2020:4:44;1979:47;2075:2;2070:3;2066:12;2063:1;2059:20;2053:4;2049:31;2039:41;;2130:82;2148:2;2141:5;2138:13;2130:82;;;2193:17;;;2174:1;2163:13;2130:82;;;2134:3;;;1683:545;;;:::o;2404:1352::-;2524:10;;-1:-1:-1;;;;;2546:30:44;;2543:56;;;2579:18;;:::i;:::-;2608:97;2698:6;2658:38;2690:4;2684:11;2658:38;:::i;:::-;2652:4;2608:97;:::i;:::-;2760:4;;2824:2;2813:14;;2841:1;2836:663;;;;3543:1;3560:6;3557:89;;;-1:-1:-1;3612:19:44;;;3606:26;3557:89;-1:-1:-1;;2361:1:44;2357:11;;;2353:24;2349:29;2339:40;2385:1;2381:11;;;2336:57;3659:81;;2806:944;;2836:663;1630:1;1623:14;;;1667:4;1654:18;;-1:-1:-1;;2872:20:44;;;2990:236;3004:7;3001:1;2998:14;2990:236;;;3093:19;;;3087:26;3072:42;;3185:27;;;;3153:1;3141:14;;;;3020:19;;2990:236;;;2994:3;3254:6;3245:7;3242:19;3239:201;;;3315:19;;;3309:26;-1:-1:-1;;3398:1:44;3394:14;;;3410:3;3390:24;3386:37;3382:42;3367:58;3352:74;;3239:201;-1:-1:-1;;;;;3486:1:44;3470:14;;;3466:22;3453:36;;-1:-1:-1;2404:1352:44:o;:::-;1657:2546:36;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101f2578063dd62ed3e14610205578063de1b75ec14610218578063fceb3d761461024057600080fd5b806370a08231146101a657806395d89b41146101cf578063962ca496146101d7578063a457c2d7146101df57600080fd5b806318160ddd116100d357806318160ddd1461015f57806323b872dd14610171578063313ce56714610184578063395093511461019357600080fd5b806306fdde03146100fa578063095ea7b3146101185780631526fe271461013b575b600080fd5b610102610242565b60405161010f9190610a14565b60405180910390f35b61012b610126366004610a4a565b6102d4565b604051901515815260200161010f565b61014e610149366004610a74565b6102ee565b60405161010f959493929190610a8d565b6035545b60405190815260200161010f565b61012b61017f366004610b8a565b61049a565b6040516012815260200161010f565b61012b6101a1366004610a4a565b6104be565b6101636101b4366004610bc6565b6001600160a01b031660009081526033602052604090205490565b6101026104e0565b6101636104ef565b61012b6101ed366004610a4a565b610501565b61012b610200366004610a4a565b610581565b610163610213366004610be1565b61058f565b61022b610226366004610c14565b6105ba565b6040805192835260208301919091520161010f565b005b60606036805461025190610c36565b80601f016020809104026020016040519081016040528092919081815260200182805461027d90610c36565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b5050505050905090565b6000336102e2818585610625565b60019150505b92915050565b606581815481106102fe57600080fd5b60009182526020918290206040805161012081018252601190930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b90910416918301919091526001810154909216606082015260028201805492935090918391608084019161037790610c36565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610c36565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050509183525050600382015460208083019190915260048301546040808401919091526005840154606080850191909152600690940154608093840152805180850182526007870154815260088701548184015260098701548183015281519384018252600a8701548452600b87015492840192909252600c86015490830152600d85015460ff908116151593830193909352600f850154601090950154939490939192169085565b6000336104a8858285610749565b6104b38585856107c3565b506001949350505050565b6000336102e28185856104d1838361058f565b6104db9190610c86565b610625565b60606037805461025190610c36565b6000806104fb8161096e565b91505090565b6000338161050f828661058f565b9050838110156105745760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104b38286868403610625565b6000336102e28185856107c3565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600080606583815481106105d0576105d0610c99565b60009182526020909120600460119092020101546105f6670de0b6b3a764000086610caf565b6106009190610cc6565b905061060d816005610caf565b91509250929050565b6001600160a01b03163b151590565b6001600160a01b0383166106875760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161056b565b6001600160a01b0382166106e85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161056b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610755848461058f565b905060001981146107bd57818110156107b05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161056b565b6107bd8484848403610625565b50505050565b6001600160a01b0383166108275760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161056b565b6001600160a01b0382166108895760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161056b565b6001600160a01b038316600090815260336020526040902054818110156109015760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161056b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109619086815260200190565b60405180910390a36107bd565b600080670de0b6b3a764000061098c84670928ca80cfc20000610caf565b6109969190610cc6565b6109a89067016345785d8a0000610c86565b905060006109c5826ec097ce7bc90715b34b9f1000000000610cc6565b90505050919050565b6000815180845260005b818110156109f4576020818501810151868301820152016109d8565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610a2760208301846109ce565b9392505050565b80356001600160a01b0381168114610a4557600080fd5b919050565b60008060408385031215610a5d57600080fd5b610a6683610a2e565b946020939093013593505050565b600060208284031215610a8657600080fd5b5035919050565b6000610140808352610aaa81840189516001600160a01b03169052565b50602087015160ff16610160830152604087015161ffff1661018083015260608701516001600160a01b03166101a083015260808701516101206101c08401819052610afa6102608501836109ce565b915060a08901516101e085015260c089015161020085015260e0890151610220850152610100808a0151610240860152829350610b4e602086018a8051825260208082015190830152604090810151910152565b87516080860152602088015160a0860152604088015160c0860152606090970151151560e0850152941515958301959095529201529392505050565b600080600060608486031215610b9f57600080fd5b610ba884610a2e565b9250610bb660208501610a2e565b9150604084013590509250925092565b600060208284031215610bd857600080fd5b610a2782610a2e565b60008060408385031215610bf457600080fd5b610bfd83610a2e565b9150610c0b60208401610a2e565b90509250929050565b60008060408385031215610c2757600080fd5b50508035926020909101359150565b600181811c90821680610c4a57607f821691505b602082108103610c6a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102e8576102e8610c70565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176102e8576102e8610c70565b600082610ce357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122018c074e9fc913796fb2ccc0aa6e3920610eb78b3f7b7bb8497f40a86ccfa3df264736f6c63430008110033",
    "sourceMap": "1657:2546:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;1365:14:44;;1358:22;1340:41;;1328:2;1313:18;4768:197:11;1200:187:44;1877:26:36;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;3579:106:11:-;3666:12;;3579:106;;;4118:25:44;;;4106:2;4091:18;3579:106:11;3972:177:44;5527:286:11;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;4629:36:44;;4617:2;4602:18;3428:91:11;4487:184:44;6208:234:11;;;;;;:::i;:::-;;:::i;3743:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:11;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2702:102;;;:::i;2780:155:36:-;;;:::i;6929:427:11:-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;4311:149::-;;;;;;:::i;:::-;;:::i;2941:294:36:-;;;;;;:::i;:::-;;:::i;:::-;;;;5559:25:44;;;5615:2;5600:18;;5593:34;;;;5532:18;2941:294:36;5385:248:44;3241:131:36;;2491:98:11;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;920:10:15;4905:32:11;920:10:15;4921:7:11;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;;:::o;1877:26:36:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1877:26:36;;;;;;-1:-1:-1;;;1877:26:36;;;;;;;;;;;-1:-1:-1;;;1877:26:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1877:26:36;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1877:26:36;;;-1:-1:-1;;1877:26:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5527:286:11:-;5654:4;920:10:15;5710:38:11;5726:4;920:10:15;5741:6:11;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:11;;5527:286;-1:-1:-1;;;;5527:286:11:o;6208:234::-;6296:4;920:10:15;6350:64:11;920:10:15;6366:7:11;6403:10;6375:25;920:10:15;6366:7:11;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;2780:155:36:-;2821:14;2878:9;2906:22;2926:1;2906:19;:22::i;:::-;2897:31;;2837:98;2780:155;:::o;6929:427:11:-;7022:4;920:10:15;7022:4:11;7103:25;920:10:15;7120:7:11;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:11;;6487:2:44;7138:85:11;;;6469:21:44;6526:2;6506:18;;;6499:30;6565:34;6545:18;;;6538:62;-1:-1:-1;;;6616:18:44;;;6609:35;6661:19;;7138:85:11;;;;;;;;;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;920:10:15;4197:28:11;920:10:15;4214:2:11;4218:6;4197:9;:28::i;4311:149::-;-1:-1:-1;;;;;4426:18:11;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;2941:294:36:-;3046:9;3057:22;3159:8;3168:7;3159:17;;;;;;;;:::i;:::-;;;;;;;;;:37;:17;;;;;:37;;3125:18;1840:4;3125:6;:18;:::i;:::-;3124:72;;;;:::i;:::-;3095:101;-1:-1:-1;3210:18:36;3095:101;3210:1;:18;:::i;:::-;3206:22;;2941:294;;;;;:::o;1186:320:14:-;-1:-1:-1;;;;;1476:19:14;;:23;;;1186:320::o;10841:370:11:-;-1:-1:-1;;;;;10972:19:11;;10964:68;;;;-1:-1:-1;;;10964:68:11;;7420:2:44;10964:68:11;;;7402:21:44;7459:2;7439:18;;;7432:30;7498:34;7478:18;;;7471:62;-1:-1:-1;;;7549:18:44;;;7542:34;7593:19;;10964:68:11;7218:400:44;10964:68:11;-1:-1:-1;;;;;11050:21:11;;11042:68;;;;-1:-1:-1;;;11042:68:11;;7825:2:44;11042:68:11;;;7807:21:44;7864:2;7844:18;;;7837:30;7903:34;7883:18;;;7876:62;-1:-1:-1;;;7954:18:44;;;7947:32;7996:19;;11042:68:11;7623:398:44;11042:68:11;-1:-1:-1;;;;;11121:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;4118:25:44;;;11172:32:11;;4091:18:44;11172:32:11;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:11;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:11;;8228:2:44;11741:68:11;;;8210:21:44;8267:2;8247:18;;;8240:30;8306:31;8286:18;;;8279:59;8355:18;;11741:68:11;8026:353:44;11741:68:11;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:11;;7928:68;;;;-1:-1:-1;;;7928:68:11;;8586:2:44;7928:68:11;;;8568:21:44;8625:2;8605:18;;;8598:30;8664:34;8644:18;;;8637:62;-1:-1:-1;;;8715:18:44;;;8708:35;8760:19;;7928:68:11;8384:401:44;7928:68:11;-1:-1:-1;;;;;8014:16:11;;8006:64;;;;-1:-1:-1;;;8006:64:11;;8992:2:44;8006:64:11;;;8974:21:44;9031:2;9011:18;;;9004:30;9070:34;9050:18;;;9043:62;-1:-1:-1;;;9121:18:44;;;9114:33;9164:19;;8006:64:11;8790:399:44;8006:64:11;-1:-1:-1;;;;;8152:15:11;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:11;;9396:2:44;8177:72:11;;;9378:21:44;9435:2;9415:18;;;9408:30;9474:34;9454:18;;;9447:62;-1:-1:-1;;;9525:18:44;;;9518:36;9571:19;;8177:72:11;9194:402:44;8177:72:11;-1:-1:-1;;;;;8283:15:11;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;4118:25:44;;4106:2;4091:18;;3972:177;8547:26:11;;;;;;;;8584:37;12517:121;2528:204:36;2592:9;;2656:4;2637:15;2650:2;2637:10;:15;:::i;:::-;2636:24;;;;:::i;:::-;2635:38;;2664:9;2635:38;:::i;:::-;2613:60;-1:-1:-1;2683:9:36;2695:30;2613:60;2696:14;2695:30;:::i;:::-;2683:42;;2603:129;;2528:204;;;:::o;14:423:44:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:44:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:44;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:44:o;1392:180::-;1451:6;1504:2;1492:9;1483:7;1479:23;1475:32;1472:52;;;1520:1;1517;1510:12;1472:52;-1:-1:-1;1543:23:44;;1392:180;-1:-1:-1;1392:180:44:o;2368:1599::-;2748:4;2777:3;2807:2;2796:9;2789:21;2819:61;2876:2;2865:9;2861:18;2852:6;2846:13;-1:-1:-1;;;;;1651:31:44;1639:44;;1577:112;2819:61;-1:-1:-1;2927:4:44;2915:17;;2909:24;1761:4;1750:16;2988:3;2973:19;;1738:29;3042:4;3030:17;;3024:24;1850:6;1839:18;3106:3;3091:19;;1827:31;3160:4;3148:17;;3142:24;-1:-1:-1;;;;;1651:31:44;3233:3;3218:19;;1639:44;3287:4;3275:17;;3269:24;3312:6;3349:3;3334:19;;3327:31;;;3381:54;3430:3;3415:19;;3269:24;3381:54;:::i;:::-;3367:68;;3490:4;3482:6;3478:17;3472:24;3466:3;3455:9;3451:19;3444:53;3552:4;3544:6;3540:17;3534:24;3528:3;3517:9;3513:19;3506:53;3614:4;3606:6;3602:17;3596:24;3590:3;3579:9;3575:19;3568:53;3640:6;3701:2;3693:6;3689:15;3683:22;3677:3;3666:9;3662:19;3655:51;3723:6;3715:14;;3738:59;3791:4;3780:9;3776:20;3768:6;1946:12;;1934:25;;2008:4;1997:16;;;1991:23;1975:14;;;1968:47;2064:4;2053:16;;;2047:23;2031:14;;2024:47;1869:208;3738:59;2160:12;;3860:4;3845:20;;2148:25;2222:4;2211:16;;2205:23;2189:14;;;2182:47;2278:4;2267:16;;2261:23;2245:14;;;2238:47;2348:4;2337:16;;;2331:23;2324:31;2317:39;2301:14;;;2294:63;1174:13;;1167:21;3899:18;;;1155:34;;;;3934:18;;3927:34;2368:1599;;-1:-1:-1;;;2368:1599:44:o;4154:328::-;4231:6;4239;4247;4300:2;4288:9;4279:7;4275:23;4271:32;4268:52;;;4316:1;4313;4306:12;4268:52;4339:29;4358:9;4339:29;:::i;:::-;4329:39;;4387:38;4421:2;4410:9;4406:18;4387:38;:::i;:::-;4377:48;;4472:2;4461:9;4457:18;4444:32;4434:42;;4154:328;;;;;:::o;4676:186::-;4735:6;4788:2;4776:9;4767:7;4763:23;4759:32;4756:52;;;4804:1;4801;4794:12;4756:52;4827:29;4846:9;4827:29;:::i;4867:260::-;4935:6;4943;4996:2;4984:9;4975:7;4971:23;4967:32;4964:52;;;5012:1;5009;5002:12;4964:52;5035:29;5054:9;5035:29;:::i;:::-;5025:39;;5083:38;5117:2;5106:9;5102:18;5083:38;:::i;:::-;5073:48;;4867:260;;;;;:::o;5132:248::-;5200:6;5208;5261:2;5249:9;5240:7;5236:23;5232:32;5229:52;;;5277:1;5274;5267:12;5229:52;-1:-1:-1;;5300:23:44;;;5370:2;5355:18;;;5342:32;;-1:-1:-1;5132:248:44:o;5638:380::-;5717:1;5713:12;;;;5760;;;5781:61;;5835:4;5827:6;5823:17;5813:27;;5781:61;5888:2;5880:6;5877:14;5857:18;5854:38;5851:161;;5934:10;5929:3;5925:20;5922:1;5915:31;5969:4;5966:1;5959:15;5997:4;5994:1;5987:15;5851:161;;5638:380;;;:::o;6023:127::-;6084:10;6079:3;6075:20;6072:1;6065:31;6115:4;6112:1;6105:15;6139:4;6136:1;6129:15;6155:125;6220:9;;;6241:10;;;6238:36;;;6254:18;;:::i;6691:127::-;6752:10;6747:3;6743:20;6740:1;6733:31;6783:4;6780:1;6773:15;6807:4;6804:1;6797:15;6823:168;6896:9;;;6927;;6944:15;;;6938:22;;6924:37;6914:71;;6965:18;;:::i;6996:217::-;7036:1;7062;7052:132;;7106:10;7101:3;7097:20;7094:1;7087:31;7141:4;7138:1;7131:15;7169:4;7166:1;7159:15;7052:132;-1:-1:-1;7198:9:44;;6996:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "convertStakeToPoolMeasurements(uint256,uint256)": "de1b75ec",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getCurrentAPY()": "962ca496",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "poolInfo(uint256)": "1526fe27",
    "seeEffectiveStakingAPY()": "fceb3d76",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"}],\"name\":\"convertStakeToPoolMeasurements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"apy\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.GeneralInfo\",\"name\":\"generalInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"requiredPremiumBalancePerPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumAvailable\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.PremiumInfo\",\"name\":\"premiumInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalScheduledAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawalExecuted\",\"type\":\"bool\"}],\"internalType\":\"struct ISaloon.TimelockInfo\",\"name\":\"poolTimelock\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"freezeTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seeEffectiveStakingAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BountyToken.sol\":\"BountyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":decimath/=lib/decimath/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31\",\"dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a\",\"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622\",\"dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/prb-math/src/Core.sol\":{\"keccak256\":\"0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc\",\"dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo\"]},\"lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4\",\"dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ\"]},\"src/BountyToken.sol\":{\"keccak256\":\"0x51159ac0ff09c3100c56b62d9c4aebd770b83a766e0130067b81a3438d421fe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0b245ae55909dcd2dfe75e9221da047df75876e253b47486c04d6775d074a28\",\"dweb:/ipfs/Qmaqs8LzWxLUB7onMrJz4yyarza1ZVCg7crgPq8n4nEAvH\"]},\"src/ISaloon.sol\":{\"keccak256\":\"0xd0d5f1e9c64556982c25afecfb2264a8d84f636fc55269c87c982b52bd97c78f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa9d8f7bcbcbf7248877bbda6121a4c60641ec27ffc16459bce75e18d42030cb\",\"dweb:/ipfs/Qmasrvzwn9cgdGv63N5TBrSVcK1KhUbEpPgxF3PYUwUNd5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_poolID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "convertStakeToPoolMeasurements",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolPercentage",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getCurrentAPY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "struct ISaloon.GeneralInfo",
              "name": "generalInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "tokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "apy",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "projectWallet",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "projectName",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "projectDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "poolCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "multiplier",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.PremiumInfo",
              "name": "premiumInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "requiredPremiumBalancePerPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumAvailable",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.TimelockInfo",
              "name": "poolTimelock",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalScheduledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrawalExecuted",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "freezeTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "seeEffectiveStakingAPY"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":decimath/=lib/decimath/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BountyToken.sol": "BountyToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1",
        "urls": [
          "bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31",
          "dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2",
        "urls": [
          "bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622",
          "dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/Core.sol": {
        "keccak256": "0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76",
        "urls": [
          "bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc",
          "dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926",
        "urls": [
          "bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4",
          "dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ"
        ],
        "license": "MIT"
      },
      "src/BountyToken.sol": {
        "keccak256": "0x51159ac0ff09c3100c56b62d9c4aebd770b83a766e0130067b81a3438d421fe7",
        "urls": [
          "bzz-raw://a0b245ae55909dcd2dfe75e9221da047df75876e253b47486c04d6775d074a28",
          "dweb:/ipfs/Qmaqs8LzWxLUB7onMrJz4yyarza1ZVCg7crgPq8n4nEAvH"
        ],
        "license": "MIT"
      },
      "src/ISaloon.sol": {
        "keccak256": "0xd0d5f1e9c64556982c25afecfb2264a8d84f636fc55269c87c982b52bd97c78f",
        "urls": [
          "bzz-raw://fa9d8f7bcbcbf7248877bbda6121a4c60641ec27ffc16459bce75e18d42030cb",
          "dweb:/ipfs/Qmasrvzwn9cgdGv63N5TBrSVcK1KhUbEpPgxF3PYUwUNd5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BountyToken.sol",
    "id": 26763,
    "exportedSymbols": {
      "AddressUpgradeable": [
        20979
      ],
      "BountyToken": [
        26762
      ],
      "ContextUpgradeable": [
        21021
      ],
      "E": [
        25126
      ],
      "ERC20Upgradeable": [
        20592
      ],
      "HALF_UNIT": [
        25137
      ],
      "IERC20": [
        22190
      ],
      "IERC20MetadataUpgradeable": [
        20695
      ],
      "IERC20Upgradeable": [
        20670
      ],
      "ISaloon": [
        26819
      ],
      "Initializable": [
        19844
      ],
      "LOG2_10": [
        25148
      ],
      "LOG2_E": [
        25159
      ],
      "MAX_UD60x18": [
        25170
      ],
      "MAX_WHOLE_UD60x18": [
        25181
      ],
      "PI": [
        25189
      ],
      "PRBMathUD60x18__AddOverflow": [
        25065
      ],
      "PRBMathUD60x18__CeilOverflow": [
        25071
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        25083
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        25077
      ],
      "PRBMathUD60x18__GmOverflow": [
        25092
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        25098
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        25104
      ],
      "PRBMathUD60x18__SubUnderflow": [
        25113
      ],
      "PRBMathUD60x18__ToUD60x18Overflow": [
        25118
      ],
      "UD60x18": [
        25057
      ],
      "UNIT": [
        25200
      ],
      "ZERO": [
        25208
      ],
      "add": [
        26058
      ],
      "and": [
        26081
      ],
      "avg": [
        25271
      ],
      "ceil": [
        25298
      ],
      "div": [
        25326
      ],
      "eq": [
        26104
      ],
      "exp": [
        25369
      ],
      "exp2": [
        25412
      ],
      "floor": [
        25424
      ],
      "frac": [
        25436
      ],
      "fromUD60x18": [
        25916
      ],
      "gm": [
        25500
      ],
      "gt": [
        26127
      ],
      "gte": [
        26150
      ],
      "inv": [
        25522
      ],
      "isZero": [
        26168
      ],
      "ln": [
        25549
      ],
      "log10": [
        25599
      ],
      "log2": [
        25700
      ],
      "lshift": [
        26191
      ],
      "lt": [
        26214
      ],
      "lte": [
        26237
      ],
      "mod": [
        26263
      ],
      "msb": [
        23394
      ],
      "mul": [
        25727
      ],
      "mulDiv": [
        23520
      ],
      "mulDiv18": [
        23563
      ],
      "neq": [
        26286
      ],
      "or": [
        26312
      ],
      "pow": [
        25789
      ],
      "powu": [
        25859
      ],
      "prbExp2": [
        24826
      ],
      "prbSqrt": [
        25047
      ],
      "rshift": [
        26335
      ],
      "sqrt": [
        25898
      ],
      "sub": [
        26361
      ],
      "toUD60x18": [
        25946
      ],
      "uHALF_UNIT": [
        25130
      ],
      "uLOG2_10": [
        25141
      ],
      "uLOG2_E": [
        25152
      ],
      "uMAX_UD60x18": [
        25163
      ],
      "uMAX_WHOLE_UD60x18": [
        25174
      ],
      "uUNIT": [
        25193
      ],
      "ud": [
        25962
      ],
      "ud60x18": [
        25978
      ],
      "uncheckedAdd": [
        26388
      ],
      "uncheckedDiv": [
        26473
      ],
      "uncheckedMul": [
        26500
      ],
      "uncheckedSub": [
        26415
      ],
      "unwrap": [
        25995
      ],
      "wrap": [
        26012
      ],
      "xor": [
        26441
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4171:36",
    "nodes": [
      {
        "id": 26625,
        "nodeType": "PragmaDirective",
        "src": "33:24:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 26626,
        "nodeType": "ImportDirective",
        "src": "59:87:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26763,
        "sourceUnit": 20593,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26627,
        "nodeType": "ImportDirective",
        "src": "147:30:36",
        "nodes": [],
        "absolutePath": "lib/prb-math/src/UD60x18.sol",
        "file": "prb-math/UD60x18.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26763,
        "sourceUnit": 26501,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26628,
        "nodeType": "ImportDirective",
        "src": "178:23:36",
        "nodes": [],
        "absolutePath": "src/ISaloon.sol",
        "file": "./ISaloon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26763,
        "sourceUnit": 26820,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26762,
        "nodeType": "ContractDefinition",
        "src": "1657:2546:36",
        "nodes": [
          {
            "id": 26635,
            "nodeType": "VariableDeclaration",
            "src": "1729:41:36",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "DEFAULT_APY",
            "nameLocation": "1746:11:36",
            "scope": 26762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26633,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1729:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "312e3036",
              "id": 26634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1760:10:36",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1060000000000000000_by_1",
                "typeString": "int_const 1060000000000000000"
              },
              "value": "1.06"
            },
            "visibility": "internal"
          },
          {
            "id": 26638,
            "nodeType": "VariableDeclaration",
            "src": "1776:29:36",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "BPS",
            "nameLocation": "1793:3:36",
            "scope": 26762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26636,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1776:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 26637,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1799:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "internal"
          },
          {
            "id": 26641,
            "nodeType": "VariableDeclaration",
            "src": "1811:33:36",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PRECISION",
            "nameLocation": "1828:9:36",
            "scope": 26762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26639,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1811:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 26640,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1840:4:36",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 26645,
            "nodeType": "VariableDeclaration",
            "src": "1877:26:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "1526fe27",
            "mutability": "mutable",
            "name": "poolInfo",
            "nameLocation": "1895:8:36",
            "scope": 26762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$26782_storage_$dyn_storage",
              "typeString": "struct ISaloon.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "id": 26643,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26642,
                  "name": "PoolInfo",
                  "nameLocations": [
                    "1877:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26782,
                  "src": "1877:8:36"
                },
                "referencedDeclaration": 26782,
                "src": "1877:8:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$26782_storage_ptr",
                  "typeString": "struct ISaloon.PoolInfo"
                }
              },
              "id": 26644,
              "nodeType": "ArrayTypeName",
              "src": "1877:10:36",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$26782_storage_$dyn_storage_ptr",
                "typeString": "struct ISaloon.PoolInfo[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26656,
            "nodeType": "FunctionDefinition",
            "src": "1910:77:36",
            "nodes": [],
            "body": {
              "id": 26655,
              "nodeType": "Block",
              "src": "1936:51:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "426f756e7479546f6b656e",
                        "id": 26651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1959:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5d0edcc97cafcef6691702fa0e5c5fd744ac04aaa2671cd46dd07fb17f08fed",
                          "typeString": "literal_string \"BountyToken\""
                        },
                        "value": "BountyToken"
                      },
                      {
                        "hexValue": "425454",
                        "id": 26652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bad2ddf3e2bef6c0337a80a31718cbcd0cafe63b1fe8601a77408dfc5fc7dcb9",
                          "typeString": "literal_string \"BTT\""
                        },
                        "value": "BTT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5d0edcc97cafcef6691702fa0e5c5fd744ac04aaa2671cd46dd07fb17f08fed",
                          "typeString": "literal_string \"BountyToken\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bad2ddf3e2bef6c0337a80a31718cbcd0cafe63b1fe8601a77408dfc5fc7dcb9",
                          "typeString": "literal_string \"BTT\""
                        }
                      ],
                      "id": 26650,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20027,
                      "src": "1946:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 26653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:34:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26654,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:34:36"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 26648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26647,
                  "name": "initializer",
                  "nameLocations": [
                    "1924:11:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19746,
                  "src": "1924:11:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1924:11:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:2:36"
            },
            "returnParameters": {
              "id": 26649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1936:0:36"
            },
            "scope": 26762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26682,
            "nodeType": "FunctionDefinition",
            "src": "2230:193:36",
            "nodes": [],
            "body": {
              "id": 26681,
              "nodeType": "Block",
              "src": "2302:121:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26665,
                      "mutability": "mutable",
                      "name": "m",
                      "nameLocation": "2320:1:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 26681,
                      "src": "2312:9:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26664,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2312:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26672,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 26668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 26666,
                            "name": "_targetAPY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26659,
                            "src": "2325:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 26667,
                            "name": "PRECISION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26641,
                            "src": "2338:9:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2325:22:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 26669,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2324:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 26670,
                      "name": "DEFAULT_APY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26635,
                      "src": "2351:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2324:38:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2312:50:36"
                },
                {
                  "expression": {
                    "id": 26679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 26673,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26645,
                            "src": "2372:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$26782_storage_$dyn_storage",
                              "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 26675,
                          "indexExpression": {
                            "id": 26674,
                            "name": "_poolID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26661,
                            "src": "2381:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2372:17:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$26782_storage",
                            "typeString": "struct ISaloon.PoolInfo storage ref"
                          }
                        },
                        "id": 26676,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2390:11:36",
                        "memberName": "generalInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26768,
                        "src": "2372:29:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralInfo_$26802_storage",
                          "typeString": "struct ISaloon.GeneralInfo storage ref"
                        }
                      },
                      "id": 26677,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2402:10:36",
                      "memberName": "multiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26801,
                      "src": "2372:40:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26678,
                      "name": "m",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26665,
                      "src": "2415:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2372:44:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26680,
                  "nodeType": "ExpressionStatement",
                  "src": "2372:44:36"
                }
              ]
            },
            "documentation": {
              "id": 26657,
              "nodeType": "StructuredDocumentation",
              "src": "2095:130:36",
              "text": "@param _targetAPY the advertised average APY of a bounty\n @param _poolID poolID that the multiplier will be assigned to"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMultiplier",
            "nameLocation": "2239:16:36",
            "parameters": {
              "id": 26662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26659,
                  "mutability": "mutable",
                  "name": "_targetAPY",
                  "nameLocation": "2264:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26682,
                  "src": "2256:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26661,
                  "mutability": "mutable",
                  "name": "_poolID",
                  "nameLocation": "2284:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26682,
                  "src": "2276:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2255:37:36"
            },
            "returnParameters": {
              "id": 26663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2302:0:36"
            },
            "scope": 26762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26711,
            "nodeType": "FunctionDefinition",
            "src": "2528:204:36",
            "nodes": [],
            "body": {
              "id": 26710,
              "nodeType": "Block",
              "src": "2603:129:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26690,
                      "mutability": "mutable",
                      "name": "denominator",
                      "nameLocation": "2621:11:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 26710,
                      "src": "2613:19:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2613:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26700,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 26696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 26693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "302e3636",
                                  "id": 26691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2637:10:36",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_660000000000000000_by_1",
                                    "typeString": "int_const 660000000000000000"
                                  },
                                  "value": "0.66"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 26692,
                                  "name": "_x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26684,
                                  "src": "2650:2:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2637:15:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 26694,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2636:17:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 26695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2656:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "2636:24:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 26697,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2635:26:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 26698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2664:9:36",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "2635:38:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2613:60:36"
                },
                {
                  "assignments": [
                    26702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26702,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "2691:1:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 26710,
                      "src": "2683:9:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2683:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26709,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000...(29 digits omitted)...0000"
                          },
                          "id": 26705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 26703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2696:7:36",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 26704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2706:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "2696:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000...(29 digits omitted)...0000"
                          }
                        }
                      ],
                      "id": 26706,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2695:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                        "typeString": "int_const 1000...(29 digits omitted)...0000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 26707,
                      "name": "denominator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26690,
                      "src": "2714:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2695:30:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2683:42:36"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "curveImplementation",
            "nameLocation": "2537:19:36",
            "parameters": {
              "id": 26685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26684,
                  "mutability": "mutable",
                  "name": "_x",
                  "nameLocation": "2565:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26711,
                  "src": "2557:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2556:12:36"
            },
            "returnParameters": {
              "id": 26688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26687,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "2600:1:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26711,
                  "src": "2592:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2591:11:36"
            },
            "scope": 26762,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26726,
            "nodeType": "FunctionDefinition",
            "src": "2780:155:36",
            "nodes": [],
            "body": {
              "id": 26725,
              "nodeType": "Block",
              "src": "2837:98:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    26717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26717,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "2886:1:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 26725,
                      "src": "2878:9:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26716,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2878:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26718,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2878:9:36"
                },
                {
                  "expression": {
                    "id": 26723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26719,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26714,
                      "src": "2897:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26721,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26717,
                          "src": "2926:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 26720,
                        "name": "curveImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26711,
                        "src": "2906:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 26722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2906:22:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2897:31:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26724,
                  "nodeType": "ExpressionStatement",
                  "src": "2897:31:36"
                }
              ]
            },
            "functionSelector": "962ca496",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentAPY",
            "nameLocation": "2789:13:36",
            "parameters": {
              "id": 26712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2802:2:36"
            },
            "returnParameters": {
              "id": 26715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26714,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "2829:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26726,
                  "src": "2821:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:16:36"
            },
            "scope": 26762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26757,
            "nodeType": "FunctionDefinition",
            "src": "2941:294:36",
            "nodes": [],
            "body": {
              "id": 26756,
              "nodeType": "Block",
              "src": "3085:150:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26737,
                      "name": "poolPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26735,
                      "src": "3095:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 26740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 26738,
                              "name": "_stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26728,
                              "src": "3125:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 26739,
                              "name": "PRECISION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26641,
                              "src": "3134:9:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3125:18:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 26741,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3124:20:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 26742,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26645,
                              "src": "3159:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$26782_storage_$dyn_storage",
                                "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                              }
                            },
                            "id": 26744,
                            "indexExpression": {
                              "id": 26743,
                              "name": "_poolID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26730,
                              "src": "3168:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3159:17:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$26782_storage",
                              "typeString": "struct ISaloon.PoolInfo storage ref"
                            }
                          },
                          "id": 26745,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3177:11:36",
                          "memberName": "generalInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26768,
                          "src": "3159:29:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GeneralInfo_$26802_storage",
                            "typeString": "struct ISaloon.GeneralInfo storage ref"
                          }
                        },
                        "id": 26746,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3189:7:36",
                        "memberName": "poolCap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26797,
                        "src": "3159:37:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3124:72:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3095:101:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26749,
                  "nodeType": "ExpressionStatement",
                  "src": "3095:101:36"
                },
                {
                  "expression": {
                    "id": 26754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26750,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26733,
                      "src": "3206:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "35",
                        "id": 26751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 26752,
                        "name": "poolPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26735,
                        "src": "3214:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3210:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3206:22:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26755,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:22:36"
                }
              ]
            },
            "functionSelector": "de1b75ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertStakeToPoolMeasurements",
            "nameLocation": "2950:30:36",
            "parameters": {
              "id": 26731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26728,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "2989:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26757,
                  "src": "2981:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26730,
                  "mutability": "mutable",
                  "name": "_poolID",
                  "nameLocation": "3005:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26757,
                  "src": "2997:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2980:33:36"
            },
            "returnParameters": {
              "id": 26736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26733,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3054:1:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26757,
                  "src": "3046:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26735,
                  "mutability": "mutable",
                  "name": "poolPercentage",
                  "nameLocation": "3065:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 26757,
                  "src": "3057:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3045:35:36"
            },
            "scope": 26762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26761,
            "nodeType": "FunctionDefinition",
            "src": "3241:131:36",
            "nodes": [],
            "body": {
              "id": 26760,
              "nodeType": "Block",
              "src": "3282:90:36",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "fceb3d76",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "seeEffectiveStakingAPY",
            "nameLocation": "3250:22:36",
            "parameters": {
              "id": 26758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3272:2:36"
            },
            "returnParameters": {
              "id": 26759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3282:0:36"
            },
            "scope": 26762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26629,
              "name": "ISaloon",
              "nameLocations": [
                "1681:7:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26819,
              "src": "1681:7:36"
            },
            "id": 26630,
            "nodeType": "InheritanceSpecifier",
            "src": "1681:7:36"
          },
          {
            "baseName": {
              "id": 26631,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "1690:16:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20592,
              "src": "1690:16:36"
            },
            "id": 26632,
            "nodeType": "InheritanceSpecifier",
            "src": "1690:16:36"
          }
        ],
        "canonicalName": "BountyToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26762,
          20592,
          20695,
          20670,
          21021,
          19844,
          26819
        ],
        "name": "BountyToken",
        "nameLocation": "1666:11:36",
        "scope": 26763,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 36
}