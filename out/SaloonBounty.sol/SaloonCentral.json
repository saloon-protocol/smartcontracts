{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "BountyBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "hunter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BountyPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenDecimals",
          "type": "uint256"
        }
      ],
      "name": "NewBountyDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PremiumBilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOrUnstakeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "referralPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "tokenWhitelistUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeStrategies",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_projectWallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_projectName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_referralFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_referralEndTime",
          "type": "uint256"
        }
      ],
      "name": "addNewBountyPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "billPremium",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        }
      ],
      "name": "calcRequiredPremiumBalancePerPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requiredPremiumBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectAllReferralProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saloonWallet",
          "type": "address"
        }
      ],
      "name": "collectAllSaloonProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "collectReferralProfit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_saloonWallet",
          "type": "address"
        }
      ],
      "name": "collectSaloonProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "extendReferralPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategyFactory",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minTokenStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "xDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastClaimedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pidNFTList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pidStrategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "apy",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "projectName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scalingMultiplier",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.GeneralInfo",
          "name": "generalInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "projectDepositHeld",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "projectDepositInStrategy",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.DepositInfo",
          "name": "depositInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "premiumBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premiumAvailable",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.PremiumInfo",
          "name": "premiumInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalScheduledAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "withdrawalExecuted",
              "type": "bool"
            }
          ],
          "internalType": "struct ISaloon.TimelockInfo",
          "name": "poolTimelock",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "currentX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentY",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "unstakedTokens",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ISaloon.CurveInfo",
          "name": "curveInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "referralFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.ReferralInfo",
          "name": "referralInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "freezeTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "receiveStrategyYield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonBountyProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonPremiumProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonStrategyProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyAddressToPid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_minStakeAmount",
          "type": "uint256"
        }
      ],
      "name": "updateTokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "viewBountyBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "$4defa815a6c8401eda00ac6be9b95d3cdb$__9063fc76fff390608401606060405180830381865af4158015611c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c729190612dd5565b885492955090935091506001600160a01b0316611c90828285611fdb565b6001600160a01b0381166000908152610100602052604081208054869290611cb9908490612d89565b9091555060009050611ccb8688612b62565b905080886008016001016000828254611ce49190612d89565b90915550506040518781528a907fadb049ad2d09be3db90459a16aef1ad0a4d89e8fdcc1ade9429d6cc55abbcd2b9060200160405180910390a250505050505050505050565b6110d0611a5a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d6a57611d658361202c565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611dc4575060408051601f3d908101601f19168201909252611dc191810190612e0e565b60015b611e275760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016109be565b600080516020612ea38339815191528114611e965760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016109be565b50611d658383836120c8565b6040516001600160a01b038316602482015260448101829052600090610b9390859063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120f3565b603380546001600160a01b038381166001600160a01b03198084168217909455603480549094169093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611f8c5760405162461bcd60e51b81526004016109be90612e27565b61179e6121c5565b6040516001600160a01b0380851660248301528316604482015260648101829052600090611fcf9086906323b872dd60e01b90608401611ed1565b5060015b949350505050565b6001600160a01b03831615611d65576001600160a01b0380841660009081526101026020908152604080832093861683529290529081208054839290612022908490612d89565b9091555050505050565b6001600160a01b0381163b6120995760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016109be565b600080516020612ea383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6120d1836121f5565b6000825111806120de5750805b15611d65576120ed8383612235565b50505050565b6000612148826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123299092919063ffffffff16565b805190915015611d6557808060200190518101906121669190612e72565b611d655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109be565b600054610100900460ff166121ec5760405162461bcd60e51b81526004016109be90612e27565b61179e33611f08565b6121fe8161202c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61229d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016109be565b600080846001600160a01b0316846040516122b89190612ba4565b600060405180830381855af49150503d80600081146122f3576040519150601f19603f3d011682016040523d82523d6000602084013e6122f8565b606091505b50915091506123208282604051806060016040528060278152602001612ec360279139612338565b95945050505050565b6060611fd38484600085612351565b60608315612347575081610b97565b610b97838361242c565b6060824710156123b25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109be565b600080866001600160a01b031685876040516123ce9190612ba4565b60006040518083038185875af1925050503d806000811461240b576040519150601f19603f3d011682016040523d82523d6000602084013e612410565b606091505b509150915061242187838387612456565b979650505050505050565b81511561243c5781518083602001fd5b8060405162461bcd60e51b81526004016109be9190612e8f565b606083156124c55782516000036124be576001600160a01b0385163b6124be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109be565b5081611fd3565b611fd3838361242c565b6040805161020081019091526000610100820181815261012083018290526101408301829052610160830182905260606101808401526101a083018290526101c083018290526101e083019190915281908152602001612542604051806040016040528060008152602001600081525090565b8152602001612564604051806040016040528060008152602001600081525090565b815260200161259660405180608001604052806000815260200160008152602001600081526020016000151581525090565b81526020016125c66040518060800160405280600081526020016000815260200160008152602001606081525090565b8152604080516060810182526000808252602082810182905292820152910190815260006020820181905260409091015290565b828054828255906000526020600020908101928215612635579160200282015b8281111561263557825182559160200191906001019061261a565b50612641929150612645565b5090565b5b808211156126415760008155600101612646565b6001600160a01b03811681146110d057600080fd5b6000806040838503121561268257600080fd5b823561268d8161265a565b9150602083013561269d8161265a565b809150509250929050565b600080604083850312156126bb57600080fd5b50508035926020909101359150565b6000602082840312156126dc57600080fd5b5035919050565b60005b838110156126fe5781810151838201526020016126e6565b50506000910152565b6000815180845261271f8160208601602086016126e3565b601f01601f19169290920160200192915050565b60006080830182518452602080840151818601526040840151604086015260608401516080606087015282815180855260a0880191508383019450600092505b808310156127935784518252938301936001929092019190830190612773565b509695505050505050565b6101e080825289516001600160a01b039081169183019190915260208a015160ff1661020083015260408a015161ffff1661022083015260608a01511661024082015260808901516101006102608301526000906128006102e0840182612707565b905060a08b015161028084015260c08b01516102a084015260e08b01516102c084015261283a602084018b80518252602090810151910152565b8851606084015260208901516080840152875160a0840152602088015160c0840152604088015160e0840152606088015115156101008401528281036101208401526128868188612733565b86516001600160a01b03166101408501526020870151610160850152604087015161018085015291506128b69050565b836101a08301526128cc6101c083018415159052565b9998505050505050505050565b600080604083850312156128ec57600080fd5b82356128f78161265a565b946020939093013593505050565b80151581146110d057600080fd5b60008060006060848603121561292857600080fd5b83356129338161265a565b9250602084013561294381612905565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561298557612985612954565b604051601f8501601f19908116603f011681019082821181831017156129ad576129ad612954565b816040528093508581528686860111156129c657600080fd5b858560208301376000602087830101525050509392505050565b60008060008060008060c087890312156129f957600080fd5b8635612a048161265a565b95506020870135612a148161265a565b9450604087013567ffffffffffffffff811115612a3057600080fd5b8701601f81018913612a4157600080fd5b612a508982356020840161296a565b9450506060870135612a618161265a565b9598949750929560808101359460a0909101359350915050565b600060208284031215612a8d57600080fd5b8135610b978161265a565b60008060408385031215612aab57600080fd5b8235612ab68161265a565b9150602083013567ffffffffffffffff811115612ad257600080fd5b8301601f81018513612ae357600080fd5b612af28582356020840161296a565b9150509250929050565b600181811c90821680612b1057607f821691505b602082108103612b3057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561196257611962612b4c565b634e487b7160e01b600052603160045260246000fd5b600060018201612b9d57612b9d612b4c565b5060010190565b60008251612bb68184602087016126e3565b9190910192915050565b600060208284031215612bd257600080fd5b815160ff81168114610b9757600080fd5b601f821115611d6557600081815260208120601f850160051c81016020861015612c0a5750805b601f850160051c820191505b81811015612c2957828155600101612c16565b505050505050565b815167ffffffffffffffff811115612c4b57612c4b612954565b612c5f81612c598454612afc565b84612be3565b602080601f831160018114612c945760008415612c7c5750858301515b600019600386901b1c1916600185901b178555612c29565b600085815260208120601f198616915b82811015612cc357888601518255948401946001909101908401612ca4565b5085821015612ce15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b8082018082111561196257611962612b4c565b808202811582820484141761196257611962612b4c565b600082612dd057634e487b7160e01b600052601260045260246000fd5b500490565b600080600060608486031215612dea57600080fd5b83519250602084015191506040840151612e038161265a565b809150509250925092565b600060208284031215612e2057600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612e8457600080fd5b8151610b9781612905565b602081526000610b97602083018461270756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220131a16058eab1a992d62663c0b6bfd5f096f937d833cab3d9e6bc38314fb6c5464736f6c63430008110033",
    "sourceMap": "492:7677:26:-:0;;;1332:4:4;1289:48;;492:7677:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/lib/SaloonLib.sol": {
        "SaloonLib": [
          {
            "start": 7264,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101d85760003560e01c80636ac6d81211610102578063b20b242911610095578063cf9564b911610064578063cf9564b914610668578063e45abd0f14610688578063ecd7fbed146106b5578063f2fde38b146106d557600080fd5b8063b20b2429146105d7578063b842e87f14610605578063c4d66de81461061a578063ca0061481461063a57600080fd5b8063957deecc116100d1578063957deecc1461054957806396ea48e8146105775780639f224f3514610597578063a089a520146105b757600080fd5b80636ac6d812146104ba578063753d7563146104da578063836ef1fa1461050b5780638da5cb5b1461052b57600080fd5b806332fce6021161017a5780634f1ef286116101495780634f1ef2861461044457806352d1902d14610457578063598d17bf1461046c5780635de406dc1461049a57600080fd5b806332fce602146103c15780633659cfe6146103e157806339458723146104015780633e8888d91461042f57600080fd5b80631aebcecb116101b65780631aebcecb146102b75780631f8bc790146102d85780632cb0dfcc146103715780632dbe051e146103a157600080fd5b8063011b408b146101dd578063074ecf03146102295780631526fe2714610283575b600080fd5b3480156101e957600080fd5b506102166101f836600461266f565b61010260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023557600080fd5b5061026b6102443660046126a8565b6101046020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561028f57600080fd5b506102a361029e3660046126ca565b6106f5565b60405161022098979695949392919061279e565b3480156102c357600080fd5b506102d66102d23660046128d9565b5050565b005b3480156102e457600080fd5b506103366102f33660046126ca565b60fd602052600090815260409020805460018201546002830154600384015460048501546005860154600687015460079097015495969495939492939192909188565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e082015261010001610220565b34801561037d57600080fd5b5061039161038c366004612913565b610951565b6040519015158152602001610220565b3480156103ad57600080fd5b506103916103bc3660046126ca565b610b9e565b3480156103cd57600080fd5b506102166103dc3660046129e0565b610bcd565b3480156103ed57600080fd5b506102d66103fc366004612a7b565b610ff4565b34801561040d57600080fd5b5061021661041c366004612a7b565b6101096020526000908152604090205481565b34801561043b57600080fd5b506103916110d3565b6102d6610452366004612a98565b611136565b34801561046357600080fd5b50610216611202565b34801561047857600080fd5b50610216610487366004612a7b565b6101016020526000908152604090205481565b3480156104a657600080fd5b506102d66104b53660046126a8565b6112b5565b3480156104c657600080fd5b506102166104d53660046126ca565b61133f565b3480156104e657600080fd5b506103916104f5366004612a7b565b6101076020526000908152604090205460ff1681565b34801561051757600080fd5b506102166105263660046126a8565b6115e1565b34801561053757600080fd5b506033546001600160a01b031661026b565b34801561055557600080fd5b50610216610564366004612a7b565b6101066020526000908152604090205481565b34801561058357600080fd5b506102166105923660046126a8565b611617565b3480156105a357600080fd5b5061026b6105b23660046126ca565b611648565b3480156105c357600080fd5b506103916105d2366004612a7b565b611673565b3480156105e357600080fd5b506102166105f23660046126ca565b6101056020526000908152604090205481565b34801561061157600080fd5b506102d6611720565b34801561062657600080fd5b506102d6610635366004612a7b565b6117a0565b34801561064657600080fd5b50610216610655366004612a7b565b6101006020526000908152604090205481565b34801561067457600080fd5b5061039161068336600461266f565b6118cd565b34801561069457600080fd5b506102166106a3366004612a7b565b60ff6020526000908152604090205481565b3480156106c157600080fd5b506103916106d0366004612a7b565b611968565b3480156106e157600080fd5b506102d66106f0366004612a7b565b6119cb565b60fc818154811061070557600080fd5b60009182526020918290206040805161010081018252601790930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b90910416918301919091526001810154909216606082015260028201805492935090918391608084019161077e90612afc565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa90612afc565b80156107f75780601f106107cc576101008083540402835291602001916107f7565b820191906000526020600020905b8154815290600101906020018083116107da57829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260059093015460609283015282518084018452600686015481526007860154818301528351808501855260088701548152600987015481840152845160808082018752600a8901548252600b89015482860152600c89015482880152600d89015460ff1615158287015286519081018752600e890180548252600f8a01548287015260108a01548289015260118a018054895181890281018901909a52808a52999a959994989397959692959194918601939290919083018282801561090057602002820191906000526020600020905b8154815260200190600101908083116108ec575b5050509190925250506040805160608101825260128501546001600160a01b031681526013850154602082015260148501549181019190915260158401546016909401549293909290915060ff1688565b600061095b611a5a565b6001600160a01b0384166000908152610107602052604090205460ff1615158315146109c75760405162461bcd60e51b81526020600482015260166024820152751b9bc818da185b99d9481d1bc81dda1a5d195b1a5cdd60521b60448201526064015b60405180910390fd5b6001600160a01b03841660008181526101076020526040808220805460ff191687151590811790915590519092917f99795d51e5a8804307721456a7a9c2f0d7421f719d46a46d36e91fee7c85aa7691a38215610a7f576101088054600181019091557f8543e9adbfbe1f62b7411fdf032fcfea758a7d6b332f64d971a1334c2ff364dd0180546001600160a01b0319166001600160a01b038616908117909155600090815261010960205260409020829055610b93565b6101085460005b81811015610b905760006101088281548110610aa457610aa4612b36565b6000918252602090912001546001600160a01b03908116915087168103610b7f57610108610ad3600185612b62565b81548110610ae357610ae3612b36565b60009182526020909120015461010880546001600160a01b039092169184908110610b1057610b10612b36565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610108805480610b5057610b50612b75565b600082815260209020810160001990810180546001600160a01b03191690550190555060019250610b97915050565b50610b8981612b8b565b9050610a86565b50505b5060015b9392505050565b6000610ba8611ab4565b610bb0611a5a565b610bbb826000611b0d565b506001610bc8600160ca55565b919050565b6000610bd7611a5a565b6001600160a01b0387166000908152610107602052604090205460ff16610c385760405162461bcd60e51b81526020600482015260156024820152741d1bdad95b881b9bdd081dda1a5d195b1a5cdd1959605a1b60448201526064016109be565b611388831115610c825760405162461bcd60e51b81526020600482015260156024820152740e4cacccae4e4c2d840cccaca40e8dede40d0d2ced605b1b60448201526064016109be565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000916001600160a01b038a1691610cc49190612ba4565b600060405180830381855afa9150503d8060008114610cff576040519150601f19603f3d011682016040523d82523d6000602084013e610d04565b606091505b50915050600081806020019051810190610d1e9190612bc0565b905060068160ff161015610d6d5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103232b1b4b6b0b6103932ba3ab93760511b60448201526064016109be565b610d756124cf565b80516001600160a01b03808c16909152815160ff80851660209283015283518c8416606091820152845160809081018d905260a0860180518d87169052805185018c90525160409081018b905260fc80546001810182556000919091528751805160179092027f371f36870d18f32a11fea0f144b021c8b407bb50f8e0267c711123f454b963c081018054988301519483015161ffff16600160a81b0261ffff60a81b1995909816600160a01b026001600160a81b0319909916938a16939093179790971792909216949094178455918201517f371f36870d18f32a11fea0f144b021c8b407bb50f8e0267c711123f454b963c185018054919096166001600160a01b03199190911617909455928301518493919283917f371f36870d18f32a11fea0f144b021c8b407bb50f8e0267c711123f454b963c290910190610ebb9082612c31565b5060a0820151600382015560c0820151600482015560e0909101516005909101556020828101518051600684015581015160078301556040808401518051600885015582015160098401556060808501518051600a86015580840151600b86015580830151600c860155810151600d8501805460ff191691151591909117905560808501518051600e860190815581850151600f8701559281015160108601559081015180519193610f75926011870192909101906125fa565b50505060a082015180516012830180546001600160a01b0319166001600160a01b039092169190911790556020810151601383015560400151601482015560c0820151601582015560e0909101516016909101805460ff191691151591909117905560fc54610fe690600190612b62565b9a9950505050505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361103c5760405162461bcd60e51b81526004016109be90612cf1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611085600080516020612ea3833981519152546001600160a01b031690565b6001600160a01b0316146110ab5760405162461bcd60e51b81526004016109be90612d3d565b6110b481611d2a565b604080516000808252602082019092526110d091839190611d32565b50565b61010854600090815b8181101561112d57600061010882815481106110fa576110fa612b36565b6000918252602090912001546001600160a01b0316905061111a81611673565b50508061112690612b8b565b90506110dc565b50600191505090565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361117e5760405162461bcd60e51b81526004016109be90612cf1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166111c7600080516020612ea3833981519152546001600160a01b031690565b6001600160a01b0316146111ed5760405162461bcd60e51b81526004016109be90612d3d565b6111f682611d2a565b6102d282826001611d32565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112a25760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016109be565b50600080516020612ea383398151915290565b6112bd611a5a565b600060fc83815481106112d2576112d2612b36565b90600052602060002090601702019050806012016002015482116113385760405162461bcd60e51b815260206004820152601860248201527f63616e206f6e6c7920657874656e6420656e642074696d65000000000000000060448201526064016109be565b6014015550565b60008060fc838154811061135557611355612b36565b6000918252602090912060408051610200810190915260179092020180546001600160a01b038082166101008501908152600160a01b830460ff16610120860152600160a81b90920461ffff166101408501526001830154166101608401526002820180548492918491610180850191906113cf90612afc565b80601f01602080910402602001604051908101604052809291908181526020018280546113fb90612afc565b80156114485780601f1061141d57610100808354040283529160200191611448565b820191906000526020600020905b81548152906001019060200180831161142b57829003601f168201915b505050918352505060038201546020808301919091526004830154604080840191909152600590930154606092830152928452815180830183526006860154815260078601548185015284840152815180830183526008860154815260098601548185015284830152815160808082018452600a8701548252600b87015482860152600c87015482850152600d87015460ff161515828401528583019190915282518082018452600e870180548252600f8801548287015260108801548286015260118801805486518189028101890190975280875293909701969195909493860193929083018282801561155c57602002820191906000526020600020905b815481526020019060010190808311611548575b505050919092525050508152604080516060808201835260128501546001600160a01b0316825260138501546020838101919091526014860154838501528085019290925260158501549284019290925260169093015460ff161515910152818101519081015190519192506115d191612d89565b815160c00151610b979190612d89565b60006301e1338061271062093a806115f98587612d9c565b6116039190612d9c565b61160d9190612db3565b610b979190612db3565b60fe602052816000526040600020818154811061163357600080fd5b90600052602060002001600091509150505481565b610108818154811061165957600080fd5b6000918252602090912001546001600160a01b0316905081565b600061167d611ab4565b336000908152610102602090815260408083206001600160a01b0386168452909152902054801561171157336000818152610102602090815260408083206001600160a01b03881680855292528220919091556116da9183611ea2565b5060405181815233907fbf7aaef98dccc47249def450ef0fd30757d553648a28fa7cd56e3b2b052724949060200160405180910390a25b6001915050610bc8600160ca55565b6034546001600160a01b031633146117895760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792070656e64696e67206f776e65722063616e2061636365707420747260448201526530b739b332b960d11b60648201526084016109be565b60345461179e906001600160a01b0316611f08565b565b600054610100900460ff16158080156117c05750600054600160ff909116105b806117da5750303b1580156117da575060005460ff166001145b61183d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109be565b6000805460ff191660011790558015611860576000805461ff0019166101001790555b611868611f65565b61010380546001600160a01b0319166001600160a01b03841617905580156102d2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60006118d7611a5a565b6001600160a01b0383166000908152610100602090815260408083205461010183528184205460ff90935290832054909161191191612d89565b61191b9190612d89565b6001600160a01b038516600081815260ff60209081526040808320839055610100825280832083905561010190915281205590915061195b908483611ea2565b5060019150505b92915050565b6000611972611a5a565b6101085460005b81811015610b93576000610108828154811061199757611997612b36565b6000918252602090912001546001600160a01b031690506119b881866118cd565b5050806119c490612b8b565b9050611979565b6119d3611a5a565b6001600160a01b038116611a385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109be565b603480546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461179e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109be565b600260ca5403611b065760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109be565b600260ca55565b600060fc8381548110611b2257611b22612b36565b600091825260208220601791909102016008810154600382015482549294508592611b589190600160a81b900461ffff166115e1565b611b629190612b62565b611b6c9190612d89565b60018301548354919250611b8e916001600160a01b0390811691163084611f94565b5080826008016000016000828254611ba69190612d89565b9091555060009050612710611bbd6103e884612d9c565b611bc79190612db3565b60148401546013850154601286015460405163fc76fff360e01b815260048101859052602481019390935260448301919091526001600160a01b031660648201529091506000908190819073__$4defa815a6c8401eda00ac6be9b95d3cdb$__9063fc76fff390608401606060405180830381865af4158015611c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c729190612dd5565b885492955090935091506001600160a01b0316611c90828285611fdb565b6001600160a01b0381166000908152610100602052604081208054869290611cb9908490612d89565b9091555060009050611ccb8688612b62565b905080886008016001016000828254611ce49190612d89565b90915550506040518781528a907fadb049ad2d09be3db90459a16aef1ad0a4d89e8fdcc1ade9429d6cc55abbcd2b9060200160405180910390a250505050505050505050565b6110d0611a5a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d6a57611d658361202c565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611dc4575060408051601f3d908101601f19168201909252611dc191810190612e0e565b60015b611e275760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016109be565b600080516020612ea38339815191528114611e965760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016109be565b50611d658383836120c8565b6040516001600160a01b038316602482015260448101829052600090610b9390859063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120f3565b603380546001600160a01b038381166001600160a01b03198084168217909455603480549094169093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611f8c5760405162461bcd60e51b81526004016109be90612e27565b61179e6121c5565b6040516001600160a01b0380851660248301528316604482015260648101829052600090611fcf9086906323b872dd60e01b90608401611ed1565b5060015b949350505050565b6001600160a01b03831615611d65576001600160a01b0380841660009081526101026020908152604080832093861683529290529081208054839290612022908490612d89565b9091555050505050565b6001600160a01b0381163b6120995760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016109be565b600080516020612ea383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6120d1836121f5565b6000825111806120de5750805b15611d65576120ed8383612235565b50505050565b6000612148826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123299092919063ffffffff16565b805190915015611d6557808060200190518101906121669190612e72565b611d655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109be565b600054610100900460ff166121ec5760405162461bcd60e51b81526004016109be90612e27565b61179e33611f08565b6121fe8161202c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61229d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016109be565b600080846001600160a01b0316846040516122b89190612ba4565b600060405180830381855af49150503d80600081146122f3576040519150601f19603f3d011682016040523d82523d6000602084013e6122f8565b606091505b50915091506123208282604051806060016040528060278152602001612ec360279139612338565b95945050505050565b6060611fd38484600085612351565b60608315612347575081610b97565b610b97838361242c565b6060824710156123b25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109be565b600080866001600160a01b031685876040516123ce9190612ba4565b60006040518083038185875af1925050503d806000811461240b576040519150601f19603f3d011682016040523d82523d6000602084013e612410565b606091505b509150915061242187838387612456565b979650505050505050565b81511561243c5781518083602001fd5b8060405162461bcd60e51b81526004016109be9190612e8f565b606083156124c55782516000036124be576001600160a01b0385163b6124be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109be565b5081611fd3565b611fd3838361242c565b6040805161020081019091526000610100820181815261012083018290526101408301829052610160830182905260606101808401526101a083018290526101c083018290526101e083019190915281908152602001612542604051806040016040528060008152602001600081525090565b8152602001612564604051806040016040528060008152602001600081525090565b815260200161259660405180608001604052806000815260200160008152602001600081526020016000151581525090565b81526020016125c66040518060800160405280600081526020016000815260200160008152602001606081525090565b8152604080516060810182526000808252602082810182905292820152910190815260006020820181905260409091015290565b828054828255906000526020600020908101928215612635579160200282015b8281111561263557825182559160200191906001019061261a565b50612641929150612645565b5090565b5b808211156126415760008155600101612646565b6001600160a01b03811681146110d057600080fd5b6000806040838503121561268257600080fd5b823561268d8161265a565b9150602083013561269d8161265a565b809150509250929050565b600080604083850312156126bb57600080fd5b50508035926020909101359150565b6000602082840312156126dc57600080fd5b5035919050565b60005b838110156126fe5781810151838201526020016126e6565b50506000910152565b6000815180845261271f8160208601602086016126e3565b601f01601f19169290920160200192915050565b60006080830182518452602080840151818601526040840151604086015260608401516080606087015282815180855260a0880191508383019450600092505b808310156127935784518252938301936001929092019190830190612773565b509695505050505050565b6101e080825289516001600160a01b039081169183019190915260208a015160ff1661020083015260408a015161ffff1661022083015260608a01511661024082015260808901516101006102608301526000906128006102e0840182612707565b905060a08b015161028084015260c08b01516102a084015260e08b01516102c084015261283a602084018b80518252602090810151910152565b8851606084015260208901516080840152875160a0840152602088015160c0840152604088015160e0840152606088015115156101008401528281036101208401526128868188612733565b86516001600160a01b03166101408501526020870151610160850152604087015161018085015291506128b69050565b836101a08301526128cc6101c083018415159052565b9998505050505050505050565b600080604083850312156128ec57600080fd5b82356128f78161265a565b946020939093013593505050565b80151581146110d057600080fd5b60008060006060848603121561292857600080fd5b83356129338161265a565b9250602084013561294381612905565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561298557612985612954565b604051601f8501601f19908116603f011681019082821181831017156129ad576129ad612954565b816040528093508581528686860111156129c657600080fd5b858560208301376000602087830101525050509392505050565b60008060008060008060c087890312156129f957600080fd5b8635612a048161265a565b95506020870135612a148161265a565b9450604087013567ffffffffffffffff811115612a3057600080fd5b8701601f81018913612a4157600080fd5b612a508982356020840161296a565b9450506060870135612a618161265a565b9598949750929560808101359460a0909101359350915050565b600060208284031215612a8d57600080fd5b8135610b978161265a565b60008060408385031215612aab57600080fd5b8235612ab68161265a565b9150602083013567ffffffffffffffff811115612ad257600080fd5b8301601f81018513612ae357600080fd5b612af28582356020840161296a565b9150509250929050565b600181811c90821680612b1057607f821691505b602082108103612b3057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561196257611962612b4c565b634e487b7160e01b600052603160045260246000fd5b600060018201612b9d57612b9d612b4c565b5060010190565b60008251612bb68184602087016126e3565b9190910192915050565b600060208284031215612bd257600080fd5b815160ff81168114610b9757600080fd5b601f821115611d6557600081815260208120601f850160051c81016020861015612c0a5750805b601f850160051c820191505b81811015612c2957828155600101612c16565b505050505050565b815167ffffffffffffffff811115612c4b57612c4b612954565b612c5f81612c598454612afc565b84612be3565b602080601f831160018114612c945760008415612c7c5750858301515b600019600386901b1c1916600185901b178555612c29565b600085815260208120601f198616915b82811015612cc357888601518255948401946001909101908401612ca4565b5085821015612ce15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b8082018082111561196257611962612b4c565b808202811582820484141761196257611962612b4c565b600082612dd057634e487b7160e01b600052601260045260246000fd5b500490565b600080600060608486031215612dea57600080fd5b83519250602084015191506040840151612e038161265a565b809150509250925092565b600060208284031215612e2057600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612e8457600080fd5b8151610b9781612905565b602081526000610b97602083018461270756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220131a16058eab1a992d62663c0b6bfd5f096f937d833cab3d9e6bc38314fb6c5464736f6c63430008110033",
    "sourceMap": "492:7677:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1280:71:28;;;;;;;;;;-1:-1:-1;1280:71:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:25:42;;;677:2;662:18;1280:71:28;;;;;;;;1621:68;;;;;;;;;;-1:-1:-1;1621:68:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1621:68:28;;;;;;-1:-1:-1;;;;;1251:32:42;;;1233:51;;1221:2;1206:18;1621:68:28;1087:203:42;891:26:28;;;;;;;;;;-1:-1:-1;891:26:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;4746:102:27:-;;;;;;;;;;-1:-1:-1;4746:102:27;;;;;:::i;:::-;;;;;;950:42:28;;;;;;;;;;-1:-1:-1;950:42:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6378:25:42;;;6434:2;6419:18;;6412:34;;;;6462:18;;;6455:34;;;;6520:2;6505:18;;6498:34;;;;6563:3;6548:19;;6541:35;6607:3;6592:19;;6585:35;6651:3;6636:19;;6629:35;6695:3;6680:19;;6673:35;6365:3;6350:19;950:42:28;6035:679:42;2146:947:26;;;;;;;;;;-1:-1:-1;2146:947:26;;;;;:::i;:::-;;:::i;:::-;;;7462:14:42;;7455:22;7437:41;;7425:2;7410:18;2146:947:26;7297:187:42;5551:175:26;;;;;;;;;;-1:-1:-1;5551:175:26;;;;;:::i;:::-;;:::i;3681:1213::-;;;;;;;;;;-1:-1:-1;3681:1213:26;;;;;:::i;:::-;;:::i;3317:197:4:-;;;;;;;;;;-1:-1:-1;3317:197:4;;;;;:::i;:::-;;:::i;2119:54:28:-;;;;;;;;;;-1:-1:-1;2119:54:28;;;;;:::i;:::-;;;;;;;;;;;;;;7870:297:26;;;;;;;;;;;;;:::i;3763:222:4:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;1219:55:28:-;;;;;;;;;;-1:-1:-1;1219:55:28;;;;;:::i;:::-;;;;;;;;;;;;;;5130:319:26;;;;;;;;;;-1:-1:-1;5130:319:26;;;;;:::i;:::-;;:::i;4456:284:27:-;;;;;;;;;;-1:-1:-1;4456:284:27;;;;;:::i;:::-;;:::i;1953:46:28:-;;;;;;;;;;-1:-1:-1;1953:46:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;4207:243:27;;;;;;;;;;-1:-1:-1;4207:243:27;;;;;:::i;:::-;;:::i;1562:85:40:-;;;;;;;;;;-1:-1:-1;1634:6:40;;-1:-1:-1;;;;;1634:6:40;1562:85;;1854:55:28;;;;;;;;;;-1:-1:-1;1854:55:28;;;;;:::i;:::-;;;;;;;;;;;;;;1023:47;;;;;;;;;;-1:-1:-1;1023:47:28;;;;;:::i;:::-;;:::i;2043:29::-;;;;;;;;;;-1:-1:-1;2043:29:28;;;;;:::i;:::-;;:::i;7371:403:26:-;;;;;;;;;;-1:-1:-1;7371:403:26;;;;;:::i;:::-;;:::i;1738:51:28:-;;;;;;;;;;-1:-1:-1;1738:51:28;;;;;:::i;:::-;;;;;;;;;;;;;;2562:216:40;;;;;;;;;;;;;:::i;1079:160:26:-;;;;;;;;;;-1:-1:-1;1079:160:26;;;;;:::i;:::-;;:::i;1159:54:28:-;;;;;;;;;;-1:-1:-1;1159:54:28;;;;;:::i;:::-;;;;;;;;;;;;;;5948:478:26;;;;;;;;;;-1:-1:-1;5948:478:26;;;;;:::i;:::-;;:::i;1100:53:28:-;;;;;;;;;;-1:-1:-1;1100:53:28;;;;;:::i;:::-;;;;;;;;;;;;;;6588:370:26;;;;;;;;;;-1:-1:-1;6588:370:26;;;;;:::i;:::-;;:::i;2336:220:40:-;;;;;;;;;;-1:-1:-1;2336:220:40;;;;;:::i;:::-;;:::i;891:26:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;891:26:28;;;;;;-1:-1:-1;;;891:26:28;;;;;;;;;;;-1:-1:-1;;;891:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;891:26:28;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;891:26:28;;;-1:-1:-1;;891:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;891:26:28;;;;-1:-1:-1;;891:26:28;;;;;;;;;;;;-1:-1:-1;;;;;891:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;891:26:28;;;:::o;2146:947:26:-;2294:4;1455:13:40;:11;:13::i;:::-;-1:-1:-1;;;;;2331:22:26;::::1;;::::0;;;:14:::1;:22;::::0;;;;;::::1;;:39;;2357:13:::0;::::1;2331:39;2310:108;;;::::0;-1:-1:-1;;;2310:108:26;;11134:2:42;2310:108:26::1;::::0;::::1;11116:21:42::0;11173:2;11153:18;;;11146:30;-1:-1:-1;;;11192:18:42;;;11185:52;11254:18;;2310:108:26::1;;;;;;;;;-1:-1:-1::0;;;;;2428:22:26;::::1;;::::0;;;:14:::1;:22;::::0;;;;;:37;;-1:-1:-1;;2428:37:26::1;::::0;::::1;;::::0;;::::1;::::0;;;2480:43;;2428:37;;:22;2480:43:::1;::::0;::::1;2538:12;2534:531;;;2566:12;:25:::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;2566:25:26::1;-1:-1:-1::0;;;;;2566:25:26;::::1;::::0;;::::1;::::0;;;-1:-1:-1;2605:27:26;;;:19:::1;2566:25;2605:27:::0;;;;:45;;;2534:531:::1;;;2709:12;:19:::0;2681:25:::1;2742:313;2762:17;2758:1;:21;2742:313;;;2804:13;2820:12;2833:1;2820:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2820:15:26;;::::1;::::0;-1:-1:-1;2857:15:26;::::1;::::0;;2853:188:::1;;2914:12;2927:21;2947:1;2927:17:::0;:21:::1;:::i;:::-;2914:35;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;2896:12:::1;:15:::0;;-1:-1:-1;;;;;2914:35:26;;::::1;::::0;2909:1;;2896:15;::::1;;;;;:::i;:::-;;;;;;;;;:53;;;;;-1:-1:-1::0;;;;;2896:53:26::1;;;;;-1:-1:-1::0;;;;;2896:53:26::1;;;;;;2971:12;:18;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;2971:18:26;;;;;-1:-1:-1;;;;;;2971:18:26::1;::::0;;;;;-1:-1:-1;2971:18:26::1;::::0;-1:-1:-1;3011:11:26::1;::::0;-1:-1:-1;;3011:11:26::1;2853:188;-1:-1:-1::0;2781:3:26::1;::::0;::::1;:::i;:::-;;;2742:313;;;;2667:398;2534:531;-1:-1:-1::0;3082:4:26::1;1478:1:40;2146:947:26::0;;;;;:::o;5551:175::-;5657:4;2490:21:5;:19;:21::i;:::-;1455:13:40::1;:11;:13::i;:::-;5677:21:26::2;5690:4;5696:1;5677:12;:21::i;:::-;-1:-1:-1::0;5715:4:26::2;2532:20:5::0;1772:1;3038:7;:22;2858:209;2532:20;5551:175:26;;;:::o;3681:1213::-;3924:7;1455:13:40;:11;:13::i;:::-;-1:-1:-1;;;;;3951:22:26;::::1;;::::0;;;:14:::1;:22;::::0;;;;;::::1;;3943:56;;;::::0;-1:-1:-1;;;3943:56:26;;12154:2:42;3943:56:26::1;::::0;::::1;12136:21:42::0;12193:2;12173:18;;;12166:30;-1:-1:-1;;;12212:18:42;;;12205:51;12273:18;;3943:56:26::1;11952:345:42::0;3943:56:26::1;4033:4;4017:12;:20;;4009:54;;;::::0;-1:-1:-1;;;4009:54:26;;12504:2:42;4009:54:26::1;::::0;::::1;12486:21:42::0;12543:2;12523:18;;;12516:30;-1:-1:-1;;;12562:18:42;;;12555:51;12623:18;;4009:54:26::1;12302:345:42::0;4009:54:26::1;4194:37;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4194:37:26::1;-1:-1:-1::0;;;4194:37:26::1;::::0;;4163:78;;4137:22:::1;::::0;-1:-1:-1;;;;;4163:17:26;::::1;::::0;:78:::1;::::0;4194:37;4163:78:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4134:107;;;4251:14;4279:9;4268:30;;;;;;;;;;;;:::i;:::-;4251:47;;4328:1;4316:8;:13;;;;4308:48;;;::::0;-1:-1:-1;;;4308:48:26;;13424:2:42;4308:48:26::1;::::0;::::1;13406:21:42::0;13463:2;13443:18;;;13436:30;-1:-1:-1;;;13482:18:42;;;13475:52;13544:18;;4308:48:26::1;13222:346:42::0;4308:48:26::1;4367:25;;:::i;:::-;4402:21:::0;;-1:-1:-1;;;;;4402:44:26;;::::1;::::0;;;4456:21;;:46:::1;::::0;;::::1;:35;::::0;;::::1;:46:::0;4512:21;;:52;;::::1;:35;::::0;;::::1;:52:::0;4574:21;;:33:::1;::::0;;::::1;:48:::0;;;4632:22:::1;::::0;::::1;::::0;;:43;;::::1;::::0;;4685:22;;:34;::::1;:49:::0;;;4744:22;:30:::1;::::0;;::::1;:49:::0;;;4803:8:::1;:24:::0;;::::1;::::0;::::1;::::0;;4402:21:::1;4803:24:::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;;-1:-1:-1::0;;;4803:24:26::1;-1:-1:-1::0;;;;4803:24:26;;;::::1;-1:-1:-1::0;;;4803:24:26::1;-1:-1:-1::0;;;;;;4803:24:26;;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;;;;;;4803:24:26;;;::::1;;::::0;;;;;::::1;::::0;4402:9;;4803:24;;;;;;;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4803:24:26::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;;;;;;-1:-1:-1;;4803:24:26::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;4803:24:26::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;4803:24:26::1;-1:-1:-1::0;;;;;4803:24:26;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;4803:24:26::1;::::0;::::1;;::::0;;;::::1;::::0;;4867:8:::1;:15:::0;:19:::1;::::0;-1:-1:-1;;4867:19:26::1;:::i;:::-;4859:28:::0;3681:1213;-1:-1:-1;;;;;;;;;;3681:1213:26:o;3317:197:4:-;-1:-1:-1;;;;;1898:6:4;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:4;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:4;:20;-1:-1:-1;;;;;;;;;;;1642:65:1;-1:-1:-1;;;;;1642:65:1;;1563:151;1971:20:4;-1:-1:-1;;;;;1971:30:4;;1963:87;;;;-1:-1:-1;;;1963:87:4;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;7870:297:26:-;7969:12;:19;7925:4;;;7998:142;8018:17;8014:1;:21;7998:142;;;8056:13;8072:12;8085:1;8072:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8072:15:26;;-1:-1:-1;8101:28:26;8072:15;8101:21;:28::i;:::-;;8042:98;8037:3;;;;:::i;:::-;;;7998:142;;;;8156:4;8149:11;;;7870:297;:::o;3763:222:4:-;-1:-1:-1;;;;;1898:6:4;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:4;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:4;:20;-1:-1:-1;;;;;;;;;;;1642:65:1;-1:-1:-1;;;;;1642:65:1;;1563:151;1971:20:4;-1:-1:-1;;;;;1971:30:4;;1963:87;;;;-1:-1:-1;;;1963:87:4;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;3006:131::-:0;3084:7;2324:4;-1:-1:-1;;;;;2333:6:4;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:4;;16805:2:42;2308:92:4;;;16787:21:42;16844:2;16824:18;;;16817:30;16883:34;16863:18;;;16856:62;16954:26;16934:18;;;16927:54;16998:19;;2308:92:4;16603:420:42;2308:92:4;-1:-1:-1;;;;;;;;;;;;3006:131:4;:::o;5130:319:26:-;1455:13:40;:11;:13::i;:::-;5241:21:26::1;5265:8;5274:4;5265:14;;;;;;;;:::i;:::-;;;;;;;;;;;5241:38;;5321:4;:17;;:25;;;5310:8;:36;5289:107;;;::::0;-1:-1:-1;;;5289:107:26;;17230:2:42;5289:107:26::1;::::0;::::1;17212:21:42::0;17269:2;17249:18;;;17242:30;17308:26;17288:18;;;17281:54;17352:18;;5289:107:26::1;17028:348:42::0;5289:107:26::1;5406:25:::0;;:36;-1:-1:-1;5130:319:26:o;4456:284:27:-;4518:7;4537:20;4560:8;4569:4;4560:14;;;;;;;;:::i;:::-;;;;;;;;;4537:37;;;;;;;;;4560:14;;;;;4537:37;;-1:-1:-1;;;;;4537:37:27;;;;;;;;;-1:-1:-1;;;4537:37:27;;;;;;;;-1:-1:-1;;;4537:37:27;;;;;;;;;;;;;;;;;;;;;;;;;;4560:14;;4537:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4537:37:27;;;-1:-1:-1;;4537:37:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4537:37:27;;;;-1:-1:-1;;;4537:37:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;4537:37:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:16;;;;:41;;;;4636:35;;4537:37;;-1:-1:-1;4636:95:27;;;:::i;:::-;4592:16;;:28;;;:140;;;;:::i;4207:243::-;4329:30;618:8:28;813:6;658:7;4403:15:27;4414:4;4403:8;:15;:::i;:::-;:24;;;;:::i;:::-;4402:32;;;;:::i;:::-;4401:41;;;;:::i;1023:47:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2043:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2043:29:28;;-1:-1:-1;2043:29:28;:::o;7371:403:26:-;7471:4;2490:21:5;:19;:21::i;:::-;7525:10:26::1;7491:14;7508:28:::0;;;:16:::1;:28;::::0;;;;;;;-1:-1:-1;;;;;7508:36:26;::::1;::::0;;;;;;;;7558:10;;7554:193:::1;;7601:10;7623:1;7584:28:::0;;;:16:::1;:28;::::0;;;;;;;-1:-1:-1;;;;;7584:36:26;::::1;::::0;;;;;;;:40;;;;7638:47:::1;::::0;7678:6;7638:27:::1;:47::i;:::-;-1:-1:-1::0;7704:32:26::1;::::0;689:25:42;;;7717:10:26::1;::::0;7704:32:::1;::::0;677:2:42;662:18;7704:32:26::1;;;;;;;7554:193;7763:4;7756:11;;;2532:20:5::0;1772:1;3038:7;:22;2858:209;2562:216:40;2637:13;;-1:-1:-1;;;;;2637:13:40;2654:10;2637:27;2616:112;;;;-1:-1:-1;;;2616:112:40;;18108:2:42;2616:112:40;;;18090:21:42;18147:2;18127:18;;;18120:30;18186:34;18166:18;;;18159:62;-1:-1:-1;;;18237:18:42;;;18230:36;18283:19;;2616:112:40;17906:402:42;2616:112:40;2757:13;;2738:33;;-1:-1:-1;;;;;2757:13:40;2738:18;:33::i;:::-;2562:216::o;1079:160:26:-;3268:19:3;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:3;;3369:1;3354:12;;;;:16;3336:34;3335:124;;;-1:-1:-1;3431:4:3;1476:19:9;:23;;;3392:66:3;;-1:-1:-1;3441:12:3;;;;;:17;3392:66;3314:217;;;;-1:-1:-1;;;3314:217:3;;18515:2:42;3314:217:3;;;18497:21:42;18554:2;18534:18;;;18527:30;18593:34;18573:18;;;18566:62;-1:-1:-1;;;18644:18:42;;;18637:44;18698:19;;3314:217:3;18313:410:42;3314:217:3;3541:12;:16;;-1:-1:-1;;3541:16:3;3556:1;3541:16;;;3567:65;;;;3601:13;:20;;-1:-1:-1;;3601:20:3;;;;;3567:65;1154:16:26::1;:14;:16::i;:::-;1180:15;:52:::0;;-1:-1:-1;;;;;;1180:52:26::1;-1:-1:-1::0;;;;;1180:52:26;::::1;;::::0;;3652:99:3;;;;3702:5;3686:21;;-1:-1:-1;;3686:21:3;;;3726:14;;-1:-1:-1;18880:36:42;;3726:14:3;;18868:2:42;18853:18;3726:14:3;;;;;;;3258:499;1079:160:26;:::o;5948:478::-;6067:4;1455:13:40;:11;:13::i;:::-;-1:-1:-1;;;;;6188:27:26;::::1;6087:14;6188:27:::0;;;:19:::1;:27;::::0;;;;;;;;6145:20:::1;:28:::0;;;;;;6104:18:::1;:26:::0;;;;;;;6188:27;;6104:69:::1;::::0;::::1;:::i;:::-;:111;;;;:::i;:::-;-1:-1:-1::0;;;;;6225:26:26;::::1;6254:1;6225:26:::0;;;:18:::1;:26;::::0;;;;;;;:30;;;6265:19:::1;:27:::0;;;;;:31;;;6306:20:::1;:28:::0;;;;;:32;6087:128;;-1:-1:-1;6348:50:26::1;::::0;6376:13;6087:128;6348:27:::1;:50::i;:::-;;6415:4;6408:11;;;1478:1:40;5948:478:26::0;;;;:::o;6588:370::-;6696:4;1455:13:40;:11;:13::i;:::-;6744:12:26::1;:19:::0;6716:25:::1;6773:158;6793:17;6789:1;:21;6773:158;;;6831:14;6848:12;6861:1;6848:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6848:15:26::1;::::0;-1:-1:-1;6877:43:26::1;6848:15:::0;6906:13;6877:20:::1;:43::i;:::-;;6817:114;6812:3;;;;:::i;:::-;;;6773:158;;2336:220:40::0;1455:13;:11;:13::i;:::-;-1:-1:-1;;;;;2429:22:40;::::1;2408:107;;;::::0;-1:-1:-1;;;2408:107:40;;19129:2:42;2408:107:40::1;::::0;::::1;19111:21:42::0;19168:2;19148:18;;;19141:30;19207:34;19187:18;;;19180:62;-1:-1:-1;;;19258:18:42;;;19251:36;19304:19;;2408:107:40::1;18927:402:42::0;2408:107:40::1;2525:13;:24:::0;;-1:-1:-1;;;;;;2525:24:40::1;-1:-1:-1::0;;;;;2525:24:40;;;::::1;::::0;;;::::1;::::0;;2336:220::o;1720:130::-;1634:6;;-1:-1:-1;;;;;1634:6:40;920:10:10;1783:23:40;1775:68;;;;-1:-1:-1;;;1775:68:40;;19536:2:42;1775:68:40;;;19518:21:42;;;19555:18;;;19548:30;19614:34;19594:18;;;19587:62;19666:18;;1775:68:40;19334:356:42;2565:287:5;1815:1;2697:7;;:19;2689:63;;;;-1:-1:-1;;;2689:63:5;;19897:2:42;2689:63:5;;;19879:21:42;19936:2;19916:18;;;19909:30;19975:33;19955:18;;;19948:61;20026:18;;2689:63:5;19695:355:42;2689:63:5;1815:1;2827:7;:18;2565:287::o;1033:1659:27:-;1106:21;1130:8;1139:4;1130:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1308:16;;;:31;1225:24;;;;1263:20;;1130:14;;-1:-1:-1;1354:8:27;;1176:117;;1225:24;-1:-1:-1;;;1263:20:27;;;;1176:35;:117::i;:::-;:163;;;;:::i;:::-;:186;;;;:::i;:::-;1503:30;;;;1449:22;;1155:207;;-1:-1:-1;1442:152:27;;-1:-1:-1;;;;;1449:22:27;;;;1503:30;1555:4;1155:207;1442:47;:152::i;:::-;;1640:10;1605:4;:16;;:31;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;1843:31:27;;-1:-1:-1;813:6:28;1878:22:27;700:4:28;1878:10:27;:22;:::i;:::-;1877:30;;;;:::i;:::-;2117:25;;;;2160:29;;;;2117:17;;;2207:26;2031:216;;-1:-1:-1;;;2031:216:27;;;;;20294:25:42;;;20335:18;;;20328:34;;;;20378:18;;;20371:34;;;;-1:-1:-1;;;;;2207:26:27;20421:18:42;;;20414:60;1843:64:27;;-1:-1:-1;1932:20:27;;;;;;2031:9;;:27;;20266:19:42;;2031:216:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2281:22;;1918:329;;-1:-1:-1;1918:329:27;;-1:-1:-1;1918:329:27;-1:-1:-1;;;;;;2281:22:27;2314:57;1918:329;2281:22;1918:329;2314:24;:57::i;:::-;-1:-1:-1;;;;;2381:26:27;;;;;;:19;:26;;;;;:42;;2411:12;;2381:26;:42;;2411:12;;2381:42;:::i;:::-;;;;-1:-1:-1;2434:33:27;;-1:-1:-1;2470:48:27;2495:23;2470:10;:48;:::i;:::-;2434:84;;2613:25;2576:4;:16;;:33;;;:62;;;;;;;:::i;:::-;;;;-1:-1:-1;;2654:31:27;;689:25:42;;;2668:4:27;;2654:31;;677:2:42;662:18;2654:31:27;;;;;;;1096:1596;;;;;;;;1033:1659;;:::o;1245:129:26:-;1455:13:40;:11;:13::i;2938:974:1:-;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;:::-;2938:974;;;:::o;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:1;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:1;;;;;;;;-1:-1:-1;;3531:63:1;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:1;;21254:2:42;3758:56:1;;;21236:21:42;21293:2;21273:18;;;21266:30;21332:34;21312:18;;;21305:62;-1:-1:-1;;;21383:18:42;;;21376:44;21437:19;;3758:56:1;21052:410:42;3527:302:1;-1:-1:-1;;;;;;;;;;;3644:28:1;;3636:82;;;;-1:-1:-1;;;3636:82:1;;21669:2:42;3636:82:1;;;21651:21:42;21708:2;21688:18;;;21681:30;21747:34;21727:18;;;21720:62;-1:-1:-1;;;21798:18:42;;;21791:39;21847:19;;3636:82:1;21467:405:42;3636:82:1;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;809:241:18:-;963:58;;-1:-1:-1;;;;;22069:32:42;;963:58:18;;;22051:51:42;22118:18;;;22111:34;;;920:4:18;;936:86;;956:5;;-1:-1:-1;;;986:23:18;22024:18:42;;963:58:18;;;;-1:-1:-1;;963:58:18;;;;;;;;;;;;;;-1:-1:-1;;;;;963:58:18;-1:-1:-1;;;;;;963:58:18;;;;;;;;;;936:19;:86::i;2932:223:40:-;3024:6;;;-1:-1:-1;;;;;3040:17:40;;;-1:-1:-1;;;;;;3040:17:40;;;;;;;;3067:13;:26;;;;;;;;3108:40;;3024:6;;;3040:17;3024:6;;3108:40;;3005:16;;3108:40;2995:160;2932:223;:::o;1124:95::-;5379:13:3;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:3;;;;;;;:::i;:::-;1186:26:40::1;:24;:26::i;1111:277:18:-:0;1291:68;;-1:-1:-1;;;;;22826:15:42;;;1291:68:18;;;22808:34:42;22878:15;;22858:18;;;22851:43;22910:18;;;22903:34;;;1248:4:18;;1264:96;;1284:5;;-1:-1:-1;;;1314:27:18;22743:18:42;;1291:68:18;22568:375:42;1264:96:18;-1:-1:-1;1377:4:18;1111:277;;;;;;;:::o;3960:241:27:-;-1:-1:-1;;;;;4099:23:27;;;4095:100;;-1:-1:-1;;;;;4138:27:27;;;;;;;:16;:27;;;;;;;;:35;;;;;;;;;;;:46;;4177:7;;4138:27;:46;;4177:7;;4138:46;:::i;:::-;;;;-1:-1:-1;;3960:241:27;;;:::o;1805:281:1:-;-1:-1:-1;;;;;1476:19:9;;;1878:106:1;;;;-1:-1:-1;;;1878:106:1;;23150:2:42;1878:106:1;;;23132:21:42;23189:2;23169:18;;;23162:30;23228:34;23208:18;;;23201:62;-1:-1:-1;;;23279:18:42;;;23272:43;23332:19;;1878:106:1;22948:409:42;1878:106:1;-1:-1:-1;;;;;;;;;;;1994:85:1;;-1:-1:-1;;;;;;1994:85:1;-1:-1:-1;;;;;1994:85:1;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;3920:706:18:-;4339:23;4365:69;4393:4;4365:69;;;;;;;;;;;;;;;;;4373:5;-1:-1:-1;;;;;4365:27:18;;;:69;;;;;:::i;:::-;4448:17;;4339:95;;-1:-1:-1;4448:21:18;4444:176;;4543:10;4532:30;;;;;;;;;;;;:::i;:::-;4524:85;;;;-1:-1:-1;;;4524:85:18;;23814:2:42;4524:85:18;;;23796:21:42;23853:2;23833:18;;;23826:30;23892:34;23872:18;;;23865:62;-1:-1:-1;;;23943:18:42;;;23936:40;23993:19;;4524:85:18;23612:406:42;1225:111:40;5379:13:3;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:3;;;;;;;:::i;:::-;1297:32:40::1;920:10:10::0;1297:18:40::1;:32::i;2192:152:1:-:0;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:1;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:9;;;7195:88:1;;;;-1:-1:-1;;;7195:88:1;;24225:2:42;7195:88:1;;;24207:21:42;24264:2;24244:18;;;24237:30;24303:34;24283:18;;;24276:62;-1:-1:-1;;;24354:18:42;;;24347:36;24400:19;;7195:88:1;24023:402:42;7195:88:1;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:1;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:1:o;3873:223:20:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;7438:295:9:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:9;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;4960:446:20:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:20;;24632:2:42;5149:81:20;;;24614:21:42;24671:2;24651:18;;;24644:30;24710:34;24690:18;;;24683:62;-1:-1:-1;;;24761:18:42;;;24754:36;24807:19;;5149:81:20;24430:402:42;5149:81:20;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:20;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:20:o;7739:540:9:-;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:9;;;;;;;;:::i;7466:628:20:-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1476:19:9;;;7908:60:20;;;;-1:-1:-1;;;7908:60:20;;25264:2:42;7908:60:20;;;25246:21:42;25303:2;25283:18;;;25276:30;25342:31;25322:18;;;25315:59;25391:18;;7908:60:20;25062:353:42;7908:60:20;-1:-1:-1;8003:10:20;7996:17;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:42;-1:-1:-1;;;;;89:31:42;;79:42;;69:70;;135:1;132;125:12;150:388;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:42;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;725:248::-;793:6;801;854:2;842:9;833:7;829:23;825:32;822:52;;;870:1;867;860:12;822:52;-1:-1:-1;;893:23:42;;;963:2;948:18;;;935:32;;-1:-1:-1;725:248:42:o;1295:180::-;1354:6;1407:2;1395:9;1386:7;1382:23;1378:32;1375:52;;;1423:1;1420;1413:12;1375:52;-1:-1:-1;1446:23:42;;1295:180;-1:-1:-1;1295:180:42:o;1655:250::-;1740:1;1750:113;1764:6;1761:1;1758:13;1750:113;;;1840:11;;;1834:18;1821:11;;;1814:39;1786:2;1779:10;1750:113;;;-1:-1:-1;;1897:1:42;1879:16;;1872:27;1655:250::o;1910:271::-;1952:3;1990:5;1984:12;2017:6;2012:3;2005:19;2033:76;2102:6;2095:4;2090:3;2086:14;2079:4;2072:5;2068:16;2033:76;:::i;:::-;2163:2;2142:15;-1:-1:-1;;2138:29:42;2129:39;;;;2170:4;2125:50;;1910:271;-1:-1:-1;;1910:271:42:o;2725:752::-;2777:3;2816:4;2811:3;2807:14;2848:5;2842:12;2837:3;2830:25;2874:4;2925:2;2918:5;2914:14;2908:21;2903:2;2898:3;2894:12;2887:43;2979:4;2972:5;2968:16;2962:23;2955:4;2950:3;2946:14;2939:47;3032:4;3025:5;3021:16;3015:23;3070:4;3063;3058:3;3054:14;3047:28;3097:4;3130:12;3124:19;3165:6;3159:4;3152:20;3199:3;3194;3190:13;3181:22;;3244:2;3230:12;3226:21;3212:35;;3265:1;3256:10;;3275:175;3289:6;3286:1;3283:13;3275:175;;;3352:13;;3338:28;;3425:15;;;;3311:1;3304:9;;;;;3388:14;;;;3275:175;;;-1:-1:-1;3466:5:42;2725:752;-1:-1:-1;;;;;;2725:752:42:o;3722:1988::-;4393:3;4405:21;;;4466:13;;-1:-1:-1;;;;;4462:39:42;;;4442:18;;;4435:67;;;;4549:4;4537:17;;4531:24;1547:4;1536:16;4610:3;4595:19;;1524:29;4664:4;4652:17;;4646:24;1636:6;1625:18;4728:3;4713:19;;1613:31;4782:4;4770:17;;4764:24;1044:31;4847:3;4832:19;;1032:44;4901:4;4889:17;;4883:24;4944:6;4938:3;4923:19;;4916:35;-1:-1:-1;;4974:54:42;5023:3;5008:19;;4883:24;4974:54;:::i;:::-;4960:68;;5083:4;5075:6;5071:17;5065:24;5059:3;5048:9;5044:19;5037:53;5145:4;5137:6;5133:17;5127:24;5121:3;5110:9;5106:19;5099:53;5207:4;5199:6;5195:17;5189:24;5183:3;5172:9;5168:19;5161:53;5223:59;5276:4;5265:9;5261:20;5253:6;2263:12;;2251:25;;2325:4;2314:16;;;2308:23;2292:14;;2285:47;2186:152;5223:59;2263:12;;5344:4;5329:20;;2251:25;2325:4;2314:16;;2308:23;2292:14;;;2285:47;2517:12;;5413:4;5398:20;;2505:25;2579:4;2568:16;;2562:23;2546:14;;;2539:47;2635:4;2624:16;;2618:23;2602:14;;;2595:47;2705:4;2694:16;;2688:23;2681:31;2674:39;2658:14;;;2651:63;5468:9;5460:6;5456:22;5450:3;5439:9;5435:19;5428:51;5496:43;5532:6;5524;5496:43;:::i;:::-;3564:12;;-1:-1:-1;;;;;3560:38:42;5602:3;5587:19;;3548:51;3648:4;3637:16;;3631:23;3615:14;;;3608:47;3704:4;3693:16;;3687:23;3671:14;;;3664:47;5488:51;-1:-1:-1;5548:59:42;;-1:-1:-1;3482:235:42;5548:59;5644:6;5638:3;5627:9;5623:19;5616:35;5660:44;5699:3;5688:9;5684:19;5676:6;2413:13;2406:21;2394:34;;2343:91;5660:44;3722:1988;;;;;;;;;;;:::o;5715:315::-;5783:6;5791;5844:2;5832:9;5823:7;5819:23;5815:32;5812:52;;;5860:1;5857;5850:12;5812:52;5899:9;5886:23;5918:31;5943:5;5918:31;:::i;:::-;5968:5;6020:2;6005:18;;;;5992:32;;-1:-1:-1;;;5715:315:42:o;6719:118::-;6805:5;6798:13;6791:21;6784:5;6781:32;6771:60;;6827:1;6824;6817:12;6842:450;6916:6;6924;6932;6985:2;6973:9;6964:7;6960:23;6956:32;6953:52;;;7001:1;6998;6991:12;6953:52;7040:9;7027:23;7059:31;7084:5;7059:31;:::i;:::-;7109:5;-1:-1:-1;7166:2:42;7151:18;;7138:32;7179:30;7138:32;7179:30;:::i;:::-;6842:450;;7228:7;;-1:-1:-1;;;7282:2:42;7267:18;;;;7254:32;;6842:450::o;7489:127::-;7550:10;7545:3;7541:20;7538:1;7531:31;7581:4;7578:1;7571:15;7605:4;7602:1;7595:15;7621:632;7686:5;7716:18;7757:2;7749:6;7746:14;7743:40;;;7763:18;;:::i;:::-;7838:2;7832:9;7806:2;7892:15;;-1:-1:-1;;7888:24:42;;;7914:2;7884:33;7880:42;7868:55;;;7938:18;;;7958:22;;;7935:46;7932:72;;;7984:18;;:::i;:::-;8024:10;8020:2;8013:22;8053:6;8044:15;;8083:6;8075;8068:22;8123:3;8114:6;8109:3;8105:16;8102:25;8099:45;;;8140:1;8137;8130:12;8099:45;8190:6;8185:3;8178:4;8170:6;8166:17;8153:44;8245:1;8238:4;8229:6;8221;8217:19;8213:30;8206:41;;;;7621:632;;;;;:::o;8258:1007::-;8372:6;8380;8388;8396;8404;8412;8465:3;8453:9;8444:7;8440:23;8436:33;8433:53;;;8482:1;8479;8472:12;8433:53;8521:9;8508:23;8540:31;8565:5;8540:31;:::i;:::-;8590:5;-1:-1:-1;8647:2:42;8632:18;;8619:32;8660:33;8619:32;8660:33;:::i;:::-;8712:7;-1:-1:-1;8770:2:42;8755:18;;8742:32;8797:18;8786:30;;8783:50;;;8829:1;8826;8819:12;8783:50;8852:22;;8905:4;8897:13;;8893:27;-1:-1:-1;8883:55:42;;8934:1;8931;8924:12;8883:55;8957:74;9023:7;9018:2;9005:16;9000:2;8996;8992:11;8957:74;:::i;:::-;8947:84;;;9083:2;9072:9;9068:18;9055:32;9096:33;9121:7;9096:33;:::i;:::-;8258:1007;;;;-1:-1:-1;8258:1007:42;;9202:3;9187:19;;9174:33;;9254:3;9239:19;;;9226:33;;-1:-1:-1;8258:1007:42;-1:-1:-1;;8258:1007:42:o;9270:247::-;9329:6;9382:2;9370:9;9361:7;9357:23;9353:32;9350:52;;;9398:1;9395;9388:12;9350:52;9437:9;9424:23;9456:31;9481:5;9456:31;:::i;9522:585::-;9599:6;9607;9660:2;9648:9;9639:7;9635:23;9631:32;9628:52;;;9676:1;9673;9666:12;9628:52;9715:9;9702:23;9734:31;9759:5;9734:31;:::i;:::-;9784:5;-1:-1:-1;9840:2:42;9825:18;;9812:32;9867:18;9856:30;;9853:50;;;9899:1;9896;9889:12;9853:50;9922:22;;9975:4;9967:13;;9963:27;-1:-1:-1;9953:55:42;;10004:1;10001;9994:12;9953:55;10027:74;10093:7;10088:2;10075:16;10070:2;10066;10062:11;10027:74;:::i;:::-;10017:84;;;9522:585;;;;;:::o;10547:380::-;10626:1;10622:12;;;;10669;;;10690:61;;10744:4;10736:6;10732:17;10722:27;;10690:61;10797:2;10789:6;10786:14;10766:18;10763:38;10760:161;;10843:10;10838:3;10834:20;10831:1;10824:31;10878:4;10875:1;10868:15;10906:4;10903:1;10896:15;10760:161;;10547:380;;;:::o;11283:127::-;11344:10;11339:3;11335:20;11332:1;11325:31;11375:4;11372:1;11365:15;11399:4;11396:1;11389:15;11415:127;11476:10;11471:3;11467:20;11464:1;11457:31;11507:4;11504:1;11497:15;11531:4;11528:1;11521:15;11547:128;11614:9;;;11635:11;;;11632:37;;;11649:18;;:::i;11680:127::-;11741:10;11736:3;11732:20;11729:1;11722:31;11772:4;11769:1;11762:15;11796:4;11793:1;11786:15;11812:135;11851:3;11872:17;;;11869:43;;11892:18;;:::i;:::-;-1:-1:-1;11939:1:42;11928:13;;11812:135::o;12652:287::-;12781:3;12819:6;12813:13;12835:66;12894:6;12889:3;12882:4;12874:6;12870:17;12835:66;:::i;:::-;12917:16;;;;;12652:287;-1:-1:-1;;12652:287:42:o;12944:273::-;13012:6;13065:2;13053:9;13044:7;13040:23;13036:32;13033:52;;;13081:1;13078;13071:12;13033:52;13113:9;13107:16;13163:4;13156:5;13152:16;13145:5;13142:27;13132:55;;13183:1;13180;13173:12;13699:545;13801:2;13796:3;13793:11;13790:448;;;13837:1;13862:5;13858:2;13851:17;13907:4;13903:2;13893:19;13977:2;13965:10;13961:19;13958:1;13954:27;13948:4;13944:38;14013:4;14001:10;13998:20;13995:47;;;-1:-1:-1;14036:4:42;13995:47;14091:2;14086:3;14082:12;14079:1;14075:20;14069:4;14065:31;14055:41;;14146:82;14164:2;14157:5;14154:13;14146:82;;;14209:17;;;14190:1;14179:13;14146:82;;;14150:3;;;13699:545;;;:::o;14420:1352::-;14546:3;14540:10;14573:18;14565:6;14562:30;14559:56;;;14595:18;;:::i;:::-;14624:97;14714:6;14674:38;14706:4;14700:11;14674:38;:::i;:::-;14668:4;14624:97;:::i;:::-;14776:4;;14840:2;14829:14;;14857:1;14852:663;;;;15559:1;15576:6;15573:89;;;-1:-1:-1;15628:19:42;;;15622:26;15573:89;-1:-1:-1;;14377:1:42;14373:11;;;14369:24;14365:29;14355:40;14401:1;14397:11;;;14352:57;15675:81;;14822:944;;14852:663;13646:1;13639:14;;;13683:4;13670:18;;-1:-1:-1;;14888:20:42;;;15006:236;15020:7;15017:1;15014:14;15006:236;;;15109:19;;;15103:26;15088:42;;15201:27;;;;15169:1;15157:14;;;;15036:19;;15006:236;;;15010:3;15270:6;15261:7;15258:19;15255:201;;;15331:19;;;15325:26;-1:-1:-1;;15414:1:42;15410:14;;;15426:3;15406:24;15402:37;15398:42;15383:58;15368:74;;15255:201;-1:-1:-1;;;;;15502:1:42;15486:14;;;15482:22;15469:36;;-1:-1:-1;14420:1352:42:o;15777:408::-;15979:2;15961:21;;;16018:2;15998:18;;;15991:30;16057:34;16052:2;16037:18;;16030:62;-1:-1:-1;;;16123:2:42;16108:18;;16101:42;16175:3;16160:19;;15777:408::o;16190:::-;16392:2;16374:21;;;16431:2;16411:18;;;16404:30;16470:34;16465:2;16450:18;;16443:62;-1:-1:-1;;;16536:2:42;16521:18;;16514:42;16588:3;16573:19;;16190:408::o;17381:125::-;17446:9;;;17467:10;;;17464:36;;;17480:18;;:::i;17511:168::-;17584:9;;;17615;;17632:15;;;17626:22;;17612:37;17602:71;;17653:18;;:::i;17684:217::-;17724:1;17750;17740:132;;17794:10;17789:3;17785:20;17782:1;17775:31;17829:4;17826:1;17819:15;17857:4;17854:1;17847:15;17740:132;-1:-1:-1;17886:9:42;;17684:217::o;20485:373::-;20573:6;20581;20589;20642:2;20630:9;20621:7;20617:23;20613:32;20610:52;;;20658:1;20655;20648:12;20610:52;20687:9;20681:16;20671:26;;20737:2;20726:9;20722:18;20716:25;20706:35;;20784:2;20773:9;20769:18;20763:25;20797:31;20822:5;20797:31;:::i;:::-;20847:5;20837:15;;;20485:373;;;;;:::o;20863:184::-;20933:6;20986:2;20974:9;20965:7;20961:23;20957:32;20954:52;;;21002:1;20999;20992:12;20954:52;-1:-1:-1;21025:16:42;;20863:184;-1:-1:-1;20863:184:42:o;22156:407::-;22358:2;22340:21;;;22397:2;22377:18;;;22370:30;22436:34;22431:2;22416:18;;22409:62;-1:-1:-1;;;22502:2:42;22487:18;;22480:41;22553:3;22538:19;;22156:407::o;23362:245::-;23429:6;23482:2;23470:9;23461:7;23457:23;23453:32;23450:52;;;23498:1;23495;23488:12;23450:52;23530:9;23524:16;23549:28;23571:5;23549:28;:::i;24837:220::-;24986:2;24975:9;24968:21;24949:4;25006:45;25047:2;25036:9;25032:18;25024:6;25006:45;:::i",
    "linkReferences": {
      "src/lib/SaloonLib.sol": {
        "SaloonLib": [
          {
            "start": 7188,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "588": [
        {
          "start": 4094,
          "length": 32
        },
        {
          "start": 4158,
          "length": 32
        },
        {
          "start": 4416,
          "length": 32
        },
        {
          "start": 4480,
          "length": 32
        },
        {
          "start": 4623,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnershipTransfer()": "b842e87f",
    "activeStrategies(uint256)": "b20b2429",
    "activeTokens(uint256)": "9f224f35",
    "addNewBountyPool(address,address,string,address,uint256,uint256)": "32fce602",
    "billPremium(uint256)": "2dbe051e",
    "calcRequiredPremiumBalancePerPeriod(uint256,uint256)": "836ef1fa",
    "collectAllReferralProfits()": "3e8888d9",
    "collectAllSaloonProfits(address)": "ecd7fbed",
    "collectReferralProfit(address)": "a089a520",
    "collectSaloonProfits(address,address)": "cf9564b9",
    "extendReferralPeriod(uint256,uint256)": "5de406dc",
    "initialize(address)": "c4d66de8",
    "minTokenStakeAmount(address)": "39458723",
    "nftInfo(uint256)": "1f8bc790",
    "owner()": "8da5cb5b",
    "pidNFTList(uint256,uint256)": "96ea48e8",
    "pidStrategies(uint256,bytes32)": "074ecf03",
    "poolInfo(uint256)": "1526fe27",
    "proxiableUUID()": "52d1902d",
    "receiveStrategyYield(address,uint256)": "1aebcecb",
    "referralBalances(address,address)": "011b408b",
    "saloonBountyProfit(address)": "e45abd0f",
    "saloonPremiumProfit(address)": "ca006148",
    "saloonStrategyProfit(address)": "598d17bf",
    "strategyAddressToPid(address)": "957deecc",
    "tokenWhitelist(address)": "753d7563",
    "transferOwnership(address)": "f2fde38b",
    "updateTokenWhitelist(address,bool,uint256)": "2cb0dfcc",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "viewBountyBalance(uint256)": "6ac6d812"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"BountyBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BountyPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"NewBountyDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PremiumBilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalOrUnstakeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"referralPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"tokenWhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeStrategies\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_projectName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralEndTime\",\"type\":\"uint256\"}],\"name\":\"addNewBountyPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"billPremium\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"}],\"name\":\"calcRequiredPremiumBalancePerPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredPremiumBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectAllReferralProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saloonWallet\",\"type\":\"address\"}],\"name\":\"collectAllSaloonProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"collectReferralProfit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_saloonWallet\",\"type\":\"address\"}],\"name\":\"collectSaloonProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"extendReferralPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategyFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minTokenStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pidNFTList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pidStrategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"apy\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scalingMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.GeneralInfo\",\"name\":\"generalInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"projectDepositHeld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectDepositInStrategy\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.DepositInfo\",\"name\":\"depositInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"premiumBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumAvailable\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.PremiumInfo\",\"name\":\"premiumInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalScheduledAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawalExecuted\",\"type\":\"bool\"}],\"internalType\":\"struct ISaloon.TimelockInfo\",\"name\":\"poolTimelock\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"currentX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unstakedTokens\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ISaloon.CurveInfo\",\"name\":\"curveInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.ReferralInfo\",\"name\":\"referralInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"freezeTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"receiveStrategyYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonBountyProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonPremiumProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonStrategyProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyAddressToPid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minStakeAmount\",\"type\":\"uint256\"}],\"name\":\"updateTokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"viewBountyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addNewBountyPool(address,address,string,address,uint256,uint256)\":{\"details\":\"Can only be called by the owner.\",\"params\":{\"_projectName\":\"Name of the project that is hosting the bounty\",\"_projectWallet\":\"Address that will be able to deposit funds, set APY and poolCap for the pool\",\"_referralEndTime\":\"Timestamp up until the referral will be active\",\"_referralFee\":\"Referral fee that the referrer will receive (in BPS), max 50%\",\"_referrer\":\"Address of the individual that referred this bounty to The Saloon\",\"_token\":\"Token to be used by bounty pool\"}},\"billPremium(uint256)\":{\"params\":{\"_pid\":\"The pool id for the bounty\"}},\"collectAllSaloonProfits(address)\":{\"params\":{\"_saloonWallet\":\"Address where the funds will go to\"}},\"collectReferralProfit(address)\":{\"params\":{\"_token\":\"Token used by the bounty that was referred\"}},\"collectSaloonProfits(address,address)\":{\"params\":{\"_saloonWallet\":\"Address where the funds will go to\",\"_token\":\"Token address to be transferred\"}},\"extendReferralPeriod(uint256,uint256)\":{\"params\":{\"_endTime\":\"The new end time for the referral bonus\",\"_pid\":\"The pool id for the bounty\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateTokenWhitelist(address,bool,uint256)\":{\"details\":\"Only one token is allowed per pool\",\"params\":{\"_minStakeAmount\":\"The minimum amount for staking for pools pools using such token\",\"_token\":\"ERC20 to add or remove from whitelist\",\"_whitelisted\":\"bool to select if a token will be added or removed\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addNewBountyPool(address,address,string,address,uint256,uint256)\":{\"notice\":\"Adds a new bounty pool.\"},\"billPremium(uint256)\":{\"notice\":\"Bill premiums for a single pool.\"},\"collectAllReferralProfits()\":{\"notice\":\"Allows referrers to collect their profit from all bounties for all tokens\"},\"collectAllSaloonProfits(address)\":{\"notice\":\"Transfer Saloon profits for all tokens from premiums and bounties collected\"},\"collectReferralProfit(address)\":{\"notice\":\"Allows referrers to collect their profit from all bounties for one token\"},\"collectSaloonProfits(address,address)\":{\"notice\":\"Transfer Saloon profits for a specific token from premiums and bounties collected\"},\"extendReferralPeriod(uint256,uint256)\":{\"notice\":\"Extend the referral period for the bounty. The new end time can only be larger than the current value.\"},\"updateTokenWhitelist(address,bool,uint256)\":{\"notice\":\"Updates the list of ERC20 tokens allow to be used in bounty pools_minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SaloonBounty.sol\":\"SaloonCentral\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":decimath/=lib/decimath/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31\",\"dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb\",\"dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xefe5b03cf4147c27e7e38a1b8ddb3e0dc7f0ba8f6be71627d962fa91c98943dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41b6359e78c5a2ce4c9d7697a876bcb307f05ddd9f4695831d70efcd425eebc\",\"dweb:/ipfs/QmbmbxDte15Thu4pWG4dNYRHVSbXZZEDRSWfg8haKNjNJp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x20ad2fc58bb29dd0c35a3ecd1c01a8e0641320cda53c8044e2d31a7644b48767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://891f78963aa3e65ba6d962344b6850338b54e73541a6ae3f707506c1255edd6a\",\"dweb:/ipfs/Qmde3JnEmyGjUKi7KevjgPbyhQ57yCLarojM8VyhGgANze\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622\",\"dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3\",\"dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xf6fc9552edefce9c1c324064496374107ab29105e57595b484decb35cb257e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f83bee401a62601a0a493b6a2479b00420db2b228e4e86b6f9e26444aa9f9b9\",\"dweb:/ipfs/QmewK7VcdumysxsHyVb6FYjTryn5qJKcfCY1Cmvmqxvn1Q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x26058f63de05c657b2409bb4349c25b3cd3d0d61f523318b661894b7ec34fc7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5df5fc65c6255a2fceeadb3ff3d419878eda019f93d015d4faf96c5c44c54329\",\"dweb:/ipfs/QmeNa1t44nAMjhwEcN86sf5udkpATLWHQkdXbaTrzvYHTW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/prb-math/src/Core.sol\":{\"keccak256\":\"0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc\",\"dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo\"]},\"lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4\",\"dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ\"]},\"src/BountyTokenNFT.sol\":{\"keccak256\":\"0xe4e6c157285545f373526734238479f6f079e075a45445567a6e5205d1c13d4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2b683e2b6f37c1ecf6947c03f457c9b73d39b0c705861ef4abd0a1c86e29fe\",\"dweb:/ipfs/QmTZkEt5nDXJjVuh7SXkXg3jz44sSYMNEosJYABCxdbU4h\"]},\"src/SaloonBounty.sol\":{\"keccak256\":\"0xff357d5737414dad16d668041bce2a8e6367e63e899a691d23fd9286be12f824\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a22930901f81f2fc3b4e9c475dc0ed09231dae030957778376b1b010f5decd9\",\"dweb:/ipfs/QmSsbcXrM5es1AJxc6zTiqHvihk3x1usfBJ8cB4HjcwNST\"]},\"src/SaloonCommon.sol\":{\"keccak256\":\"0x3792865b8c15b0934d274526c3679eb45c43bcd3ecc630cd7427402b1aa1de1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2891a77ceaa6d84f18b0152ea1838ac9f1588c1c73cecd38f758a3c7a62a890\",\"dweb:/ipfs/QmaZHRzFfUMdLmSSjNKECLqFCt1d8AmaVL5Uq1qmCDvhpX\"]},\"src/SaloonStorage.sol\":{\"keccak256\":\"0x5341fa5926728919fdafcc3401f2b73062bcb4b7f0d4d7ea52e9a2d5f8925f5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da93d34c1a49a48741b65e9bfb59fcf1b876ac514ebddf87b22dac91924f98f5\",\"dweb:/ipfs/QmPtrQvfqCMnP1eaxnHZmShGb28PZtzZGgwbNFTgt9vDsa\"]},\"src/StakeNFT.sol\":{\"keccak256\":\"0x1e475a1a1c8cd0d5c635705382b14e094dae81ed544c8b3c18a0d8db9e7fb357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c71b10ba726e15f73036d769005f60672046b4665ef808ba6fed2500d3989318\",\"dweb:/ipfs/Qmf42da56xZD4jd7xF5EG3QpoC4VGPLEKzn6QP76NyVJ1S\"]},\"src/StargateStrategy.sol\":{\"keccak256\":\"0x0633bc75edcdfef96951bcbad280038bb026403f3ef064d898030dd5a620be66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7e5a105815447426d835c8f7f5f124147ca49a1c266327d10ba4e313b122d28\",\"dweb:/ipfs/QmSA4CVzbAHcM5YkBhWEYsmuDxAibPXEPL9Sh2FiPc4Be1\"]},\"src/StrategyFactory.sol\":{\"keccak256\":\"0x3ef442ffea0e03e931d821eebe90677816511ee62ae8249860c43a290862081c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://df5cb9796c8a0d21b1d459d758b9179ac9176c6c923f63be9f88344966ff5a2f\",\"dweb:/ipfs/QmeKmvwNbfMoo3267sRvsSzeuZdFXnHhYTqFJa4VQzT4h3\"]},\"src/interfaces/ISaloon.sol\":{\"keccak256\":\"0xc6b7a0947c41635b05e087f07607d663f34b2821660ceae7922c6002b327121a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://440aa50c487f4f33d7bf244c8f7247f378045a6b33408e8684a46cdee0fa94a8\",\"dweb:/ipfs/QmWPwBAQobqjsbuTn9dTqVRqWUbXanPSP53DGzU4TtLxbP\"]},\"src/interfaces/IStargateLPStaking.sol\":{\"keccak256\":\"0xe9a1809f72ea884a7efbe242ab20c076a410c3c9343f922358c925dde0bb646e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://49f815734c64e5e40562194c971c0e2cd07ab4fe5b598dd31bdbd99d4f7332a3\",\"dweb:/ipfs/QmUMBPbPmDQR3eRj3Witv6zSDxhf5eLZwWM2Rh17LKoDXH\"]},\"src/interfaces/IStargateLPToken.sol\":{\"keccak256\":\"0x833d671a6a8931417d786c94ea52ab7836a5600a62dd9a7fd51a89ae046c1b0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da84e795a91b6ee4c13f765819192ab21f293f73ef19d971da6749d9fd918abb\",\"dweb:/ipfs/QmZ5mGyuaJwGJU3zGqHkmjntKgjeuoaY6xNDzoNwk8aBCA\"]},\"src/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x49e37ab901c32cdff42e175d9331be3c9f049b67f72453100da8643afbb49bcf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3c3d5c34d78c40a967009367cd9b8ac25f3bc46907bc3fb8afaeb2ba5622ebc\",\"dweb:/ipfs/QmYGMT4kXiqKVdf4affdUvHF8ErhqkhqxiVsAwG8pFJMTp\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0x61df32bf05ed8ada74307ad39b9e4feacab1f429b74b089e317714f9c158e48e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://914514dd8e6e691b42b9b594195d5c12f0227179148799678dd633bfb8097852\",\"dweb:/ipfs/QmQrBUcs5AQnKRzR4zbMkjqxtjQagQ9y4UeKHB7kqskJDw\"]},\"src/interfaces/IStrategyFactory.sol\":{\"keccak256\":\"0x053b70c802f8ff3d446dbb1fe4dad88f6af977959d7253b488e0862759381375\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fdaec0ba085431307e27883728914ca26812547e70c033501e1800a33bbf8729\",\"dweb:/ipfs/QmfQa3gdT7RdC9wejgXTK16h5LpE2t34drxkR71Q3G4Yod\"]},\"src/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0x1cbd03c5fe3ee590bdd40fd62c47fe403f6ee3734be9e0c24be2ecfe87bf3f5f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d7b0b3b880c5a29585ffcb3142d78a2f5749cb4c5e1f2461a2052ea0f5cf9a2e\",\"dweb:/ipfs/QmWJg3HTUsEx56YS2ntgoH7f3inuTJvV39WvcC2pQbcNVe\"]},\"src/lib/ERC721Upgradeable.sol\":{\"keccak256\":\"0xfe1f4bcd02b93f6cb4cefd82cd68d556a933ea28ca0d779e7966d2599429f7fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98e50b618c637989900ef9df55f6f6835532f75b6157f396b881b0e48676ea81\",\"dweb:/ipfs/QmaF1q987CXxBRV398rGeDaHa93kCebWfYEmACfUnmLn23\"]},\"src/lib/OwnableUpgradeable.sol\":{\"keccak256\":\"0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5\",\"dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz\"]},\"src/lib/SaloonLib.sol\":{\"keccak256\":\"0xee730e402b756f6aed7a4f2bb35de3d667ace6623613bf6222b5d98a489ae823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da83edbe269bb15646a5654bb56168303679a4f7153ade3723a14bb0908be5ed\",\"dweb:/ipfs/QmTJin4GiEYwRS46BMbL3ddhkpr2xc6xQinVfJemDumsge\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hunter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBountyDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PremiumBilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalOrUnstakeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "referralPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "tokenWhitelistUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeStrategies",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_projectName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_referrer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_referralFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_referralEndTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewBountyPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "billPremium",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_apy",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calcRequiredPremiumBalancePerPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "requiredPremiumBalance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectAllReferralProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saloonWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectAllSaloonProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectReferralProfit",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_saloonWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectSaloonProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_endTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendReferralPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategyFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minTokenStakeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nftInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "xDelta",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastClaimedTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timelimit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pidNFTList",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pidStrategies",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "struct ISaloon.GeneralInfo",
              "name": "generalInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "tokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "apy",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "projectWallet",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "projectName",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "poolCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scalingMultiplier",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.DepositInfo",
              "name": "depositInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "projectDepositHeld",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectDepositInStrategy",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.PremiumInfo",
              "name": "premiumInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "premiumBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumAvailable",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.TimelockInfo",
              "name": "poolTimelock",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalScheduledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrawalExecuted",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.CurveInfo",
              "name": "curveInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "currentX",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentY",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "unstakedTokens",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.ReferralInfo",
              "name": "referralInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "referralFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "freezeTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveStrategyYield"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referralBalances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonBountyProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonPremiumProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonStrategyProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyAddressToPid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_whitelisted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_minStakeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "viewBountyBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addNewBountyPool(address,address,string,address,uint256,uint256)": {
            "details": "Can only be called by the owner.",
            "params": {
              "_projectName": "Name of the project that is hosting the bounty",
              "_projectWallet": "Address that will be able to deposit funds, set APY and poolCap for the pool",
              "_referralEndTime": "Timestamp up until the referral will be active",
              "_referralFee": "Referral fee that the referrer will receive (in BPS), max 50%",
              "_referrer": "Address of the individual that referred this bounty to The Saloon",
              "_token": "Token to be used by bounty pool"
            }
          },
          "billPremium(uint256)": {
            "params": {
              "_pid": "The pool id for the bounty"
            }
          },
          "collectAllSaloonProfits(address)": {
            "params": {
              "_saloonWallet": "Address where the funds will go to"
            }
          },
          "collectReferralProfit(address)": {
            "params": {
              "_token": "Token used by the bounty that was referred"
            }
          },
          "collectSaloonProfits(address,address)": {
            "params": {
              "_saloonWallet": "Address where the funds will go to",
              "_token": "Token address to be transferred"
            }
          },
          "extendReferralPeriod(uint256,uint256)": {
            "params": {
              "_endTime": "The new end time for the referral bonus",
              "_pid": "The pool id for the bounty"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateTokenWhitelist(address,bool,uint256)": {
            "details": "Only one token is allowed per pool",
            "params": {
              "_minStakeAmount": "The minimum amount for staking for pools pools using such token",
              "_token": "ERC20 to add or remove from whitelist",
              "_whitelisted": "bool to select if a token will be added or removed"
            }
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addNewBountyPool(address,address,string,address,uint256,uint256)": {
            "notice": "Adds a new bounty pool."
          },
          "billPremium(uint256)": {
            "notice": "Bill premiums for a single pool."
          },
          "collectAllReferralProfits()": {
            "notice": "Allows referrers to collect their profit from all bounties for all tokens"
          },
          "collectAllSaloonProfits(address)": {
            "notice": "Transfer Saloon profits for all tokens from premiums and bounties collected"
          },
          "collectReferralProfit(address)": {
            "notice": "Allows referrers to collect their profit from all bounties for one token"
          },
          "collectSaloonProfits(address,address)": {
            "notice": "Transfer Saloon profits for a specific token from premiums and bounties collected"
          },
          "extendReferralPeriod(uint256,uint256)": {
            "notice": "Extend the referral period for the bounty. The new end time can only be larger than the current value."
          },
          "updateTokenWhitelist(address,bool,uint256)": {
            "notice": "Updates the list of ERC20 tokens allow to be used in bounty pools_minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":decimath/=lib/decimath/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SaloonBounty.sol": "SaloonCentral"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1",
        "urls": [
          "bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31",
          "dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5",
        "urls": [
          "bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb",
          "dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xefe5b03cf4147c27e7e38a1b8ddb3e0dc7f0ba8f6be71627d962fa91c98943dd",
        "urls": [
          "bzz-raw://d41b6359e78c5a2ce4c9d7697a876bcb307f05ddd9f4695831d70efcd425eebc",
          "dweb:/ipfs/QmbmbxDte15Thu4pWG4dNYRHVSbXZZEDRSWfg8haKNjNJp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x20ad2fc58bb29dd0c35a3ecd1c01a8e0641320cda53c8044e2d31a7644b48767",
        "urls": [
          "bzz-raw://891f78963aa3e65ba6d962344b6850338b54e73541a6ae3f707506c1255edd6a",
          "dweb:/ipfs/Qmde3JnEmyGjUKi7KevjgPbyhQ57yCLarojM8VyhGgANze"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2",
        "urls": [
          "bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622",
          "dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69",
        "urls": [
          "bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3",
          "dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xf6fc9552edefce9c1c324064496374107ab29105e57595b484decb35cb257e3c",
        "urls": [
          "bzz-raw://0f83bee401a62601a0a493b6a2479b00420db2b228e4e86b6f9e26444aa9f9b9",
          "dweb:/ipfs/QmewK7VcdumysxsHyVb6FYjTryn5qJKcfCY1Cmvmqxvn1Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x26058f63de05c657b2409bb4349c25b3cd3d0d61f523318b661894b7ec34fc7a",
        "urls": [
          "bzz-raw://5df5fc65c6255a2fceeadb3ff3d419878eda019f93d015d4faf96c5c44c54329",
          "dweb:/ipfs/QmeNa1t44nAMjhwEcN86sf5udkpATLWHQkdXbaTrzvYHTW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
        "urls": [
          "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
          "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/Core.sol": {
        "keccak256": "0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76",
        "urls": [
          "bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc",
          "dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926",
        "urls": [
          "bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4",
          "dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ"
        ],
        "license": "MIT"
      },
      "src/BountyTokenNFT.sol": {
        "keccak256": "0xe4e6c157285545f373526734238479f6f079e075a45445567a6e5205d1c13d4d",
        "urls": [
          "bzz-raw://bd2b683e2b6f37c1ecf6947c03f457c9b73d39b0c705861ef4abd0a1c86e29fe",
          "dweb:/ipfs/QmTZkEt5nDXJjVuh7SXkXg3jz44sSYMNEosJYABCxdbU4h"
        ],
        "license": "MIT"
      },
      "src/SaloonBounty.sol": {
        "keccak256": "0xff357d5737414dad16d668041bce2a8e6367e63e899a691d23fd9286be12f824",
        "urls": [
          "bzz-raw://0a22930901f81f2fc3b4e9c475dc0ed09231dae030957778376b1b010f5decd9",
          "dweb:/ipfs/QmSsbcXrM5es1AJxc6zTiqHvihk3x1usfBJ8cB4HjcwNST"
        ],
        "license": "MIT"
      },
      "src/SaloonCommon.sol": {
        "keccak256": "0x3792865b8c15b0934d274526c3679eb45c43bcd3ecc630cd7427402b1aa1de1a",
        "urls": [
          "bzz-raw://a2891a77ceaa6d84f18b0152ea1838ac9f1588c1c73cecd38f758a3c7a62a890",
          "dweb:/ipfs/QmaZHRzFfUMdLmSSjNKECLqFCt1d8AmaVL5Uq1qmCDvhpX"
        ],
        "license": "MIT"
      },
      "src/SaloonStorage.sol": {
        "keccak256": "0x5341fa5926728919fdafcc3401f2b73062bcb4b7f0d4d7ea52e9a2d5f8925f5a",
        "urls": [
          "bzz-raw://da93d34c1a49a48741b65e9bfb59fcf1b876ac514ebddf87b22dac91924f98f5",
          "dweb:/ipfs/QmPtrQvfqCMnP1eaxnHZmShGb28PZtzZGgwbNFTgt9vDsa"
        ],
        "license": "MIT"
      },
      "src/StakeNFT.sol": {
        "keccak256": "0x1e475a1a1c8cd0d5c635705382b14e094dae81ed544c8b3c18a0d8db9e7fb357",
        "urls": [
          "bzz-raw://c71b10ba726e15f73036d769005f60672046b4665ef808ba6fed2500d3989318",
          "dweb:/ipfs/Qmf42da56xZD4jd7xF5EG3QpoC4VGPLEKzn6QP76NyVJ1S"
        ],
        "license": "MIT"
      },
      "src/StargateStrategy.sol": {
        "keccak256": "0x0633bc75edcdfef96951bcbad280038bb026403f3ef064d898030dd5a620be66",
        "urls": [
          "bzz-raw://b7e5a105815447426d835c8f7f5f124147ca49a1c266327d10ba4e313b122d28",
          "dweb:/ipfs/QmSA4CVzbAHcM5YkBhWEYsmuDxAibPXEPL9Sh2FiPc4Be1"
        ],
        "license": "MIT"
      },
      "src/StrategyFactory.sol": {
        "keccak256": "0x3ef442ffea0e03e931d821eebe90677816511ee62ae8249860c43a290862081c",
        "urls": [
          "bzz-raw://df5cb9796c8a0d21b1d459d758b9179ac9176c6c923f63be9f88344966ff5a2f",
          "dweb:/ipfs/QmeKmvwNbfMoo3267sRvsSzeuZdFXnHhYTqFJa4VQzT4h3"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/ISaloon.sol": {
        "keccak256": "0xc6b7a0947c41635b05e087f07607d663f34b2821660ceae7922c6002b327121a",
        "urls": [
          "bzz-raw://440aa50c487f4f33d7bf244c8f7247f378045a6b33408e8684a46cdee0fa94a8",
          "dweb:/ipfs/QmWPwBAQobqjsbuTn9dTqVRqWUbXanPSP53DGzU4TtLxbP"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStargateLPStaking.sol": {
        "keccak256": "0xe9a1809f72ea884a7efbe242ab20c076a410c3c9343f922358c925dde0bb646e",
        "urls": [
          "bzz-raw://49f815734c64e5e40562194c971c0e2cd07ab4fe5b598dd31bdbd99d4f7332a3",
          "dweb:/ipfs/QmUMBPbPmDQR3eRj3Witv6zSDxhf5eLZwWM2Rh17LKoDXH"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStargateLPToken.sol": {
        "keccak256": "0x833d671a6a8931417d786c94ea52ab7836a5600a62dd9a7fd51a89ae046c1b0f",
        "urls": [
          "bzz-raw://da84e795a91b6ee4c13f765819192ab21f293f73ef19d971da6749d9fd918abb",
          "dweb:/ipfs/QmZ5mGyuaJwGJU3zGqHkmjntKgjeuoaY6xNDzoNwk8aBCA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStargateRouter.sol": {
        "keccak256": "0x49e37ab901c32cdff42e175d9331be3c9f049b67f72453100da8643afbb49bcf",
        "urls": [
          "bzz-raw://b3c3d5c34d78c40a967009367cd9b8ac25f3bc46907bc3fb8afaeb2ba5622ebc",
          "dweb:/ipfs/QmYGMT4kXiqKVdf4affdUvHF8ErhqkhqxiVsAwG8pFJMTp"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0x61df32bf05ed8ada74307ad39b9e4feacab1f429b74b089e317714f9c158e48e",
        "urls": [
          "bzz-raw://914514dd8e6e691b42b9b594195d5c12f0227179148799678dd633bfb8097852",
          "dweb:/ipfs/QmQrBUcs5AQnKRzR4zbMkjqxtjQagQ9y4UeKHB7kqskJDw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStrategyFactory.sol": {
        "keccak256": "0x053b70c802f8ff3d446dbb1fe4dad88f6af977959d7253b488e0862759381375",
        "urls": [
          "bzz-raw://fdaec0ba085431307e27883728914ca26812547e70c033501e1800a33bbf8729",
          "dweb:/ipfs/QmfQa3gdT7RdC9wejgXTK16h5LpE2t34drxkR71Q3G4Yod"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/IUniswapV2Router.sol": {
        "keccak256": "0x1cbd03c5fe3ee590bdd40fd62c47fe403f6ee3734be9e0c24be2ecfe87bf3f5f",
        "urls": [
          "bzz-raw://d7b0b3b880c5a29585ffcb3142d78a2f5749cb4c5e1f2461a2052ea0f5cf9a2e",
          "dweb:/ipfs/QmWJg3HTUsEx56YS2ntgoH7f3inuTJvV39WvcC2pQbcNVe"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/ERC721Upgradeable.sol": {
        "keccak256": "0xfe1f4bcd02b93f6cb4cefd82cd68d556a933ea28ca0d779e7966d2599429f7fe",
        "urls": [
          "bzz-raw://98e50b618c637989900ef9df55f6f6835532f75b6157f396b881b0e48676ea81",
          "dweb:/ipfs/QmaF1q987CXxBRV398rGeDaHa93kCebWfYEmACfUnmLn23"
        ],
        "license": "MIT"
      },
      "src/lib/OwnableUpgradeable.sol": {
        "keccak256": "0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661",
        "urls": [
          "bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5",
          "dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz"
        ],
        "license": "MIT"
      },
      "src/lib/SaloonLib.sol": {
        "keccak256": "0xee730e402b756f6aed7a4f2bb35de3d667ace6623613bf6222b5d98a489ae823",
        "urls": [
          "bzz-raw://da83edbe269bb15646a5654bb56168303679a4f7153ade3723a14bb0908be5ed",
          "dweb:/ipfs/QmTJin4GiEYwRS46BMbL3ddhkpr2xc6xQinVfJemDumsge"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SaloonBounty.sol",
    "id": 7933,
    "exportedSymbols": {
      "Address": [
        3258
      ],
      "AddressUpgradeable": [
        1211
      ],
      "BountyTokenNFT": [
        7365
      ],
      "ContextUpgradeable": [
        1253
      ],
      "E": [
        5371
      ],
      "ERC165Upgradeable": [
        1532
      ],
      "ERC1967UpgradeUpgradeable": [
        378
      ],
      "ERC721Upgradeable": [
        12256
      ],
      "HALF_UNIT": [
        5382
      ],
      "IBeaconUpgradeable": [
        388
      ],
      "IERC165": [
        3270
      ],
      "IERC165Upgradeable": [
        1544
      ],
      "IERC1822ProxiableUpgradeable": [
        9
      ],
      "IERC20": [
        2487
      ],
      "IERC20Permit": [
        2523
      ],
      "IERC721": [
        2928
      ],
      "IERC721MetadataUpgradeable": [
        927
      ],
      "IERC721ReceiverUpgradeable": [
        784
      ],
      "IERC721Upgradeable": [
        900
      ],
      "ISaloon": [
        10696
      ],
      "IStargateLPStaking": [
        10757
      ],
      "IStargateLPToken": [
        10775
      ],
      "IStargateRouter": [
        10799
      ],
      "IStrategy": [
        10829
      ],
      "IStrategyFactory": [
        10841
      ],
      "IUniswapV2Router": [
        11149
      ],
      "Initializable": [
        557
      ],
      "LOG2_10": [
        5393
      ],
      "LOG2_E": [
        5404
      ],
      "MAX_UD60x18": [
        5415
      ],
      "MAX_WHOLE_UD60x18": [
        5426
      ],
      "MathUpgradeable": [
        2409
      ],
      "OwnableUpgradeable": [
        12399
      ],
      "PI": [
        5434
      ],
      "PRBMathUD60x18__AddOverflow": [
        5310
      ],
      "PRBMathUD60x18__CeilOverflow": [
        5316
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        5328
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        5322
      ],
      "PRBMathUD60x18__GmOverflow": [
        5337
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        5343
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        5349
      ],
      "PRBMathUD60x18__SubUnderflow": [
        5358
      ],
      "PRBMathUD60x18__ToUD60x18Overflow": [
        5363
      ],
      "ReentrancyGuardUpgradeable": [
        766
      ],
      "SafeERC20": [
        2812
      ],
      "SafeMath": [
        3582
      ],
      "SaloonCentral": [
        7932
      ],
      "SaloonCommon": [
        8248
      ],
      "SaloonLib": [
        12757
      ],
      "SaloonStorage": [
        8334
      ],
      "StakeNFT": [
        9780
      ],
      "StargateStrategy": [
        10468
      ],
      "StorageSlotUpgradeable": [
        1313
      ],
      "StrategyFactory": [
        10527
      ],
      "StringsUpgradeable": [
        1488
      ],
      "UD60x18": [
        5302
      ],
      "UNIT": [
        5445
      ],
      "UUPSUpgradeable": [
        693
      ],
      "ZERO": [
        5453
      ],
      "add": [
        6303
      ],
      "and": [
        6326
      ],
      "avg": [
        5516
      ],
      "ceil": [
        5543
      ],
      "div": [
        5571
      ],
      "eq": [
        6349
      ],
      "exp": [
        5614
      ],
      "exp2": [
        5657
      ],
      "floor": [
        5669
      ],
      "frac": [
        5681
      ],
      "fromUD60x18": [
        6161
      ],
      "gm": [
        5745
      ],
      "gt": [
        6372
      ],
      "gte": [
        6395
      ],
      "inv": [
        5767
      ],
      "isZero": [
        6413
      ],
      "ln": [
        5794
      ],
      "log10": [
        5844
      ],
      "log2": [
        5945
      ],
      "lshift": [
        6436
      ],
      "lt": [
        6459
      ],
      "lte": [
        6482
      ],
      "mod": [
        6508
      ],
      "msb": [
        3639
      ],
      "mul": [
        5972
      ],
      "mulDiv": [
        3765
      ],
      "mulDiv18": [
        3808
      ],
      "neq": [
        6531
      ],
      "or": [
        6557
      ],
      "pow": [
        6034
      ],
      "powu": [
        6104
      ],
      "prbExp2": [
        5071
      ],
      "prbSqrt": [
        5292
      ],
      "rshift": [
        6580
      ],
      "sqrt": [
        6143
      ],
      "sub": [
        6606
      ],
      "toUD60x18": [
        6191
      ],
      "uHALF_UNIT": [
        5375
      ],
      "uLOG2_10": [
        5386
      ],
      "uLOG2_E": [
        5397
      ],
      "uMAX_UD60x18": [
        5408
      ],
      "uMAX_WHOLE_UD60x18": [
        5419
      ],
      "uUNIT": [
        5438
      ],
      "ud": [
        6207
      ],
      "ud60x18": [
        6223
      ],
      "uncheckedAdd": [
        6633
      ],
      "uncheckedDiv": [
        6718
      ],
      "uncheckedMul": [
        6745
      ],
      "uncheckedSub": [
        6660
      ],
      "unwrap": [
        6240
      ],
      "wrap": [
        6257
      ],
      "xor": [
        6686
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8138:26",
    "nodes": [
      {
        "id": 7367,
        "nodeType": "PragmaDirective",
        "src": "32:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 7368,
        "nodeType": "ImportDirective",
        "src": "58:74:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 2813,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7369,
        "nodeType": "ImportDirective",
        "src": "133:94:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 767,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7370,
        "nodeType": "ImportDirective",
        "src": "228:86:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 694,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7371,
        "nodeType": "ImportDirective",
        "src": "315:38:26",
        "nodes": [],
        "absolutePath": "src/lib/OwnableUpgradeable.sol",
        "file": "./lib/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 12400,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7372,
        "nodeType": "ImportDirective",
        "src": "354:24:26",
        "nodes": [],
        "absolutePath": "src/StakeNFT.sol",
        "file": "./StakeNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 9781,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7373,
        "nodeType": "ImportDirective",
        "src": "379:43:26",
        "nodes": [],
        "absolutePath": "src/interfaces/IStrategyFactory.sol",
        "file": "./interfaces/IStrategyFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 10842,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7374,
        "nodeType": "ImportDirective",
        "src": "423:28:26",
        "nodes": [],
        "absolutePath": "src/SaloonCommon.sol",
        "file": "./SaloonCommon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7933,
        "sourceUnit": 8249,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7932,
        "nodeType": "ContractDefinition",
        "src": "492:7677:26",
        "nodes": [
          {
            "id": 7386,
            "nodeType": "UsingForDirective",
            "src": "618:27:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 7383,
              "name": "SafeERC20",
              "nameLocations": [
                "624:9:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2812,
              "src": "624:9:26"
            },
            "typeName": {
              "id": 7385,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7384,
                "name": "IERC20",
                "nameLocations": [
                  "638:6:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2487,
                "src": "638:6:26"
              },
              "referencedDeclaration": 2487,
              "src": "638:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2487",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 7414,
            "nodeType": "ModifierDefinition",
            "src": "651:262:26",
            "nodes": [],
            "body": {
              "id": 7413,
              "nodeType": "Block",
              "src": "693:220:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7392,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "719:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7413,
                      "src": "703:20:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                        "typeString": "struct ISaloon.PoolInfo"
                      },
                      "typeName": {
                        "id": 7391,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7390,
                          "name": "PoolInfo",
                          "nameLocations": [
                            "703:8:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10553,
                          "src": "703:8:26"
                        },
                        "referencedDeclaration": 10553,
                        "src": "703:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                          "typeString": "struct ISaloon.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7396,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7393,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8277,
                      "src": "726:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage",
                        "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7395,
                    "indexExpression": {
                      "id": 7394,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7388,
                      "src": "735:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "726:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$10553_storage",
                      "typeString": "struct ISaloon.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "703:37:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 7398,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "771:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "775:6:26",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "771:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 7400,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7392,
                                "src": "785:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                                  "typeString": "struct ISaloon.PoolInfo memory"
                                }
                              },
                              "id": 7401,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "790:11:26",
                              "memberName": "generalInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10533,
                              "src": "785:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GeneralInfo_$10571_memory_ptr",
                                "typeString": "struct ISaloon.GeneralInfo memory"
                              }
                            },
                            "id": 7402,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "802:13:26",
                            "memberName": "projectWallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10562,
                            "src": "785:30:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "771:44:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 7404,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "835:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "839:6:26",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "835:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 7406,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12267,
                            "src": "849:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "835:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "771:84:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 7409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 7397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "750:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "750:145:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7411,
                  "nodeType": "ExpressionStatement",
                  "src": "750:145:26"
                },
                {
                  "id": 7412,
                  "nodeType": "PlaceholderStatement",
                  "src": "905:1:26"
                }
              ]
            },
            "name": "onlyOwnerOrProject",
            "nameLocation": "660:18:26",
            "parameters": {
              "id": 7389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7388,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "687:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7414,
                  "src": "679:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:14:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 7435,
            "nodeType": "ModifierDefinition",
            "src": "919:154:26",
            "nodes": [],
            "body": {
              "id": 7434,
              "nodeType": "Block",
              "src": "953:120:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7420,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "979:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "963:20:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                        "typeString": "struct ISaloon.PoolInfo"
                      },
                      "typeName": {
                        "id": 7419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7418,
                          "name": "PoolInfo",
                          "nameLocations": [
                            "963:8:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10553,
                          "src": "963:8:26"
                        },
                        "referencedDeclaration": 10553,
                        "src": "963:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                          "typeString": "struct ISaloon.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7424,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7421,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8277,
                      "src": "986:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage",
                        "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7423,
                    "indexExpression": {
                      "id": 7422,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7416,
                      "src": "995:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "986:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$10553_storage",
                      "typeString": "struct ISaloon.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "963:37:26"
                },
                {
                  "condition": {
                    "id": 7427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1014:14:26",
                    "subExpression": {
                      "expression": {
                        "id": 7425,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7420,
                        "src": "1015:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                          "typeString": "struct ISaloon.PoolInfo memory"
                        }
                      },
                      "id": 7426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1020:8:26",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10552,
                      "src": "1015:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7432,
                  "nodeType": "IfStatement",
                  "src": "1010:45:26",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "706f6f6c206e6f7420616374697665",
                          "id": 7429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1037:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dc253ba22c3603a179761f926f1da6d433b8e0030fb8b0cf6995b8e4420ded46",
                            "typeString": "literal_string \"pool not active\""
                          },
                          "value": "pool not active"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dc253ba22c3603a179761f926f1da6d433b8e0030fb8b0cf6995b8e4420ded46",
                            "typeString": "literal_string \"pool not active\""
                          }
                        ],
                        "id": 7428,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "1030:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 7430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1030:25:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7431,
                    "nodeType": "ExpressionStatement",
                    "src": "1030:25:26"
                  }
                },
                {
                  "id": 7433,
                  "nodeType": "PlaceholderStatement",
                  "src": "1065:1:26"
                }
              ]
            },
            "name": "activePool",
            "nameLocation": "928:10:26",
            "parameters": {
              "id": 7417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7416,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "947:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "939:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:14:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 7452,
            "nodeType": "FunctionDefinition",
            "src": "1079:160:26",
            "nodes": [],
            "body": {
              "id": 7451,
              "nodeType": "Block",
              "src": "1144:95:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7442,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12285,
                      "src": "1154:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7444,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:16:26"
                },
                {
                  "expression": {
                    "id": 7449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7445,
                      "name": "strategyFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8308,
                      "src": "1180:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategyFactory_$10841",
                        "typeString": "contract IStrategyFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7447,
                          "name": "_strategyFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7437,
                          "src": "1215:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7446,
                        "name": "IStrategyFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10841,
                        "src": "1198:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStrategyFactory_$10841_$",
                          "typeString": "type(contract IStrategyFactory)"
                        }
                      },
                      "id": 7448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1198:34:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategyFactory_$10841",
                        "typeString": "contract IStrategyFactory"
                      }
                    },
                    "src": "1180:52:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategyFactory_$10841",
                      "typeString": "contract IStrategyFactory"
                    }
                  },
                  "id": 7450,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:52:26"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7440,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7439,
                  "name": "initializer",
                  "nameLocations": [
                    "1132:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 459,
                  "src": "1132:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:11:26"
              }
            ],
            "name": "initialize",
            "nameLocation": "1088:10:26",
            "parameters": {
              "id": 7438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7437,
                  "mutability": "mutable",
                  "name": "_strategyFactory",
                  "nameLocation": "1107:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "1099:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1098:26:26"
            },
            "returnParameters": {
              "id": 7441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:0:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7461,
            "nodeType": "FunctionDefinition",
            "src": "1245:129:26",
            "nodes": [],
            "body": {
              "id": 7460,
              "nodeType": "Block",
              "src": "1372:2:26",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              687
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7458,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7457,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1358:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "1358:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1358:9:26"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "1254:17:26",
            "overrides": {
              "id": 7456,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1341:8:26"
            },
            "parameters": {
              "id": 7455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7454,
                  "mutability": "mutable",
                  "name": "_newImplementation",
                  "nameLocation": "1280:18:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7461,
                  "src": "1272:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1271:28:26"
            },
            "returnParameters": {
              "id": 7459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 7559,
            "nodeType": "FunctionDefinition",
            "src": "2146:947:26",
            "nodes": [],
            "body": {
              "id": 7558,
              "nodeType": "Block",
              "src": "2300:793:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 7476,
                            "name": "tokenWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8326,
                            "src": "2331:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7478,
                          "indexExpression": {
                            "id": 7477,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7464,
                            "src": "2346:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2331:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2357:13:26",
                          "subExpression": {
                            "id": 7479,
                            "name": "_whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7466,
                            "src": "2358:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2331:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206368616e676520746f2077686974656c697374",
                        "id": 7482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4065f3c8ddd9c2d06b8051fcd17339ead279c01f14de99301656d570f54f9bc5",
                          "typeString": "literal_string \"no change to whitelist\""
                        },
                        "value": "no change to whitelist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4065f3c8ddd9c2d06b8051fcd17339ead279c01f14de99301656d570f54f9bc5",
                          "typeString": "literal_string \"no change to whitelist\""
                        }
                      ],
                      "id": 7475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2310:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:108:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7484,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:108:26"
                },
                {
                  "expression": {
                    "id": 7489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7485,
                        "name": "tokenWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8326,
                        "src": "2428:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7487,
                      "indexExpression": {
                        "id": 7486,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7464,
                        "src": "2443:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2428:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7488,
                      "name": "_whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "2453:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2428:37:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7490,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:37:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7492,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7464,
                        "src": "2502:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7493,
                        "name": "_whitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "2510:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7491,
                      "name": "tokenWhitelistUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10682,
                      "src": "2480:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 7494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2480:43:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7495,
                  "nodeType": "EmitStatement",
                  "src": "2475:48:26"
                },
                {
                  "condition": {
                    "id": 7496,
                    "name": "_whitelisted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7466,
                    "src": "2538:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7554,
                    "nodeType": "Block",
                    "src": "2667:398:26",
                    "statements": [
                      {
                        "assignments": [
                          7511
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7511,
                            "mutability": "mutable",
                            "name": "activeTokenLength",
                            "nameLocation": "2689:17:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 7554,
                            "src": "2681:25:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7510,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2681:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7514,
                        "initialValue": {
                          "expression": {
                            "id": 7512,
                            "name": "activeTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8329,
                            "src": "2709:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 7513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2722:6:26",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2709:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2681:47:26"
                      },
                      {
                        "body": {
                          "id": 7552,
                          "nodeType": "Block",
                          "src": "2786:269:26",
                          "statements": [
                            {
                              "assignments": [
                                7525
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7525,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nameLocation": "2812:5:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 7552,
                                  "src": "2804:13:26",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 7524,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2804:7:26",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7529,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 7526,
                                  "name": "activeTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8329,
                                  "src": "2820:12:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 7528,
                                "indexExpression": {
                                  "id": 7527,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7516,
                                  "src": "2833:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2820:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2804:31:26"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7530,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7525,
                                  "src": "2857:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7531,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7464,
                                  "src": "2866:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2857:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7551,
                              "nodeType": "IfStatement",
                              "src": "2853:188:26",
                              "trueBody": {
                                "id": 7550,
                                "nodeType": "Block",
                                "src": "2874:167:26",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 7541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 7533,
                                          "name": "activeTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8329,
                                          "src": "2896:12:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 7535,
                                        "indexExpression": {
                                          "id": 7534,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7516,
                                          "src": "2909:1:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "2896:15:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 7536,
                                          "name": "activeTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8329,
                                          "src": "2914:12:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 7540,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 7539,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 7537,
                                            "name": "activeTokenLength",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7511,
                                            "src": "2927:17:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 7538,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2947:1:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2927:21:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2914:35:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "2896:53:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 7542,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2896:53:26"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 7543,
                                          "name": "activeTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8329,
                                          "src": "2971:12:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 7545,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2984:3:26",
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "2971:16:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer)"
                                        }
                                      },
                                      "id": 7546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2971:18:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7547,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2971:18:26"
                                  },
                                  {
                                    "expression": {
                                      "hexValue": "74727565",
                                      "id": 7548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3018:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 7474,
                                    "id": 7549,
                                    "nodeType": "Return",
                                    "src": "3011:11:26"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7518,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7516,
                            "src": "2758:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 7519,
                            "name": "activeTokenLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7511,
                            "src": "2762:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2758:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7553,
                        "initializationExpression": {
                          "assignments": [
                            7516
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 7516,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2755:1:26",
                              "nodeType": "VariableDeclaration",
                              "scope": 7553,
                              "src": "2747:9:26",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 7515,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2747:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 7517,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2747:9:26"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 7522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "2781:3:26",
                            "subExpression": {
                              "id": 7521,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7516,
                              "src": "2783:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7523,
                          "nodeType": "ExpressionStatement",
                          "src": "2781:3:26"
                        },
                        "nodeType": "ForStatement",
                        "src": "2742:313:26"
                      }
                    ]
                  },
                  "id": 7555,
                  "nodeType": "IfStatement",
                  "src": "2534:531:26",
                  "trueBody": {
                    "id": 7509,
                    "nodeType": "Block",
                    "src": "2552:109:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7500,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7464,
                              "src": "2584:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7497,
                              "name": "activeTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8329,
                              "src": "2566:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2579:4:26",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2566:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 7501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2566:25:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7502,
                        "nodeType": "ExpressionStatement",
                        "src": "2566:25:26"
                      },
                      {
                        "expression": {
                          "id": 7507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7503,
                              "name": "minTokenStakeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8333,
                              "src": "2605:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7505,
                            "indexExpression": {
                              "id": 7504,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7464,
                              "src": "2625:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2605:27:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7506,
                            "name": "_minStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7468,
                            "src": "2635:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2605:45:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7508,
                        "nodeType": "ExpressionStatement",
                        "src": "2605:45:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3082:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7474,
                  "id": 7557,
                  "nodeType": "Return",
                  "src": "3075:11:26"
                }
              ]
            },
            "documentation": {
              "id": 7462,
              "nodeType": "StructuredDocumentation",
              "src": "1633:508:26",
              "text": "@notice Updates the list of ERC20 tokens allow to be used in bounty pools\n @notice _minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value\n @dev Only one token is allowed per pool\n @param _token ERC20 to add or remove from whitelist\n @param _whitelisted bool to select if a token will be added or removed\n @param _minStakeAmount The minimum amount for staking for pools pools using such token"
            },
            "functionSelector": "2cb0dfcc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7471,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7470,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2275:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "2275:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "2275:9:26"
              }
            ],
            "name": "updateTokenWhitelist",
            "nameLocation": "2155:20:26",
            "parameters": {
              "id": 7469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7464,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2193:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7559,
                  "src": "2185:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2185:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7466,
                  "mutability": "mutable",
                  "name": "_whitelisted",
                  "nameLocation": "2214:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7559,
                  "src": "2209:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7468,
                  "mutability": "mutable",
                  "name": "_minStakeAmount",
                  "nameLocation": "2244:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7559,
                  "src": "2236:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2175:90:26"
            },
            "returnParameters": {
              "id": 7474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7559,
                  "src": "2294:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7472,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2293:6:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7695,
            "nodeType": "FunctionDefinition",
            "src": "3681:1213:26",
            "nodes": [],
            "body": {
              "id": 7694,
              "nodeType": "Block",
              "src": "3933:961:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7580,
                          "name": "tokenWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8326,
                          "src": "3951:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 7582,
                        "indexExpression": {
                          "id": 7581,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7562,
                          "src": "3966:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3951:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206e6f742077686974656c6973746564",
                        "id": 7583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3975:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48d6b6be4379d28630317727f41d9e47b28135bf21da35c6cd83f2745e8cc64b",
                          "typeString": "literal_string \"token not whitelisted\""
                        },
                        "value": "token not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48d6b6be4379d28630317727f41d9e47b28135bf21da35c6cd83f2745e8cc64b",
                          "typeString": "literal_string \"token not whitelisted\""
                        }
                      ],
                      "id": 7579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3943:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3943:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7585,
                  "nodeType": "ExpressionStatement",
                  "src": "3943:56:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7587,
                          "name": "_referralFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7570,
                          "src": "4017:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35303030",
                          "id": 7588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4033:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          "value": "5000"
                        },
                        "src": "4017:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566657272616c2066656520746f6f2068696768",
                        "id": 7590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4039:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23c8d5d472b68a8f457459b9a4f24725c6882858a5819afd9079a69c474ee",
                          "typeString": "literal_string \"referral fee too high\""
                        },
                        "value": "referral fee too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23c8d5d472b68a8f457459b9a4f24725c6882858a5819afd9079a69c474ee",
                          "typeString": "literal_string \"referral fee too high\""
                        }
                      ],
                      "id": 7586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4009:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:54:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7592,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:54:26"
                },
                {
                  "assignments": [
                    null,
                    7594
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 7594,
                      "mutability": "mutable",
                      "name": "_decimals",
                      "nameLocation": "4150:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7694,
                      "src": "4137:22:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7593,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4137:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7602,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646563696d616c732829",
                            "id": 7599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4218:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
                              "typeString": "literal_string \"decimals()\""
                            },
                            "value": "decimals()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
                              "typeString": "literal_string \"decimals()\""
                            }
                          ],
                          "expression": {
                            "id": 7597,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4194:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4198:19:26",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "4194:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 7600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4194:37:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 7595,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7562,
                        "src": "4163:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 7596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4170:10:26",
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "4163:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 7601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:78:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4134:107:26"
                },
                {
                  "assignments": [
                    7604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7604,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "4257:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7694,
                      "src": "4251:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 7603,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4251:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7612,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7607,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7594,
                        "src": "4279:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 7609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4291:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 7608,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4291:5:26",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 7610,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4290:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 7605,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4268:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 7606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4272:6:26",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4268:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 7611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4268:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4251:47:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 7616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7614,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7604,
                          "src": "4316:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 7615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4328:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "4316:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420646563696d616c2072657475726e",
                        "id": 7617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4331:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0eae8b2cc531c2f99fb6b6504bb91c121e909341a763f0c94291cbb387dc73f4",
                          "typeString": "literal_string \"Invalid decimal return\""
                        },
                        "value": "Invalid decimal return"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0eae8b2cc531c2f99fb6b6504bb91c121e909341a763f0c94291cbb387dc73f4",
                          "typeString": "literal_string \"Invalid decimal return\""
                        }
                      ],
                      "id": 7613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4308:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4308:48:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7619,
                  "nodeType": "ExpressionStatement",
                  "src": "4308:48:26"
                },
                {
                  "assignments": [
                    7622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7622,
                      "mutability": "mutable",
                      "name": "newBounty",
                      "nameLocation": "4383:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7694,
                      "src": "4367:25:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                        "typeString": "struct ISaloon.PoolInfo"
                      },
                      "typeName": {
                        "id": 7621,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7620,
                          "name": "PoolInfo",
                          "nameLocations": [
                            "4367:8:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10553,
                          "src": "4367:8:26"
                        },
                        "referencedDeclaration": 10553,
                        "src": "4367:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                          "typeString": "struct ISaloon.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7623,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4367:25:26"
                },
                {
                  "expression": {
                    "id": 7632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7624,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4402:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4412:11:26",
                        "memberName": "generalInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10533,
                        "src": "4402:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralInfo_$10571_memory_ptr",
                          "typeString": "struct ISaloon.GeneralInfo memory"
                        }
                      },
                      "id": 7628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4424:5:26",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10556,
                      "src": "4402:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2487",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7630,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7562,
                          "src": "4439:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7629,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "4432:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2487_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 7631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4432:14:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2487",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4402:44:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2487",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 7633,
                  "nodeType": "ExpressionStatement",
                  "src": "4402:44:26"
                },
                {
                  "expression": {
                    "id": 7640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7634,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4456:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4466:11:26",
                        "memberName": "generalInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10533,
                        "src": "4456:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralInfo_$10571_memory_ptr",
                          "typeString": "struct ISaloon.GeneralInfo memory"
                        }
                      },
                      "id": 7638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4478:13:26",
                      "memberName": "tokenDecimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10558,
                      "src": "4456:35:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7639,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7604,
                      "src": "4494:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4456:46:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 7641,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:46:26"
                },
                {
                  "expression": {
                    "id": 7648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7642,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4512:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7645,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4522:11:26",
                        "memberName": "generalInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10533,
                        "src": "4512:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralInfo_$10571_memory_ptr",
                          "typeString": "struct ISaloon.GeneralInfo memory"
                        }
                      },
                      "id": 7646,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4534:13:26",
                      "memberName": "projectWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10562,
                      "src": "4512:35:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7647,
                      "name": "_projectWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7564,
                      "src": "4550:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4512:52:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7649,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:52:26"
                },
                {
                  "expression": {
                    "id": 7656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7650,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4574:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7653,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4584:11:26",
                        "memberName": "generalInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10533,
                        "src": "4574:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralInfo_$10571_memory_ptr",
                          "typeString": "struct ISaloon.GeneralInfo memory"
                        }
                      },
                      "id": 7654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4596:11:26",
                      "memberName": "projectName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10564,
                      "src": "4574:33:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7655,
                      "name": "_projectName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "4610:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4574:48:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 7657,
                  "nodeType": "ExpressionStatement",
                  "src": "4574:48:26"
                },
                {
                  "expression": {
                    "id": 7664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7658,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4632:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7661,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4642:12:26",
                        "memberName": "referralInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10548,
                        "src": "4632:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReferralInfo_$10624_memory_ptr",
                          "typeString": "struct ISaloon.ReferralInfo memory"
                        }
                      },
                      "id": 7662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4655:8:26",
                      "memberName": "referrer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10619,
                      "src": "4632:31:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7663,
                      "name": "_referrer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7568,
                      "src": "4666:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4632:43:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7665,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:43:26"
                },
                {
                  "expression": {
                    "id": 7672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7666,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4685:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7669,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4695:12:26",
                        "memberName": "referralInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10548,
                        "src": "4685:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReferralInfo_$10624_memory_ptr",
                          "typeString": "struct ISaloon.ReferralInfo memory"
                        }
                      },
                      "id": 7670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4708:11:26",
                      "memberName": "referralFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10621,
                      "src": "4685:34:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7671,
                      "name": "_referralFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7570,
                      "src": "4722:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4685:49:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7673,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:49:26"
                },
                {
                  "expression": {
                    "id": 7680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7674,
                          "name": "newBounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7622,
                          "src": "4744:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                            "typeString": "struct ISaloon.PoolInfo memory"
                          }
                        },
                        "id": 7677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4754:12:26",
                        "memberName": "referralInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10548,
                        "src": "4744:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReferralInfo_$10624_memory_ptr",
                          "typeString": "struct ISaloon.ReferralInfo memory"
                        }
                      },
                      "id": 7678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4767:7:26",
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10623,
                      "src": "4744:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7679,
                      "name": "_referralEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7572,
                      "src": "4777:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4744:49:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7681,
                  "nodeType": "ExpressionStatement",
                  "src": "4744:49:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7685,
                        "name": "newBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7622,
                        "src": "4817:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                          "typeString": "struct ISaloon.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_memory_ptr",
                          "typeString": "struct ISaloon.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "id": 7682,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8277,
                        "src": "4803:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage",
                          "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4812:4:26",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4803:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$10553_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ISaloon.PoolInfo storage ref[] storage pointer,struct ISaloon.PoolInfo storage ref)"
                      }
                    },
                    "id": 7686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4803:24:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7687,
                  "nodeType": "ExpressionStatement",
                  "src": "4803:24:26"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7688,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8277,
                            "src": "4867:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage",
                              "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 7689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4876:6:26",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4867:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 7690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4885:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4867:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 7692,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4866:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7578,
                  "id": 7693,
                  "nodeType": "Return",
                  "src": "4859:28:26"
                }
              ]
            },
            "documentation": {
              "id": 7560,
              "nodeType": "StructuredDocumentation",
              "src": "3099:577:26",
              "text": "@notice Adds a new bounty pool.\n @dev Can only be called by the owner.\n @param _token Token to be used by bounty pool\n @param _projectWallet Address that will be able to deposit funds, set APY and poolCap for the pool\n @param _projectName Name of the project that is hosting the bounty\n @param _referrer Address of the individual that referred this bounty to The Saloon\n @param _referralFee Referral fee that the referrer will receive (in BPS), max 50%\n @param _referralEndTime Timestamp up until the referral will be active"
            },
            "functionSelector": "32fce602",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7575,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7574,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3905:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "3905:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3905:9:26"
              }
            ],
            "name": "addNewBountyPool",
            "nameLocation": "3690:16:26",
            "parameters": {
              "id": 7573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3724:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3716:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3716:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7564,
                  "mutability": "mutable",
                  "name": "_projectWallet",
                  "nameLocation": "3748:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3740:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7566,
                  "mutability": "mutable",
                  "name": "_projectName",
                  "nameLocation": "3786:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3772:26:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7565,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3772:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7568,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "3816:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3808:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3808:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "mutability": "mutable",
                  "name": "_referralFee",
                  "nameLocation": "3843:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3835:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3835:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "mutability": "mutable",
                  "name": "_referralEndTime",
                  "nameLocation": "3873:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3865:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3706:189:26"
            },
            "returnParameters": {
              "id": 7578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7695,
                  "src": "3924:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:9:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7730,
            "nodeType": "FunctionDefinition",
            "src": "5130:319:26",
            "nodes": [],
            "body": {
              "id": 7729,
              "nodeType": "Block",
              "src": "5231:218:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7707,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5258:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7729,
                      "src": "5241:21:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                        "typeString": "struct ISaloon.PoolInfo"
                      },
                      "typeName": {
                        "id": 7706,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7705,
                          "name": "PoolInfo",
                          "nameLocations": [
                            "5241:8:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10553,
                          "src": "5241:8:26"
                        },
                        "referencedDeclaration": 10553,
                        "src": "5241:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                          "typeString": "struct ISaloon.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7711,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7708,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8277,
                      "src": "5265:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$10553_storage_$dyn_storage",
                        "typeString": "struct ISaloon.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7710,
                    "indexExpression": {
                      "id": 7709,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7698,
                      "src": "5274:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5265:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$10553_storage",
                      "typeString": "struct ISaloon.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5241:38:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7713,
                          "name": "_endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7700,
                          "src": "5310:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 7714,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7707,
                              "src": "5321:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                                "typeString": "struct ISaloon.PoolInfo storage pointer"
                              }
                            },
                            "id": 7715,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5326:12:26",
                            "memberName": "referralInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10548,
                            "src": "5321:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReferralInfo_$10624_storage",
                              "typeString": "struct ISaloon.ReferralInfo storage ref"
                            }
                          },
                          "id": 7716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5339:7:26",
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10623,
                          "src": "5321:25:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5310:36:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e206f6e6c7920657874656e6420656e642074696d65",
                        "id": 7718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5360:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16480026cb4db86360f8e57045f4630ac3b4732d76950fd80de39d73bb6110d2",
                          "typeString": "literal_string \"can only extend end time\""
                        },
                        "value": "can only extend end time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16480026cb4db86360f8e57045f4630ac3b4732d76950fd80de39d73bb6110d2",
                          "typeString": "literal_string \"can only extend end time\""
                        }
                      ],
                      "id": 7712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5289:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5289:107:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7720,
                  "nodeType": "ExpressionStatement",
                  "src": "5289:107:26"
                },
                {
                  "expression": {
                    "id": 7727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 7721,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7707,
                          "src": "5406:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$10553_storage_ptr",
                            "typeString": "struct ISaloon.PoolInfo storage pointer"
                          }
                        },
                        "id": 7724,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5411:12:26",
                        "memberName": "referralInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10548,
                        "src": "5406:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReferralInfo_$10624_storage",
                          "typeString": "struct ISaloon.ReferralInfo storage ref"
                        }
                      },
                      "id": 7725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5424:7:26",
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10623,
                      "src": "5406:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7726,
                      "name": "_endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7700,
                      "src": "5434:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5406:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7728,
                  "nodeType": "ExpressionStatement",
                  "src": "5406:36:26"
                }
              ]
            },
            "documentation": {
              "id": 7696,
              "nodeType": "StructuredDocumentation",
              "src": "4900:225:26",
              "text": "@notice Extend the referral period for the bounty. The new end time can only be larger than the current value.\n @param _pid The pool id for the bounty\n @param _endTime The new end time for the referral bonus"
            },
            "functionSelector": "5de406dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7703,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7702,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5217:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "5217:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5217:9:26"
              }
            ],
            "name": "extendReferralPeriod",
            "nameLocation": "5139:20:26",
            "parameters": {
              "id": 7701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7698,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "5168:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7730,
                  "src": "5160:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7700,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nameLocation": "5182:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7730,
                  "src": "5174:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5174:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5159:32:26"
            },
            "returnParameters": {
              "id": 7704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5231:0:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7750,
            "nodeType": "FunctionDefinition",
            "src": "5551:175:26",
            "nodes": [],
            "body": {
              "id": 7749,
              "nodeType": "Block",
              "src": "5667:59:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7743,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7733,
                        "src": "5690:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5696:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7742,
                      "name": "_billPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8074,
                      "src": "5677:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5677:21:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7746,
                  "nodeType": "ExpressionStatement",
                  "src": "5677:21:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5715:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7741,
                  "id": 7748,
                  "nodeType": "Return",
                  "src": "5708:11:26"
                }
              ]
            },
            "documentation": {
              "id": 7731,
              "nodeType": "StructuredDocumentation",
              "src": "5455:91:26",
              "text": "@notice Bill premiums for a single pool.\n @param _pid The pool id for the bounty"
            },
            "functionSelector": "2dbe051e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7736,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7735,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5609:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 737,
                  "src": "5609:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5609:12:26"
              },
              {
                "id": 7738,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7737,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5630:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "5630:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "5630:9:26"
              }
            ],
            "name": "billPremium",
            "nameLocation": "5560:11:26",
            "parameters": {
              "id": 7734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7733,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "5580:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7750,
                  "src": "5572:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5572:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5571:14:26"
            },
            "returnParameters": {
              "id": 7741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7750,
                  "src": "5657:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5657:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5656:6:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7805,
            "nodeType": "FunctionDefinition",
            "src": "5948:478:26",
            "nodes": [],
            "body": {
              "id": 7804,
              "nodeType": "Block",
              "src": "6077:349:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7763,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6095:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7804,
                      "src": "6087:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6087:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7775,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 7764,
                          "name": "saloonBountyProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8291,
                          "src": "6104:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 7766,
                        "indexExpression": {
                          "id": 7765,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7753,
                          "src": "6123:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6104:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 7767,
                          "name": "saloonStrategyProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8299,
                          "src": "6145:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 7769,
                        "indexExpression": {
                          "id": 7768,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7753,
                          "src": "6166:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6145:28:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6104:69:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 7771,
                        "name": "saloonPremiumProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8295,
                        "src": "6188:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7773,
                      "indexExpression": {
                        "id": 7772,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7753,
                        "src": "6208:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6188:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6104:111:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6087:128:26"
                },
                {
                  "expression": {
                    "id": 7780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7776,
                        "name": "saloonBountyProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8291,
                        "src": "6225:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7778,
                      "indexExpression": {
                        "id": 7777,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7753,
                        "src": "6244:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6225:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 7779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6254:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6225:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7781,
                  "nodeType": "ExpressionStatement",
                  "src": "6225:30:26"
                },
                {
                  "expression": {
                    "id": 7786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7782,
                        "name": "saloonPremiumProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8295,
                        "src": "6265:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7784,
                      "indexExpression": {
                        "id": 7783,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7753,
                        "src": "6285:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6265:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 7785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6295:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6265:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7787,
                  "nodeType": "ExpressionStatement",
                  "src": "6265:31:26"
                },
                {
                  "expression": {
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7788,
                        "name": "saloonStrategyProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8299,
                        "src": "6306:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7790,
                      "indexExpression": {
                        "id": 7789,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7753,
                        "src": "6327:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6306:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 7791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6337:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6306:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "6306:32:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7798,
                        "name": "_saloonWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7755,
                        "src": "6376:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7799,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "6391:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7795,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7753,
                            "src": "6355:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7794,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2487,
                          "src": "6348:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2487_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6348:14:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2487",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6363:12:26",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2559,
                      "src": "6348:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2487_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$2487_$",
                        "typeString": "function (contract IERC20,address,uint256) returns (bool)"
                      }
                    },
                    "id": 7800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6348:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7801,
                  "nodeType": "ExpressionStatement",
                  "src": "6348:50:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6415:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7761,
                  "id": 7803,
                  "nodeType": "Return",
                  "src": "6408:11:26"
                }
              ]
            },
            "documentation": {
              "id": 7751,
              "nodeType": "StructuredDocumentation",
              "src": "5732:211:26",
              "text": "@notice Transfer Saloon profits for a specific token from premiums and bounties collected\n @param _token Token address to be transferred\n @param _saloonWallet Address where the funds will go to"
            },
            "functionSelector": "cf9564b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7758,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7757,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6040:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "6040:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6040:9:26"
              }
            ],
            "name": "collectSaloonProfits",
            "nameLocation": "5957:20:26",
            "parameters": {
              "id": 7756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5986:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "5978:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7755,
                  "mutability": "mutable",
                  "name": "_saloonWallet",
                  "nameLocation": "6002:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "5994:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5977:39:26"
            },
            "returnParameters": {
              "id": 7761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "6067:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7759,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6067:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6066:6:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7845,
            "nodeType": "FunctionDefinition",
            "src": "6588:370:26",
            "nodes": [],
            "body": {
              "id": 7844,
              "nodeType": "Block",
              "src": "6706:252:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7816,
                      "mutability": "mutable",
                      "name": "activeTokenLength",
                      "nameLocation": "6724:17:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7844,
                      "src": "6716:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7815,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6716:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7819,
                  "initialValue": {
                    "expression": {
                      "id": 7817,
                      "name": "activeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8329,
                      "src": "6744:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 7818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6757:6:26",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6744:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6716:47:26"
                },
                {
                  "body": {
                    "id": 7840,
                    "nodeType": "Block",
                    "src": "6817:114:26",
                    "statements": [
                      {
                        "assignments": [
                          7830
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7830,
                            "mutability": "mutable",
                            "name": "_token",
                            "nameLocation": "6839:6:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 7840,
                            "src": "6831:14:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6831:7:26",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7834,
                        "initialValue": {
                          "baseExpression": {
                            "id": 7831,
                            "name": "activeTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8329,
                            "src": "6848:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 7833,
                          "indexExpression": {
                            "id": 7832,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7821,
                            "src": "6861:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6848:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6831:32:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7836,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "6898:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7837,
                              "name": "_saloonWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7808,
                              "src": "6906:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7835,
                            "name": "collectSaloonProfits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7805,
                            "src": "6877:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) returns (bool)"
                            }
                          },
                          "id": 7838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6877:43:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7839,
                        "nodeType": "ExpressionStatement",
                        "src": "6877:43:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7823,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7821,
                      "src": "6789:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7824,
                      "name": "activeTokenLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7816,
                      "src": "6793:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6789:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7841,
                  "initializationExpression": {
                    "assignments": [
                      7821
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7821,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6786:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 7841,
                        "src": "6778:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6778:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7822,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6778:9:26"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6812:3:26",
                      "subExpression": {
                        "id": 7826,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7821,
                        "src": "6814:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7828,
                    "nodeType": "ExpressionStatement",
                    "src": "6812:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "6773:158:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6947:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7814,
                  "id": 7843,
                  "nodeType": "Return",
                  "src": "6940:11:26"
                }
              ]
            },
            "documentation": {
              "id": 7806,
              "nodeType": "StructuredDocumentation",
              "src": "6432:151:26",
              "text": "@notice Transfer Saloon profits for all tokens from premiums and bounties collected\n @param _saloonWallet Address where the funds will go to"
            },
            "functionSelector": "ecd7fbed",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7810,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6669:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12304,
                  "src": "6669:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "6669:9:26"
              }
            ],
            "name": "collectAllSaloonProfits",
            "nameLocation": "6597:23:26",
            "parameters": {
              "id": 7809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7808,
                  "mutability": "mutable",
                  "name": "_saloonWallet",
                  "nameLocation": "6629:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7845,
                  "src": "6621:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6621:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6620:23:26"
            },
            "returnParameters": {
              "id": 7814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7845,
                  "src": "6696:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6696:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6695:6:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7896,
            "nodeType": "FunctionDefinition",
            "src": "7371:403:26",
            "nodes": [],
            "body": {
              "id": 7895,
              "nodeType": "Block",
              "src": "7481:293:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7856,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7499:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7895,
                      "src": "7491:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7491:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7863,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 7857,
                        "name": "referralBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8305,
                        "src": "7508:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 7860,
                      "indexExpression": {
                        "expression": {
                          "id": 7858,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7525:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7529:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7525:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7508:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7862,
                    "indexExpression": {
                      "id": 7861,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7848,
                      "src": "7537:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7508:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7491:53:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7864,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7856,
                      "src": "7558:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7567:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7558:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7892,
                  "nodeType": "IfStatement",
                  "src": "7554:193:26",
                  "trueBody": {
                    "id": 7891,
                    "nodeType": "Block",
                    "src": "7570:177:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 7874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7867,
                                "name": "referralBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8305,
                                "src": "7584:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 7871,
                              "indexExpression": {
                                "expression": {
                                  "id": 7868,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7601:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 7869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7605:6:26",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7601:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7584:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7872,
                            "indexExpression": {
                              "id": 7870,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7848,
                              "src": "7613:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7584:36:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 7873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7623:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7584:40:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7875,
                        "nodeType": "ExpressionStatement",
                        "src": "7584:40:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7666:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7670:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7666:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7882,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7856,
                              "src": "7678:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7877,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7848,
                                  "src": "7645:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7876,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2487,
                                "src": "7638:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2487_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7638:14:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2487",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7653:12:26",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2559,
                            "src": "7638:27:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2487_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_IERC20_$2487_$",
                              "typeString": "function (contract IERC20,address,uint256) returns (bool)"
                            }
                          },
                          "id": 7883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7638:47:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7884,
                        "nodeType": "ExpressionStatement",
                        "src": "7638:47:26"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7886,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7717:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7721:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7717:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7888,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7856,
                              "src": "7729:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7885,
                            "name": "referralPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10688,
                            "src": "7704:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 7889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7704:32:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7890,
                        "nodeType": "EmitStatement",
                        "src": "7699:37:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7763:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7854,
                  "id": 7894,
                  "nodeType": "Return",
                  "src": "7756:11:26"
                }
              ]
            },
            "documentation": {
              "id": 7846,
              "nodeType": "StructuredDocumentation",
              "src": "7217:149:26",
              "text": "@notice Allows referrers to collect their profit from all bounties for one token\n @param _token Token used by the bounty that was referred"
            },
            "functionSelector": "a089a520",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7850,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7441:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 737,
                  "src": "7441:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "7441:12:26"
              }
            ],
            "name": "collectReferralProfit",
            "nameLocation": "7380:21:26",
            "parameters": {
              "id": 7849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7848,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7410:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 7896,
                  "src": "7402:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7402:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7401:16:26"
            },
            "returnParameters": {
              "id": 7854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7896,
                  "src": "7471:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7852,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7471:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7470:6:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7931,
            "nodeType": "FunctionDefinition",
            "src": "7870:297:26",
            "nodes": [],
            "body": {
              "id": 7930,
              "nodeType": "Block",
              "src": "7931:236:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7903,
                      "mutability": "mutable",
                      "name": "activeTokenLength",
                      "nameLocation": "7949:17:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 7930,
                      "src": "7941:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7941:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7906,
                  "initialValue": {
                    "expression": {
                      "id": 7904,
                      "name": "activeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8329,
                      "src": "7969:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 7905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7982:6:26",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7969:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7941:47:26"
                },
                {
                  "body": {
                    "id": 7926,
                    "nodeType": "Block",
                    "src": "8042:98:26",
                    "statements": [
                      {
                        "assignments": [
                          7917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7917,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "8064:5:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 7926,
                            "src": "8056:13:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7916,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8056:7:26",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7921,
                        "initialValue": {
                          "baseExpression": {
                            "id": 7918,
                            "name": "activeTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8329,
                            "src": "8072:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 7920,
                          "indexExpression": {
                            "id": 7919,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7908,
                            "src": "8085:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8072:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8056:31:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7923,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7917,
                              "src": "8123:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7922,
                            "name": "collectReferralProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7896,
                            "src": "8101:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 7924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8101:28:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7925,
                        "nodeType": "ExpressionStatement",
                        "src": "8101:28:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7910,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7908,
                      "src": "8014:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7911,
                      "name": "activeTokenLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7903,
                      "src": "8018:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8014:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7927,
                  "initializationExpression": {
                    "assignments": [
                      7908
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7908,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8011:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 7927,
                        "src": "8003:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8003:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7909,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8003:9:26"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8037:3:26",
                      "subExpression": {
                        "id": 7913,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7908,
                        "src": "8039:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7915,
                    "nodeType": "ExpressionStatement",
                    "src": "8037:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "7998:142:26"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8156:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7901,
                  "id": 7929,
                  "nodeType": "Return",
                  "src": "8149:11:26"
                }
              ]
            },
            "documentation": {
              "id": 7897,
              "nodeType": "StructuredDocumentation",
              "src": "7780:85:26",
              "text": "@notice Allows referrers to collect their profit from all bounties for all tokens"
            },
            "functionSelector": "3e8888d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectAllReferralProfits",
            "nameLocation": "7879:25:26",
            "parameters": {
              "id": 7898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7904:2:26"
            },
            "returnParameters": {
              "id": 7901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7900,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7931,
                  "src": "7925:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7899,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7925:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7924:6:26"
            },
            "scope": 7932,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7375,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "522:18:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12399,
              "src": "522:18:26"
            },
            "id": 7376,
            "nodeType": "InheritanceSpecifier",
            "src": "522:18:26"
          },
          {
            "baseName": {
              "id": 7377,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "546:15:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 693,
              "src": "546:15:26"
            },
            "id": 7378,
            "nodeType": "InheritanceSpecifier",
            "src": "546:15:26"
          },
          {
            "baseName": {
              "id": 7379,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "567:26:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 766,
              "src": "567:26:26"
            },
            "id": 7380,
            "nodeType": "InheritanceSpecifier",
            "src": "567:26:26"
          },
          {
            "baseName": {
              "id": 7381,
              "name": "SaloonCommon",
              "nameLocations": [
                "599:12:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8248,
              "src": "599:12:26"
            },
            "id": 7382,
            "nodeType": "InheritanceSpecifier",
            "src": "599:12:26"
          }
        ],
        "canonicalName": "SaloonCentral",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7932,
          8248,
          8334,
          10696,
          766,
          693,
          378,
          9,
          12399,
          1253,
          557
        ],
        "name": "SaloonCentral",
        "nameLocation": "501:13:26",
        "scope": 7933,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 26
}