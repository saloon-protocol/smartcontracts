{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/InitializableUp.sol\":{\"keccak256\":\"0xc768361fb4446dbc434f35b7c94ff75a8169f10bf6da62bc2ad7e1cba1237fc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef3d915fbb4694ff0ceed9d8841a6d8f478a14de69eecf83d5733024f34ead2\",\"dweb:/ipfs/QmbpiVYAPiTHbu7fr8RN39iy8QsCs69LHdKKanf2McEaLC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x6d69a16b63f8199b35405b8e616f3be3d21f92443cdc2fe1dd48bf1f3c2509ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67f17c496f937dfd5a8a44bd64374f08a75eb9386094216d0a04e846e78b9b2c\",\"dweb:/ipfs/QmejFDARf3GsdU5RPj6wSrNsrh3cwaST1RpkwvWML6aud8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": "ContextUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/InitializableUp.sol": {
        "keccak256": "0xc768361fb4446dbc434f35b7c94ff75a8169f10bf6da62bc2ad7e1cba1237fc2",
        "urls": [
          "bzz-raw://1ef3d915fbb4694ff0ceed9d8841a6d8f478a14de69eecf83d5733024f34ead2",
          "dweb:/ipfs/QmbpiVYAPiTHbu7fr8RN39iy8QsCs69LHdKKanf2McEaLC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x6d69a16b63f8199b35405b8e616f3be3d21f92443cdc2fe1dd48bf1f3c2509ed",
        "urls": [
          "bzz-raw://67f17c496f937dfd5a8a44bd64374f08a75eb9386094216d0a04e846e78b9b2c",
          "dweb:/ipfs/QmejFDARf3GsdU5RPj6wSrNsrh3cwaST1RpkwvWML6aud8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
    "id": 19914,
    "exportedSymbols": {
      "AddressUpgradeable": [
        19871
      ],
      "ContextUpgradeable": [
        19913
      ],
      "InitializableUp": [
        19587
      ]
    },
    "nodeType": "SourceUnit",
    "src": "86:1254:9",
    "nodes": [
      {
        "id": 19873,
        "nodeType": "PragmaDirective",
        "src": "86:23:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 19874,
        "nodeType": "ImportDirective",
        "src": "110:44:9",
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/InitializableUp.sol",
        "file": "../proxy/utils/InitializableUp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19914,
        "sourceUnit": 19588,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 19913,
        "nodeType": "ContractDefinition",
        "src": "653:686:9",
        "nodes": [
          {
            "id": 19883,
            "nodeType": "FunctionDefinition",
            "src": "715:54:9",
            "body": {
              "id": 19882,
              "nodeType": "Block",
              "src": "767:2:9",
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19879,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19532,
                  "src": "750:16:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "750:16:9"
              }
            ],
            "name": "__Context_init",
            "nameLocation": "724:14:9",
            "parameters": {
              "id": 19878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:9"
            },
            "returnParameters": {
              "id": 19881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:9"
            },
            "scope": 19913,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 19889,
            "nodeType": "FunctionDefinition",
            "src": "775:64:9",
            "body": {
              "id": 19888,
              "nodeType": "Block",
              "src": "837:2:9",
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19885,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19532,
                  "src": "820:16:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "820:16:9"
              }
            ],
            "name": "__Context_init_unchained",
            "nameLocation": "784:24:9",
            "parameters": {
              "id": 19884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "808:2:9"
            },
            "returnParameters": {
              "id": 19887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:9"
            },
            "scope": 19913,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 19898,
            "nodeType": "FunctionDefinition",
            "src": "845:96:9",
            "body": {
              "id": 19897,
              "nodeType": "Block",
              "src": "907:34:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 19894,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "924:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 19895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "924:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 19893,
                  "id": 19896,
                  "nodeType": "Return",
                  "src": "917:17:9"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "854:10:9",
            "parameters": {
              "id": 19890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:2:9"
            },
            "returnParameters": {
              "id": 19893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19898,
                  "src": "898:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:9:9"
            },
            "scope": 19913,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 19907,
            "nodeType": "FunctionDefinition",
            "src": "947:99:9",
            "body": {
              "id": 19906,
              "nodeType": "Block",
              "src": "1014:32:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 19903,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1031:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 19904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "1031:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 19902,
                  "id": 19905,
                  "nodeType": "Return",
                  "src": "1024:15:9"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "956:8:9",
            "parameters": {
              "id": 19899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:2:9"
            },
            "returnParameters": {
              "id": 19902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19907,
                  "src": "998:14:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19900,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "997:16:9"
            },
            "scope": 19913,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 19912,
            "nodeType": "VariableDeclaration",
            "src": "1311:25:9",
            "constant": false,
            "documentation": {
              "id": 19908,
              "nodeType": "StructuredDocumentation",
              "src": "1052:254:9",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1331:5:9",
            "scope": 19913,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 19909,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 19911,
              "length": {
                "hexValue": "3530",
                "id": 19910,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1319:2:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1311:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 19876,
              "name": "InitializableUp",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19587,
              "src": "693:15:9"
            },
            "id": 19877,
            "nodeType": "InheritanceSpecifier",
            "src": "693:15:9"
          }
        ],
        "canonicalName": "ContextUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19875,
          "nodeType": "StructuredDocumentation",
          "src": "156:496:9",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          19913,
          19587
        ],
        "name": "ContextUpgradeable",
        "nameLocation": "671:18:9",
        "scope": 19914,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 9
}