{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_projectWallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_projectName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_referralFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_referralEndTime",
          "type": "uint256"
        }
      ],
      "name": "addNewBountyPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "billPremium",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "calculateEffectiveAPY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "scaledAPY",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimPremium",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectAllReferralProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saloonWallet",
          "type": "address"
        }
      ],
      "name": "collectAllSaloonProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "collectReferralProfit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_saloonWallet",
          "type": "address"
        }
      ],
      "name": "collectSaloonProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "compoundYieldForPid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "consolidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "consolidateAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "extendReferralPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deposit",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_strategyName",
          "type": "string"
        }
      ],
      "name": "makeProjectDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "__pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_hunter",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_payoutBPS",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_hunterBonusBPS",
          "type": "uint16"
        }
      ],
      "name": "payBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "projectDepositWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "receiveStrategyYield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "scheduleProjectDepositWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "scheduleUnstake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_poolCap",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_apy",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_deposit",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_strategyName",
          "type": "string"
        }
      ],
      "name": "setAPYandPoolCapAndDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_shouldHarvest",
          "type": "bool"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_projectWallet",
          "type": "address"
        }
      ],
      "name": "updateProjectWalletAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_minStakeAmount",
          "type": "uint256"
        }
      ],
      "name": "updateTokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "viewBountyBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "windDownBounty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "withdrawProjectYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405260405162000ee438038062000ee4833981016040819052620000269162000345565b62000034828260006200003c565b505062000473565b620000478362000079565b600082511180620000555750805b156200007457620000728383620000bb60201b620003dd1760201c565b505b505050565b6200008481620000ea565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620000e3838360405180606001604052806027815260200162000ebd60279139620001c3565b9392505050565b62000100816200024260201b620004091760201c565b620001685760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b80620001a27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200025160201b620004181760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b031685604051620001e2919062000420565b600060405180830381855af49150503d80600081146200021f576040519150601f19603f3d011682016040523d82523d6000602084013e62000224565b606091505b509092509050620002388683838762000254565b9695505050505050565b6001600160a01b03163b151590565b90565b60608315620002c8578251600003620002c0576001600160a01b0385163b620002c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200015f565b5081620002d4565b620002d48383620002dc565b949350505050565b815115620002ed5781518083602001fd5b8060405162461bcd60e51b81526004016200015f91906200043e565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200033c57818101518382015260200162000322565b50506000910152565b600080604083850312156200035957600080fd5b82516001600160a01b03811681146200037157600080fd5b60208401519092506001600160401b03808211156200038f57600080fd5b818501915085601f830112620003a457600080fd5b815181811115620003b957620003b962000309565b604051601f8201601f19908116603f01168101908382118183101715620003e457620003e462000309565b81604052828152886020848701011115620003fe57600080fd5b620004118360208301602088016200031f565b80955050505050509250929050565b60008251620004348184602087016200031f565b9190910192915050565b60208152600082518060208401526200045f8160408501602087016200031f565b601f01601f19169190910160400192915050565b610a3a80620004836000396000f3fe6080604052600436106101855760003560e01c8063949a4a4a116100d1578063bb7019c11161008a578063db53e8b511610064578063db53e8b5146102be578063e78ea3df14610300578063ecd7fbed14610354578063f47ec3be1461030057610194565b8063bb7019c11461019c578063cf9564b91461038f578063d075afac146103aa57610194565b8063949a4a4a14610300578063983c1ce014610280578063995974c41461031e5780639ebea88c14610339578063a089a52014610354578063ae07f9481461036f57610194565b80633e8888d91161013e5780636ac6d812116101185780636ac6d812146102be57806375bfd63d146102d95780637b0472f0146102a357806381c6f1a7146102e557610194565b80633e8888d91461026c5780635669cbef146102805780635de406dc146102a357610194565b8063106d08df1461019c5780631aebcecb146101d25780632cb0dfcc146101f15780632dbe051e1461019c57806330ca07941461021557806332fce6021461023757610194565b36610194576101926103cb565b005b6101926103cb565b3480156101a857600080fd5b506101bd6101b736600461059f565b50600090565b60405190151581526020015b60405180910390f35b3480156101de57600080fd5b506101926101ed3660046105d4565b5050565b3480156101fd57600080fd5b506101bd61020c36600461060e565b60009392505050565b34801561022157600080fd5b506101926102303660046106ff565b5050505050565b34801561024357600080fd5b5061025e61025236600461076a565b60009695505050505050565b6040519081526020016101c9565b34801561027857600080fd5b5060006101bd565b34801561028c57600080fd5b506101bd61029b3660046107eb565b600092915050565b3480156102af57600080fd5b506101926101ed3660046107eb565b3480156102ca57600080fd5b5061025e6101b736600461059f565b34801561019257600080fd5b3480156102f157600080fd5b5061025e61020c36600461080d565b34801561030c57600080fd5b5061019261031b36600461059f565b50565b34801561032a57600080fd5b506101926101ed366004610839565b34801561034557600080fd5b506101bd61029b366004610865565b34801561036057600080fd5b506101bd6101b7366004610888565b34801561037b57600080fd5b5061019261038a3660046108a3565b505050565b34801561039b57600080fd5b506101bd61029b3660046108f3565b3480156103b657600080fd5b506101926103c536600461091d565b50505050565b6103db6103d661041b565b610453565b565b606061040283836040518060600160405280602781526020016109de60279139610477565b9392505050565b6001600160a01b03163b151590565b90565b600061044e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e808015610472573d6000f35b3d6000fd5b6060600080856001600160a01b031685604051610494919061098e565b600060405180830381855af49150503d80600081146104cf576040519150601f19603f3d011682016040523d82523d6000602084013e6104d4565b606091505b50915091506104e5868383876104ef565b9695505050505050565b6060831561056357825160000361055c576001600160a01b0385163b61055c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161056d565b61056d8383610575565b949350505050565b8151156105855781518083602001fd5b8060405162461bcd60e51b815260040161055391906109aa565b6000602082840312156105b157600080fd5b5035919050565b80356001600160a01b03811681146105cf57600080fd5b919050565b600080604083850312156105e757600080fd5b6105f0836105b8565b946020939093013593505050565b803580151581146105cf57600080fd5b60008060006060848603121561062357600080fd5b61062c846105b8565b925061063a602085016105fe565b9150604084013590509250925092565b803561ffff811681146105cf57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261068357600080fd5b813567ffffffffffffffff8082111561069e5761069e61065c565b604051601f8301601f19908116603f011681019082821181831017156106c6576106c661065c565b816040528381528660208588010111156106df57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561071757600080fd5b853594506020860135935061072e6040870161064a565b925060608601359150608086013567ffffffffffffffff81111561075157600080fd5b61075d88828901610672565b9150509295509295909350565b60008060008060008060c0878903121561078357600080fd5b61078c876105b8565b955061079a602088016105b8565b9450604087013567ffffffffffffffff8111156107b657600080fd5b6107c289828a01610672565b9450506107d1606088016105b8565b92506080870135915060a087013590509295509295509295565b600080604083850312156107fe57600080fd5b50508035926020909101359150565b60008060006060848603121561082257600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561084c57600080fd5b8235915061085c602084016105b8565b90509250929050565b6000806040838503121561087857600080fd5b8235915061085c602084016105fe565b60006020828403121561089a57600080fd5b610402826105b8565b6000806000606084860312156108b857600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156108dd57600080fd5b6108e986828701610672565b9150509250925092565b6000806040838503121561090657600080fd5b61090f836105b8565b915061085c602084016105b8565b6000806000806080858703121561093357600080fd5b84359350610943602086016105b8565b92506109516040860161064a565b915061095f6060860161064a565b905092959194509250565b60005b8381101561098557818101518382015260200161096d565b50506000910152565b600082516109a081846020870161096a565b9190910192915050565b60208152600082518060208401526109c981604085016020870161096a565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b4f7325044500fd8ebb24a976ebadb84e01608abe5e69a1584ced3ba8cc2de8364736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "688:9615:48:-:0;;;1078:145;;;;;;;;;;;;;;;;;;:::i;:::-;1144:39;1162:6;1170:5;1177;1144:17;:39::i;:::-;1078:145;;688:9615;;2183:295:23;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;;;;;:53;;:::i;:::-;;2360:112;2183:295;;;:::o;1897:152::-;1963:37;1982:17;1963:18;:37::i;:::-;2015:27;;-1:-1:-1;;;;;2015:27:23;;;;;;;;1897:152;:::o;6469:198:34:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6576:84;6469:198;-1:-1:-1;;;6469:198:34:o;1532:259:23:-;1613:37;1632:17;1613:18;;;;;:37;;:::i;:::-;1605:95;;;;-1:-1:-1;;;1605:95:23;;1671:2:64;1605:95:23;;;1653:21:64;1710:2;1690:18;;;1683:30;1749:34;1729:18;;;1722:62;-1:-1:-1;;;1800:18:64;;;1793:43;1853:19;;1605:95:23;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1710:74:23;-1:-1:-1;;;;;1710:74:23;;;;;;;;;;-1:-1:-1;1532:259:23:o;6853:325:34:-;6994:12;7019;7033:23;7060:6;-1:-1:-1;;;;;7060:19:34;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7018:67:34;;-1:-1:-1;7018:67:34;-1:-1:-1;7102:69:34;7129:6;7018:67;;7158:12;7102:26;:69::i;:::-;7095:76;6853:325;-1:-1:-1;;;;;;6853:325:34:o;1175:320::-;-1:-1:-1;;;;;1465:19:34;;:23;;;1175:320::o;1614:190:36:-;1784:4;1614:190::o;7466:628:34:-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:34;;;7908:60;;;;-1:-1:-1;;;7908:60:34;;2377:2:64;7908:60:34;;;2359:21:64;2416:2;2396:18;;;2389:30;2455:31;2435:18;;;2428:59;2504:18;;7908:60:34;2175:353:64;7908:60:34;-1:-1:-1;8003:10:34;7996:17;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;:::o;8616:540::-;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:34;;;;;;;;:::i;14:127:64:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:64;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:64;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:64;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:64;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1883:287::-;2012:3;2050:6;2044:13;2066:66;2125:6;2120:3;2113:4;2105:6;2101:17;2066:66;:::i;:::-;2148:16;;;;;1883:287;-1:-1:-1;;1883:287:64:o;2533:396::-;2682:2;2671:9;2664:21;2645:4;2714:6;2708:13;2757:6;2752:2;2741:9;2737:18;2730:34;2773:79;2845:6;2840:2;2829:9;2825:18;2820:2;2812:6;2808:15;2773:79;:::i;:::-;2913:2;2892:15;-1:-1:-1;;2888:29:64;2873:45;;;;2920:2;2869:54;;2533:396;-1:-1:-1;;2533:396:64:o;:::-;688:9615:48;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101855760003560e01c8063949a4a4a116100d1578063bb7019c11161008a578063db53e8b511610064578063db53e8b5146102be578063e78ea3df14610300578063ecd7fbed14610354578063f47ec3be1461030057610194565b8063bb7019c11461019c578063cf9564b91461038f578063d075afac146103aa57610194565b8063949a4a4a14610300578063983c1ce014610280578063995974c41461031e5780639ebea88c14610339578063a089a52014610354578063ae07f9481461036f57610194565b80633e8888d91161013e5780636ac6d812116101185780636ac6d812146102be57806375bfd63d146102d95780637b0472f0146102a357806381c6f1a7146102e557610194565b80633e8888d91461026c5780635669cbef146102805780635de406dc146102a357610194565b8063106d08df1461019c5780631aebcecb146101d25780632cb0dfcc146101f15780632dbe051e1461019c57806330ca07941461021557806332fce6021461023757610194565b36610194576101926103cb565b005b6101926103cb565b3480156101a857600080fd5b506101bd6101b736600461059f565b50600090565b60405190151581526020015b60405180910390f35b3480156101de57600080fd5b506101926101ed3660046105d4565b5050565b3480156101fd57600080fd5b506101bd61020c36600461060e565b60009392505050565b34801561022157600080fd5b506101926102303660046106ff565b5050505050565b34801561024357600080fd5b5061025e61025236600461076a565b60009695505050505050565b6040519081526020016101c9565b34801561027857600080fd5b5060006101bd565b34801561028c57600080fd5b506101bd61029b3660046107eb565b600092915050565b3480156102af57600080fd5b506101926101ed3660046107eb565b3480156102ca57600080fd5b5061025e6101b736600461059f565b34801561019257600080fd5b3480156102f157600080fd5b5061025e61020c36600461080d565b34801561030c57600080fd5b5061019261031b36600461059f565b50565b34801561032a57600080fd5b506101926101ed366004610839565b34801561034557600080fd5b506101bd61029b366004610865565b34801561036057600080fd5b506101bd6101b7366004610888565b34801561037b57600080fd5b5061019261038a3660046108a3565b505050565b34801561039b57600080fd5b506101bd61029b3660046108f3565b3480156103b657600080fd5b506101926103c536600461091d565b50505050565b6103db6103d661041b565b610453565b565b606061040283836040518060600160405280602781526020016109de60279139610477565b9392505050565b6001600160a01b03163b151590565b90565b600061044e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e808015610472573d6000f35b3d6000fd5b6060600080856001600160a01b031685604051610494919061098e565b600060405180830381855af49150503d80600081146104cf576040519150601f19603f3d011682016040523d82523d6000602084013e6104d4565b606091505b50915091506104e5868383876104ef565b9695505050505050565b6060831561056357825160000361055c576001600160a01b0385163b61055c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161056d565b61056d8383610575565b949350505050565b8151156105855781518083602001fd5b8060405162461bcd60e51b815260040161055391906109aa565b6000602082840312156105b157600080fd5b5035919050565b80356001600160a01b03811681146105cf57600080fd5b919050565b600080604083850312156105e757600080fd5b6105f0836105b8565b946020939093013593505050565b803580151581146105cf57600080fd5b60008060006060848603121561062357600080fd5b61062c846105b8565b925061063a602085016105fe565b9150604084013590509250925092565b803561ffff811681146105cf57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261068357600080fd5b813567ffffffffffffffff8082111561069e5761069e61065c565b604051601f8301601f19908116603f011681019082821181831017156106c6576106c661065c565b816040528381528660208588010111156106df57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561071757600080fd5b853594506020860135935061072e6040870161064a565b925060608601359150608086013567ffffffffffffffff81111561075157600080fd5b61075d88828901610672565b9150509295509295909350565b60008060008060008060c0878903121561078357600080fd5b61078c876105b8565b955061079a602088016105b8565b9450604087013567ffffffffffffffff8111156107b657600080fd5b6107c289828a01610672565b9450506107d1606088016105b8565b92506080870135915060a087013590509295509295509295565b600080604083850312156107fe57600080fd5b50508035926020909101359150565b60008060006060848603121561082257600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561084c57600080fd5b8235915061085c602084016105b8565b90509250929050565b6000806040838503121561087857600080fd5b8235915061085c602084016105fe565b60006020828403121561089a57600080fd5b610402826105b8565b6000806000606084860312156108b857600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156108dd57600080fd5b6108e986828701610672565b9150509250925092565b6000806040838503121561090657600080fd5b61090f836105b8565b915061085c602084016105b8565b6000806000806080858703121561093357600080fd5b84359350610943602086016105b8565b92506109516040860161064a565b915061095f6060860161064a565b905092959194509250565b60005b8381101561098557818101518382015260200161096d565b50506000910152565b600082516109a081846020870161096a565b9190910192915050565b60208152600082518060208401526109c981604085016020870161096a565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b4f7325044500fd8ebb24a976ebadb84e01608abe5e69a1584ced3ba8cc2de8364736f6c63430008110033",
    "sourceMap": "688:9615:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:24;:9;:11::i;:::-;688:9615:48;;2675:11:24;:9;:11::i;5882:69:48:-;;;;;;;;;;-1:-1:-1;5882:69:48;;;;;:::i;:::-;-1:-1:-1;5943:4:48;;5882:69;;;;364:14:64;;357:22;339:41;;327:2;312:18;5882:69:48;;;;;;;;10018:74;;;;;;;;;;-1:-1:-1;10018:74:48;;;;;:::i;:::-;;;;2256:146;;;;;;;;;;-1:-1:-1;2256:146:48;;;;;:::i;:::-;2394:4;2256:146;;;;;;7893:185;;;;;;;;;;-1:-1:-1;7893:185:48;;;;;:::i;:::-;;;;;;;2990:244;;;;;;;;;;-1:-1:-1;2990:244:48;;;;;:::i;:::-;3223:7;2990:244;;;;;;;;;;;;3779:25:64;;;3767:2;3752:18;2990:244:48;3633:177:64;4534:63:48;;;;;;;;;;-1:-1:-1;4589:4:48;4534:63;;8688:119;;;;;;;;;;-1:-1:-1;8688:119:48;;;;;:::i;:::-;8795:4;8688:119;;;;;3470:73;;;;;;;;;;-1:-1:-1;3470:73:48;;;;;:::i;4603:::-;;;;;;;;;;-1:-1:-1;4603:73:48;;;;;:::i;7192:37::-;;;;;;;;;6763:145;;;;;;;;;;-1:-1:-1;6763:145:48;;;;;:::i;7048:44::-;;;;;;;;;;-1:-1:-1;7048:44:48;;;;;:::i;:::-;;;9488:97;;;;;;;;;;-1:-1:-1;9488:97:48;;;;;:::i;6143:102::-;;;;;;;;;;-1:-1:-1;6143:102:48;;;;;:::i;4367:71::-;;;;;;;;;;-1:-1:-1;4367:71:48;;;;;:::i;8350:130::-;;;;;;;;;;-1:-1:-1;8350:130:48;;;;;:::i;:::-;;;;;3830:113;;;;;;;;;;-1:-1:-1;3830:113:48;;;;;:::i;5335:141::-;;;;;;;;;;-1:-1:-1;5335:141:48;;;;;:::i;:::-;;;;;;2322:110:24;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6469:198:34:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6576:84;6469:198;-1:-1:-1;;;6469:198:34:o;1175:320::-;-1:-1:-1;;;;;1465:19:34;;:23;;;1175:320::o;1614:190:36:-;1784:4;1614:190::o;1301:184:48:-;1408:12;1443:35;1030:66:23;1380:54;-1:-1:-1;;;;;1380:54:23;;1301:140;1443:35:48;1436:42;;1301:184;:::o;948:895:24:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;6853:325:34;6994:12;7019;7033:23;7060:6;-1:-1:-1;;;;;7060:19:34;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:67;;;;7102:69;7129:6;7137:7;7146:10;7158:12;7102:26;:69::i;:::-;7095:76;6853:325;-1:-1:-1;;;;;;6853:325:34:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:34;;;7908:60;;;;-1:-1:-1;;;7908:60:34;;6973:2:64;7908:60:34;;;6955:21:64;7012:2;6992:18;;;6985:30;7051:31;7031:18;;;7024:59;7100:18;;7908:60:34;;;;;;;;;-1:-1:-1;8003:10:34;7996:17;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;:::o;8616:540::-;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:34;;;;;;;;:::i;14:180:64:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:64;;14:180;-1:-1:-1;14:180:64:o;391:173::-;459:20;;-1:-1:-1;;;;;508:31:64;;498:42;;488:70;;554:1;551;544:12;488:70;391:173;;;:::o;569:254::-;637:6;645;698:2;686:9;677:7;673:23;669:32;666:52;;;714:1;711;704:12;666:52;737:29;756:9;737:29;:::i;:::-;727:39;813:2;798:18;;;;785:32;;-1:-1:-1;;;569:254:64:o;828:160::-;893:20;;949:13;;942:21;932:32;;922:60;;978:1;975;968:12;993:322;1067:6;1075;1083;1136:2;1124:9;1115:7;1111:23;1107:32;1104:52;;;1152:1;1149;1142:12;1104:52;1175:29;1194:9;1175:29;:::i;:::-;1165:39;;1223:35;1254:2;1243:9;1239:18;1223:35;:::i;:::-;1213:45;;1305:2;1294:9;1290:18;1277:32;1267:42;;993:322;;;;;:::o;1320:159::-;1387:20;;1447:6;1436:18;;1426:29;;1416:57;;1469:1;1466;1459:12;1484:127;1545:10;1540:3;1536:20;1533:1;1526:31;1576:4;1573:1;1566:15;1600:4;1597:1;1590:15;1616:719;1659:5;1712:3;1705:4;1697:6;1693:17;1689:27;1679:55;;1730:1;1727;1720:12;1679:55;1766:6;1753:20;1792:18;1829:2;1825;1822:10;1819:36;;;1835:18;;:::i;:::-;1910:2;1904:9;1878:2;1964:13;;-1:-1:-1;;1960:22:64;;;1984:2;1956:31;1952:40;1940:53;;;2008:18;;;2028:22;;;2005:46;2002:72;;;2054:18;;:::i;:::-;2094:10;2090:2;2083:22;2129:2;2121:6;2114:18;2175:3;2168:4;2163:2;2155:6;2151:15;2147:26;2144:35;2141:55;;;2192:1;2189;2182:12;2141:55;2256:2;2249:4;2241:6;2237:17;2230:4;2222:6;2218:17;2205:54;2303:1;2296:4;2291:2;2283:6;2279:15;2275:26;2268:37;2323:6;2314:15;;;;;;1616:719;;;;:::o;2340:600::-;2444:6;2452;2460;2468;2476;2529:3;2517:9;2508:7;2504:23;2500:33;2497:53;;;2546:1;2543;2536:12;2497:53;2582:9;2569:23;2559:33;;2639:2;2628:9;2624:18;2611:32;2601:42;;2662:37;2695:2;2684:9;2680:18;2662:37;:::i;:::-;2652:47;;2746:2;2735:9;2731:18;2718:32;2708:42;;2801:3;2790:9;2786:19;2773:33;2829:18;2821:6;2818:30;2815:50;;;2861:1;2858;2851:12;2815:50;2884;2926:7;2917:6;2906:9;2902:22;2884:50;:::i;:::-;2874:60;;;2340:600;;;;;;;;:::o;2945:683::-;3059:6;3067;3075;3083;3091;3099;3152:3;3140:9;3131:7;3127:23;3123:33;3120:53;;;3169:1;3166;3159:12;3120:53;3192:29;3211:9;3192:29;:::i;:::-;3182:39;;3240:38;3274:2;3263:9;3259:18;3240:38;:::i;:::-;3230:48;;3329:2;3318:9;3314:18;3301:32;3356:18;3348:6;3345:30;3342:50;;;3388:1;3385;3378:12;3342:50;3411;3453:7;3444:6;3433:9;3429:22;3411:50;:::i;:::-;3401:60;;;3480:38;3514:2;3503:9;3499:18;3480:38;:::i;:::-;3470:48;;3565:3;3554:9;3550:19;3537:33;3527:43;;3617:3;3606:9;3602:19;3589:33;3579:43;;2945:683;;;;;;;;:::o;3815:248::-;3883:6;3891;3944:2;3932:9;3923:7;3919:23;3915:32;3912:52;;;3960:1;3957;3950:12;3912:52;-1:-1:-1;;3983:23:64;;;4053:2;4038:18;;;4025:32;;-1:-1:-1;3815:248:64:o;4068:316::-;4145:6;4153;4161;4214:2;4202:9;4193:7;4189:23;4185:32;4182:52;;;4230:1;4227;4220:12;4182:52;-1:-1:-1;;4253:23:64;;;4323:2;4308:18;;4295:32;;-1:-1:-1;4374:2:64;4359:18;;;4346:32;;4068:316;-1:-1:-1;4068:316:64:o;4389:254::-;4457:6;4465;4518:2;4506:9;4497:7;4493:23;4489:32;4486:52;;;4534:1;4531;4524:12;4486:52;4570:9;4557:23;4547:33;;4599:38;4633:2;4622:9;4618:18;4599:38;:::i;:::-;4589:48;;4389:254;;;;;:::o;4648:248::-;4713:6;4721;4774:2;4762:9;4753:7;4749:23;4745:32;4742:52;;;4790:1;4787;4780:12;4742:52;4826:9;4813:23;4803:33;;4855:35;4886:2;4875:9;4871:18;4855:35;:::i;4901:186::-;4960:6;5013:2;5001:9;4992:7;4988:23;4984:32;4981:52;;;5029:1;5026;5019:12;4981:52;5052:29;5071:9;5052:29;:::i;5092:458::-;5179:6;5187;5195;5248:2;5236:9;5227:7;5223:23;5219:32;5216:52;;;5264:1;5261;5254:12;5216:52;5300:9;5287:23;5277:33;;5357:2;5346:9;5342:18;5329:32;5319:42;;5412:2;5401:9;5397:18;5384:32;5439:18;5431:6;5428:30;5425:50;;;5471:1;5468;5461:12;5425:50;5494;5536:7;5527:6;5516:9;5512:22;5494:50;:::i;:::-;5484:60;;;5092:458;;;;;:::o;5555:260::-;5623:6;5631;5684:2;5672:9;5663:7;5659:23;5655:32;5652:52;;;5700:1;5697;5690:12;5652:52;5723:29;5742:9;5723:29;:::i;:::-;5713:39;;5771:38;5805:2;5794:9;5790:18;5771:38;:::i;5820:399::-;5904:6;5912;5920;5928;5981:3;5969:9;5960:7;5956:23;5952:33;5949:53;;;5998:1;5995;5988:12;5949:53;6034:9;6021:23;6011:33;;6063:38;6097:2;6086:9;6082:18;6063:38;:::i;:::-;6053:48;;6120:37;6153:2;6142:9;6138:18;6120:37;:::i;:::-;6110:47;;6176:37;6209:2;6198:9;6194:18;6176:37;:::i;:::-;6166:47;;5820:399;;;;;;;:::o;6224:250::-;6309:1;6319:113;6333:6;6330:1;6327:13;6319:113;;;6409:11;;;6403:18;6390:11;;;6383:39;6355:2;6348:10;6319:113;;;-1:-1:-1;;6466:1:64;6448:16;;6441:27;6224:250::o;6479:287::-;6608:3;6646:6;6640:13;6662:66;6721:6;6716:3;6709:4;6701:6;6697:17;6662:66;:::i;:::-;6744:16;;;;;6479:287;-1:-1:-1;;6479:287:64:o;7129:396::-;7278:2;7267:9;7260:21;7241:4;7310:6;7304:13;7353:6;7348:2;7337:9;7333:18;7326:34;7369:79;7441:6;7436:2;7425:9;7421:18;7416:2;7408:6;7404:15;7369:79;:::i;:::-;7509:2;7488:15;-1:-1:-1;;7484:29:64;7469:45;;;;7516:2;7465:54;;7129:396;-1:-1:-1;;7129:396:64:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addNewBountyPool(address,address,string,address,uint256,uint256)": "32fce602",
    "billPremium(uint256)": "2dbe051e",
    "calculateEffectiveAPY(uint256,uint256,uint256)": "81c6f1a7",
    "claimPremium(uint256)": "f47ec3be",
    "collectAllReferralProfits()": "3e8888d9",
    "collectAllSaloonProfits(address)": "ecd7fbed",
    "collectReferralProfit(address)": "a089a520",
    "collectSaloonProfits(address,address)": "cf9564b9",
    "compoundYieldForPid(uint256)": "e78ea3df",
    "consolidate(uint256)": "949a4a4a",
    "consolidateAll()": "75bfd63d",
    "extendReferralPeriod(uint256,uint256)": "5de406dc",
    "makeProjectDeposit(uint256,uint256,string)": "ae07f948",
    "payBounty(uint256,address,uint16,uint16)": "d075afac",
    "projectDepositWithdrawal(uint256,uint256)": "983c1ce0",
    "receiveStrategyYield(address,uint256)": "1aebcecb",
    "scheduleProjectDepositWithdrawal(uint256,uint256)": "5669cbef",
    "scheduleUnstake(uint256)": "106d08df",
    "setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)": "30ca0794",
    "stake(uint256,uint256)": "7b0472f0",
    "unstake(uint256,bool)": "9ebea88c",
    "updateProjectWalletAddress(uint256,address)": "995974c4",
    "updateTokenWhitelist(address,bool,uint256)": "2cb0dfcc",
    "viewBountyBalance(uint256)": "6ac6d812",
    "windDownBounty(uint256)": "bb7019c1",
    "withdrawProjectYield(uint256)": "db53e8b5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_projectName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralEndTime\",\"type\":\"uint256\"}],\"name\":\"addNewBountyPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"billPremium\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"calculateEffectiveAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"scaledAPY\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimPremium\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectAllReferralProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saloonWallet\",\"type\":\"address\"}],\"name\":\"collectAllSaloonProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"collectReferralProfit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_saloonWallet\",\"type\":\"address\"}],\"name\":\"collectSaloonProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compoundYieldForPid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"consolidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consolidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"extendReferralPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deposit\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_strategyName\",\"type\":\"string\"}],\"name\":\"makeProjectDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_hunter\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_payoutBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_hunterBonusBPS\",\"type\":\"uint16\"}],\"name\":\"payBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"projectDepositWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"receiveStrategyYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"scheduleProjectDepositWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"scheduleUnstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_apy\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_deposit\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_strategyName\",\"type\":\"string\"}],\"name\":\"setAPYandPoolCapAndDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldHarvest\",\"type\":\"bool\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_projectWallet\",\"type\":\"address\"}],\"name\":\"updateProjectWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minStakeAmount\",\"type\":\"uint256\"}],\"name\":\"updateTokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"viewBountyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"windDownBounty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawProjectYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"addNewBountyPool(address,address,string,address,uint256,uint256)\":{\"details\":\"Can only be called by the owner.\",\"params\":{\"_projectName\":\"Name of the project that is hosting the bounty\",\"_projectWallet\":\"Address that will be able to deposit funds, set APY and poolCap for the pool\",\"_referralEndTime\":\"Timestamp up until the referral will be active\",\"_referralFee\":\"Referral fee that the referrer will receive (in BPS), max 50%\",\"_referrer\":\"Address of the individual that referred this bounty to The Saloon\",\"_token\":\"Token to be used by bounty pool\"}},\"calculateEffectiveAPY(uint256,uint256,uint256)\":{\"details\":\"formula for calculating effective price:      (50000000000000 * ((ln(33 * (sk)) + 5_000_000) - ln((33 * s) + 5_000_000))) / 33\",\"params\":{\"_pid\":\"Bounty pool id\",\"_stake\":\"amount to be staked\",\"_x\":\"Arbitrary X value\"}},\"claimPremium(uint256)\":{\"params\":{\"_tokenId\":\"Token Id of ERC721\"}},\"collectAllSaloonProfits(address)\":{\"params\":{\"_saloonWallet\":\"Address where the funds will go to\"}},\"collectReferralProfit(address)\":{\"params\":{\"_token\":\"Token used by the bounty that was referred\"}},\"collectSaloonProfits(address,address)\":{\"params\":{\"_saloonWallet\":\"Address where the funds will go to\",\"_token\":\"Token address to be transferred\"}},\"compoundYieldForPid(uint256)\":{\"params\":{\"_pid\":\"Pool id whose strategy should be compounded\"}},\"consolidate(uint256)\":{\"params\":{\"_pid\":\"Bounty pool id\"}},\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"},\"extendReferralPeriod(uint256,uint256)\":{\"params\":{\"_endTime\":\"The new end time for the referral bonus\",\"_pid\":\"The pool id for the bounty\"}},\"makeProjectDeposit(uint256,uint256,string)\":{\"details\":\"Only callable by projectWallet\",\"params\":{\"_deposit\":\"Amount to be deposited\",\"_pid\":\"Bounty pool id\",\"_strategyName\":\"Name of the strategy where deposit will go to\"}},\"payBounty(uint256,address,uint16,uint16)\":{\"details\":\"only callable by Saloon ownerIncludes Saloon commission + hunter payout\",\"params\":{\"__pid\":\"Bounty pool id\",\"_hunter\":\"Hunter address that will receive payout\",\"_payoutBPS\":\"Percentage of Saloon's fee that will go to hunter as bonus\"}},\"projectDepositWithdrawal(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to withdraw (must be equal to amount scheduled)\",\"_pid\":\"Bounty pool id\"}},\"receiveStrategyYield(address,uint256)\":{\"details\":\"Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS? - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or   referralBalances are incremented.\",\"params\":{\"_amount\":\"Amount being received\",\"_token\":\"Token being received\"}},\"scheduleProjectDepositWithdrawal(uint256,uint256)\":{\"details\":\"withdrawal must be made within a certain time window\",\"params\":{\"_amount\":\"Amount to withdraw\",\"_pid\":\"Bounty pool id\"}},\"scheduleUnstake(uint256)\":{\"details\":\"must be unstaked within a certain time window after scheduled\",\"params\":{\"_tokenId\":\"Token Id of ERC721 being unstaked\"}},\"setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)\":{\"details\":\"Can only be called by the projectWallet\",\"params\":{\"_apy\":\"Average APY that will be paid to stakers\",\"_deposit\":\"Amount to be deopsited as bounty payout\",\"_pid\":\"Bounty pool id\",\"_poolCap\":\"Max size of pool in token amount\",\"_strategyName\":\"Name of the strategy to be used\"}},\"stake(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to be staked\",\"_pid\":\"Bounty pool id\"}},\"unstake(uint256,bool)\":{\"params\":{\"_shouldHarvest\":\"Whether staker wants to claim their owed premium or not\",\"_tokenId\":\"Token Id of ERC721 being unstaked\"}},\"updateProjectWalletAddress(uint256,address)\":{\"params\":{\"_pid\":\"Bounty pool id\",\"_projectWallet\":\"The new project wallet\"}},\"updateTokenWhitelist(address,bool,uint256)\":{\"details\":\"Only one token is allowed per pool\",\"params\":{\"_minStakeAmount\":\"The minimum amount for staking for pools pools using such token\",\"_token\":\"ERC20 to add or remove from whitelist\",\"_whitelisted\":\"bool to select if a token will be added or removed\"}},\"windDownBounty(uint256)\":{\"params\":{\"_pid\":\"Bounty pool id\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addNewBountyPool(address,address,string,address,uint256,uint256)\":{\"notice\":\"Adds a new bounty pool.\"},\"calculateEffectiveAPY(uint256,uint256,uint256)\":{\"notice\":\"Calculates effective APY staker will be entitled to in exchange for amount staked\"},\"claimPremium(uint256)\":{\"notice\":\"Claims premium for specified tokenId\"},\"collectAllReferralProfits()\":{\"notice\":\"Allows referrers to collect their profit from all bounties for all tokens\"},\"collectAllSaloonProfits(address)\":{\"notice\":\"Transfer Saloon profits for all tokens from premiums and bounties collected\"},\"collectReferralProfit(address)\":{\"notice\":\"Allows referrers to collect their profit from all bounties for one token\"},\"collectSaloonProfits(address,address)\":{\"notice\":\"Transfer Saloon profits for a specific token from premiums and bounties collected\"},\"compoundYieldForPid(uint256)\":{\"notice\":\"Harvest pending yield from active strategy for single pid and reinvest\"},\"consolidate(uint256)\":{\"notice\":\"Processes unstakes and calculates new APY for remaining stakers of a specific pool\"},\"consolidateAll()\":{\"notice\":\"Processes unstakes and calculates new APY for remaining stakers for all pools\"},\"extendReferralPeriod(uint256,uint256)\":{\"notice\":\"Extend the referral period for the bounty. The new end time can only be larger than the current value.\"},\"makeProjectDeposit(uint256,uint256,string)\":{\"notice\":\"Makes a deposit that will serve as bounty payout\"},\"payBounty(uint256,address,uint16,uint16)\":{\"notice\":\"Pays valid bounty submission to hunter\"},\"projectDepositWithdrawal(uint256,uint256)\":{\"notice\":\"Completes scheduled withdrawal\"},\"receiveStrategyYield(address,uint256)\":{\"notice\":\"Callback function from strategies upon converting yield to underlying\"},\"scheduleProjectDepositWithdrawal(uint256,uint256)\":{\"notice\":\"Schedules withdrawal for a project deposit\"},\"scheduleUnstake(uint256)\":{\"notice\":\"Schedule unstake with specific amount\"},\"setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)\":{\"notice\":\"Sets the average APY,Pool Cap and deposits project payout\"},\"stake(uint256,uint256)\":{\"notice\":\"Stake tokens in a Bounty pool to earn premium payments.\"},\"unstake(uint256,bool)\":{\"notice\":\"Unstake scheduled tokenId\"},\"updateProjectWalletAddress(uint256,address)\":{\"notice\":\"Updates the pool's project wallet address\"},\"updateTokenWhitelist(address,bool,uint256)\":{\"notice\":\"Updates the list of ERC20 tokens allow to be used in bounty pools_minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value\"},\"windDownBounty(uint256)\":{\"notice\":\"Deactivates pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SaloonProxy.sol\":\"SaloonProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":decimath/=lib/decimath/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31\",\"dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622\",\"dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"src/SaloonProxy.sol\":{\"keccak256\":\"0xa7f6db58969435507ad646f7f27134e05ba898486900520db13fc87d335b1e1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9ccc228fcbc53071f9477403a5f8f0b7747846a2bac7c698b2517a8f4896ae4\",\"dweb:/ipfs/QmYfw7HQFPFsrjsmAuiSb7YvwE98nbyVde4YHiaNv9RaqQ\"]},\"src/lib/OwnableUpgradeable.sol\":{\"keccak256\":\"0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5\",\"dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_projectName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_referrer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_referralFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_referralEndTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewBountyPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "billPremium",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_x",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateEffectiveAPY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "scaledAPY",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimPremium"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectAllReferralProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saloonWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectAllSaloonProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectReferralProfit",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_saloonWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectSaloonProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "compoundYieldForPid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consolidate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consolidateAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_endTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendReferralPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deposit",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_strategyName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeProjectDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "__pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_hunter",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_payoutBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_hunterBonusBPS",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "payBounty"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "projectDepositWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveStrategyYield"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleProjectDepositWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleUnstake",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "_apy",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_deposit",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_strategyName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAPYandPoolCapAndDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_shouldHarvest",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_projectWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProjectWalletAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_whitelisted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_minStakeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "viewBountyBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "windDownBounty",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawProjectYield",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "returnedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addNewBountyPool(address,address,string,address,uint256,uint256)": {
            "details": "Can only be called by the owner.",
            "params": {
              "_projectName": "Name of the project that is hosting the bounty",
              "_projectWallet": "Address that will be able to deposit funds, set APY and poolCap for the pool",
              "_referralEndTime": "Timestamp up until the referral will be active",
              "_referralFee": "Referral fee that the referrer will receive (in BPS), max 50%",
              "_referrer": "Address of the individual that referred this bounty to The Saloon",
              "_token": "Token to be used by bounty pool"
            }
          },
          "calculateEffectiveAPY(uint256,uint256,uint256)": {
            "details": "formula for calculating effective price:      (50000000000000 * ((ln(33 * (sk)) + 5_000_000) - ln((33 * s) + 5_000_000))) / 33",
            "params": {
              "_pid": "Bounty pool id",
              "_stake": "amount to be staked",
              "_x": "Arbitrary X value"
            }
          },
          "claimPremium(uint256)": {
            "params": {
              "_tokenId": "Token Id of ERC721"
            }
          },
          "collectAllSaloonProfits(address)": {
            "params": {
              "_saloonWallet": "Address where the funds will go to"
            }
          },
          "collectReferralProfit(address)": {
            "params": {
              "_token": "Token used by the bounty that was referred"
            }
          },
          "collectSaloonProfits(address,address)": {
            "params": {
              "_saloonWallet": "Address where the funds will go to",
              "_token": "Token address to be transferred"
            }
          },
          "compoundYieldForPid(uint256)": {
            "params": {
              "_pid": "Pool id whose strategy should be compounded"
            }
          },
          "consolidate(uint256)": {
            "params": {
              "_pid": "Bounty pool id"
            }
          },
          "constructor": {
            "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
          },
          "extendReferralPeriod(uint256,uint256)": {
            "params": {
              "_endTime": "The new end time for the referral bonus",
              "_pid": "The pool id for the bounty"
            }
          },
          "makeProjectDeposit(uint256,uint256,string)": {
            "details": "Only callable by projectWallet",
            "params": {
              "_deposit": "Amount to be deposited",
              "_pid": "Bounty pool id",
              "_strategyName": "Name of the strategy where deposit will go to"
            }
          },
          "payBounty(uint256,address,uint16,uint16)": {
            "details": "only callable by Saloon ownerIncludes Saloon commission + hunter payout",
            "params": {
              "__pid": "Bounty pool id",
              "_hunter": "Hunter address that will receive payout",
              "_payoutBPS": "Percentage of Saloon's fee that will go to hunter as bonus"
            }
          },
          "projectDepositWithdrawal(uint256,uint256)": {
            "params": {
              "_amount": "Amount to withdraw (must be equal to amount scheduled)",
              "_pid": "Bounty pool id"
            }
          },
          "receiveStrategyYield(address,uint256)": {
            "details": "Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS? - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or   referralBalances are incremented.",
            "params": {
              "_amount": "Amount being received",
              "_token": "Token being received"
            }
          },
          "scheduleProjectDepositWithdrawal(uint256,uint256)": {
            "details": "withdrawal must be made within a certain time window",
            "params": {
              "_amount": "Amount to withdraw",
              "_pid": "Bounty pool id"
            }
          },
          "scheduleUnstake(uint256)": {
            "details": "must be unstaked within a certain time window after scheduled",
            "params": {
              "_tokenId": "Token Id of ERC721 being unstaked"
            }
          },
          "setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)": {
            "details": "Can only be called by the projectWallet",
            "params": {
              "_apy": "Average APY that will be paid to stakers",
              "_deposit": "Amount to be deopsited as bounty payout",
              "_pid": "Bounty pool id",
              "_poolCap": "Max size of pool in token amount",
              "_strategyName": "Name of the strategy to be used"
            }
          },
          "stake(uint256,uint256)": {
            "params": {
              "_amount": "Amount to be staked",
              "_pid": "Bounty pool id"
            }
          },
          "unstake(uint256,bool)": {
            "params": {
              "_shouldHarvest": "Whether staker wants to claim their owed premium or not",
              "_tokenId": "Token Id of ERC721 being unstaked"
            }
          },
          "updateProjectWalletAddress(uint256,address)": {
            "params": {
              "_pid": "Bounty pool id",
              "_projectWallet": "The new project wallet"
            }
          },
          "updateTokenWhitelist(address,bool,uint256)": {
            "details": "Only one token is allowed per pool",
            "params": {
              "_minStakeAmount": "The minimum amount for staking for pools pools using such token",
              "_token": "ERC20 to add or remove from whitelist",
              "_whitelisted": "bool to select if a token will be added or removed"
            }
          },
          "windDownBounty(uint256)": {
            "params": {
              "_pid": "Bounty pool id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addNewBountyPool(address,address,string,address,uint256,uint256)": {
            "notice": "Adds a new bounty pool."
          },
          "calculateEffectiveAPY(uint256,uint256,uint256)": {
            "notice": "Calculates effective APY staker will be entitled to in exchange for amount staked"
          },
          "claimPremium(uint256)": {
            "notice": "Claims premium for specified tokenId"
          },
          "collectAllReferralProfits()": {
            "notice": "Allows referrers to collect their profit from all bounties for all tokens"
          },
          "collectAllSaloonProfits(address)": {
            "notice": "Transfer Saloon profits for all tokens from premiums and bounties collected"
          },
          "collectReferralProfit(address)": {
            "notice": "Allows referrers to collect their profit from all bounties for one token"
          },
          "collectSaloonProfits(address,address)": {
            "notice": "Transfer Saloon profits for a specific token from premiums and bounties collected"
          },
          "compoundYieldForPid(uint256)": {
            "notice": "Harvest pending yield from active strategy for single pid and reinvest"
          },
          "consolidate(uint256)": {
            "notice": "Processes unstakes and calculates new APY for remaining stakers of a specific pool"
          },
          "consolidateAll()": {
            "notice": "Processes unstakes and calculates new APY for remaining stakers for all pools"
          },
          "extendReferralPeriod(uint256,uint256)": {
            "notice": "Extend the referral period for the bounty. The new end time can only be larger than the current value."
          },
          "makeProjectDeposit(uint256,uint256,string)": {
            "notice": "Makes a deposit that will serve as bounty payout"
          },
          "payBounty(uint256,address,uint16,uint16)": {
            "notice": "Pays valid bounty submission to hunter"
          },
          "projectDepositWithdrawal(uint256,uint256)": {
            "notice": "Completes scheduled withdrawal"
          },
          "receiveStrategyYield(address,uint256)": {
            "notice": "Callback function from strategies upon converting yield to underlying"
          },
          "scheduleProjectDepositWithdrawal(uint256,uint256)": {
            "notice": "Schedules withdrawal for a project deposit"
          },
          "scheduleUnstake(uint256)": {
            "notice": "Schedule unstake with specific amount"
          },
          "setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)": {
            "notice": "Sets the average APY,Pool Cap and deposits project payout"
          },
          "stake(uint256,uint256)": {
            "notice": "Stake tokens in a Bounty pool to earn premium payments."
          },
          "unstake(uint256,bool)": {
            "notice": "Unstake scheduled tokenId"
          },
          "updateProjectWalletAddress(uint256,address)": {
            "notice": "Updates the pool's project wallet address"
          },
          "updateTokenWhitelist(address,bool,uint256)": {
            "notice": "Updates the list of ERC20 tokens allow to be used in bounty pools_minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value"
          },
          "windDownBounty(uint256)": {
            "notice": "Deactivates pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":decimath/=lib/decimath/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SaloonProxy.sol": "SaloonProxy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1",
        "urls": [
          "bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31",
          "dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2",
        "urls": [
          "bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622",
          "dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a",
        "urls": [
          "bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8",
          "dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
        "urls": [
          "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
          "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "src/SaloonProxy.sol": {
        "keccak256": "0xa7f6db58969435507ad646f7f27134e05ba898486900520db13fc87d335b1e1a",
        "urls": [
          "bzz-raw://a9ccc228fcbc53071f9477403a5f8f0b7747846a2bac7c698b2517a8f4896ae4",
          "dweb:/ipfs/QmYfw7HQFPFsrjsmAuiSb7YvwE98nbyVde4YHiaNv9RaqQ"
        ],
        "license": "MIT"
      },
      "src/lib/OwnableUpgradeable.sol": {
        "keccak256": "0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661",
        "urls": [
          "bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5",
          "dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SaloonProxy.sol",
    "id": 32882,
    "exportedSymbols": {
      "Address": [
        23620
      ],
      "AddressUpgradeable": [
        20498
      ],
      "ContextUpgradeable": [
        20540
      ],
      "ERC1967Upgrade": [
        22024
      ],
      "IBeacon": [
        22086
      ],
      "IERC1822Proxiable": [
        21706
      ],
      "Initializable": [
        19844
      ],
      "OwnableUpgradeable": [
        36194
      ],
      "Proxy": [
        22076
      ],
      "SaloonProxy": [
        32881
      ],
      "StorageSlot": [
        23702
      ]
    },
    "nodeType": "SourceUnit",
    "src": "114:10190:48",
    "nodes": [
      {
        "id": 32588,
        "nodeType": "PragmaDirective",
        "src": "114:24:48",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 32589,
        "nodeType": "ImportDirective",
        "src": "140:75:48",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32882,
        "sourceUnit": 22025,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32590,
        "nodeType": "ImportDirective",
        "src": "216:58:48",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "file": "openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32882,
        "sourceUnit": 22077,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32591,
        "nodeType": "ImportDirective",
        "src": "275:38:48",
        "nodes": [],
        "absolutePath": "src/lib/OwnableUpgradeable.sol",
        "file": "./lib/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32882,
        "sourceUnit": 36195,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32881,
        "nodeType": "ContractDefinition",
        "src": "688:9615:48",
        "nodes": [
          {
            "id": 32611,
            "nodeType": "FunctionDefinition",
            "src": "1078:145:48",
            "nodes": [],
            "body": {
              "id": 32610,
              "nodeType": "Block",
              "src": "1134:89:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32605,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32599,
                        "src": "1162:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32606,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32601,
                        "src": "1170:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32604,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21807,
                      "src": "1144:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 32608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:39:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32609,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:39:48"
                }
              ]
            },
            "documentation": {
              "id": 32597,
              "nodeType": "StructuredDocumentation",
              "src": "740:333:48",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32599,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1098:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32611,
                  "src": "1090:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32601,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1119:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32611,
                  "src": "1106:18:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 32600,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:36:48"
            },
            "returnParameters": {
              "id": 32603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:48"
            },
            "scope": 32881,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32623,
            "nodeType": "FunctionDefinition",
            "src": "1301:184:48",
            "nodes": [],
            "body": {
              "id": 32622,
              "nodeType": "Block",
              "src": "1426:59:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32618,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "1443:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$22024_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 32619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1458:18:48",
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21738,
                      "src": "1443:33:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 32620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:35:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 32617,
                  "id": 32621,
                  "nodeType": "Return",
                  "src": "1436:42:48"
                }
              ]
            },
            "baseFunctions": [
              22041
            ],
            "documentation": {
              "id": 32612,
              "nodeType": "StructuredDocumentation",
              "src": "1229:67:48",
              "text": " @dev Returns the current implementation address."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1310:15:48",
            "overrides": {
              "id": 32614,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1382:8:48"
            },
            "parameters": {
              "id": 32613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1325:2:48"
            },
            "returnParameters": {
              "id": 32617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32616,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1416:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32623,
                  "src": "1408:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:14:48"
            },
            "scope": 32881,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 32636,
            "nodeType": "FunctionDefinition",
            "src": "2256:146:48",
            "nodes": [],
            "body": {
              "id": 32635,
              "nodeType": "Block",
              "src": "2400:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32624,
              "nodeType": "StructuredDocumentation",
              "src": "1743:508:48",
              "text": "@notice Updates the list of ERC20 tokens allow to be used in bounty pools\n @notice _minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value\n @dev Only one token is allowed per pool\n @param _token ERC20 to add or remove from whitelist\n @param _whitelisted bool to select if a token will be added or removed\n @param _minStakeAmount The minimum amount for staking for pools pools using such token"
            },
            "functionSelector": "2cb0dfcc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenWhitelist",
            "nameLocation": "2265:20:48",
            "parameters": {
              "id": 32631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32626,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2303:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32636,
                  "src": "2295:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32628,
                  "mutability": "mutable",
                  "name": "_whitelisted",
                  "nameLocation": "2324:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32636,
                  "src": "2319:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32630,
                  "mutability": "mutable",
                  "name": "_minStakeAmount",
                  "nameLocation": "2354:15:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32636,
                  "src": "2346:23:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:90:48"
            },
            "returnParameters": {
              "id": 32634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32636,
                  "src": "2394:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2394:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2393:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32655,
            "nodeType": "FunctionDefinition",
            "src": "2990:244:48",
            "nodes": [],
            "body": {
              "id": 32654,
              "nodeType": "Block",
              "src": "3232:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32637,
              "nodeType": "StructuredDocumentation",
              "src": "2408:577:48",
              "text": "@notice Adds a new bounty pool.\n @dev Can only be called by the owner.\n @param _token Token to be used by bounty pool\n @param _projectWallet Address that will be able to deposit funds, set APY and poolCap for the pool\n @param _projectName Name of the project that is hosting the bounty\n @param _referrer Address of the individual that referred this bounty to The Saloon\n @param _referralFee Referral fee that the referrer will receive (in BPS), max 50%\n @param _referralEndTime Timestamp up until the referral will be active"
            },
            "functionSelector": "32fce602",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewBountyPool",
            "nameLocation": "2999:16:48",
            "parameters": {
              "id": 32650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32639,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3033:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3025:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32641,
                  "mutability": "mutable",
                  "name": "_projectWallet",
                  "nameLocation": "3057:14:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3049:22:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32643,
                  "mutability": "mutable",
                  "name": "_projectName",
                  "nameLocation": "3095:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3081:26:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32642,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32645,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "3125:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3117:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32647,
                  "mutability": "mutable",
                  "name": "_referralFee",
                  "nameLocation": "3152:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3144:20:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32649,
                  "mutability": "mutable",
                  "name": "_referralEndTime",
                  "nameLocation": "3182:16:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3174:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3015:189:48"
            },
            "returnParameters": {
              "id": 32653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32655,
                  "src": "3223:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:9:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32664,
            "nodeType": "FunctionDefinition",
            "src": "3470:73:48",
            "nodes": [],
            "body": {
              "id": 32663,
              "nodeType": "Block",
              "src": "3541:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32656,
              "nodeType": "StructuredDocumentation",
              "src": "3240:225:48",
              "text": "@notice Extend the referral period for the bounty. The new end time can only be larger than the current value.\n @param _pid The pool id for the bounty\n @param _endTime The new end time for the referral bonus"
            },
            "functionSelector": "5de406dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extendReferralPeriod",
            "nameLocation": "3479:20:48",
            "parameters": {
              "id": 32661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32658,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3508:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32664,
                  "src": "3500:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32660,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nameLocation": "3522:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32664,
                  "src": "3514:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3499:32:48"
            },
            "returnParameters": {
              "id": 32662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3541:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32672,
            "nodeType": "FunctionDefinition",
            "src": "3549:59:48",
            "nodes": [],
            "body": {
              "id": 32671,
              "nodeType": "Block",
              "src": "3606:2:48",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "2dbe051e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "billPremium",
            "nameLocation": "3558:11:48",
            "parameters": {
              "id": 32667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32666,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3578:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32672,
                  "src": "3570:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3569:14:48"
            },
            "returnParameters": {
              "id": 32670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32669,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32672,
                  "src": "3600:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3599:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32683,
            "nodeType": "FunctionDefinition",
            "src": "3830:113:48",
            "nodes": [],
            "body": {
              "id": 32682,
              "nodeType": "Block",
              "src": "3941:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32673,
              "nodeType": "StructuredDocumentation",
              "src": "3614:211:48",
              "text": "@notice Transfer Saloon profits for a specific token from premiums and bounties collected\n @param _token Token address to be transferred\n @param _saloonWallet Address where the funds will go to"
            },
            "functionSelector": "cf9564b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectSaloonProfits",
            "nameLocation": "3839:20:48",
            "parameters": {
              "id": 32678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32675,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3868:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32683,
                  "src": "3860:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3860:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32677,
                  "mutability": "mutable",
                  "name": "_saloonWallet",
                  "nameLocation": "3884:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32683,
                  "src": "3876:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3859:39:48"
            },
            "returnParameters": {
              "id": 32681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32683,
                  "src": "3931:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32679,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3931:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3930:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32692,
            "nodeType": "FunctionDefinition",
            "src": "4105:102:48",
            "nodes": [],
            "body": {
              "id": 32691,
              "nodeType": "Block",
              "src": "4205:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32684,
              "nodeType": "StructuredDocumentation",
              "src": "3949:151:48",
              "text": "@notice Transfer Saloon profits for all tokens from premiums and bounties collected\n @param _saloonWallet Address where the funds will go to"
            },
            "functionSelector": "ecd7fbed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectAllSaloonProfits",
            "nameLocation": "4114:23:48",
            "parameters": {
              "id": 32687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32686,
                  "mutability": "mutable",
                  "name": "_saloonWallet",
                  "nameLocation": "4146:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32692,
                  "src": "4138:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4138:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4137:23:48"
            },
            "returnParameters": {
              "id": 32690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32689,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32692,
                  "src": "4195:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32688,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4195:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4194:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32701,
            "nodeType": "FunctionDefinition",
            "src": "4367:71:48",
            "nodes": [],
            "body": {
              "id": 32700,
              "nodeType": "Block",
              "src": "4436:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32693,
              "nodeType": "StructuredDocumentation",
              "src": "4213:149:48",
              "text": "@notice Allows referrers to collect their profit from all bounties for one token\n @param _token Token used by the bounty that was referred"
            },
            "functionSelector": "a089a520",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectReferralProfit",
            "nameLocation": "4376:21:48",
            "parameters": {
              "id": 32696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32695,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4406:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32701,
                  "src": "4398:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4397:16:48"
            },
            "returnParameters": {
              "id": 32699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32701,
                  "src": "4430:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4429:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32708,
            "nodeType": "FunctionDefinition",
            "src": "4534:63:48",
            "nodes": [],
            "body": {
              "id": 32707,
              "nodeType": "Block",
              "src": "4595:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32702,
              "nodeType": "StructuredDocumentation",
              "src": "4444:85:48",
              "text": "@notice Allows referrers to collect their profit from all bounties for all tokens"
            },
            "functionSelector": "3e8888d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectAllReferralProfits",
            "nameLocation": "4543:25:48",
            "parameters": {
              "id": 32703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4568:2:48"
            },
            "returnParameters": {
              "id": 32706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32708,
                  "src": "4589:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4588:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32716,
            "nodeType": "FunctionDefinition",
            "src": "4603:73:48",
            "nodes": [],
            "body": {
              "id": 32715,
              "nodeType": "Block",
              "src": "4674:2:48",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "6ac6d812",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewBountyBalance",
            "nameLocation": "4612:17:48",
            "parameters": {
              "id": 32711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32710,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "4638:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32716,
                  "src": "4630:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4630:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4629:14:48"
            },
            "returnParameters": {
              "id": 32714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32716,
                  "src": "4665:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4664:9:48"
            },
            "scope": 32881,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32729,
            "nodeType": "FunctionDefinition",
            "src": "5335:141:48",
            "nodes": [],
            "body": {
              "id": 32728,
              "nodeType": "Block",
              "src": "5474:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32717,
              "nodeType": "StructuredDocumentation",
              "src": "4935:395:48",
              "text": "@notice Pays valid bounty submission to hunter\n @dev only callable by Saloon owner\n @dev Includes Saloon commission + hunter payout\n @param __pid Bounty pool id\n @param _hunter Hunter address that will receive payout\n @param _payoutBPS Percentage of pool to payout in BPS\n @param _payoutBPS Percentage of Saloon's fee that will go to hunter as bonus"
            },
            "functionSelector": "d075afac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payBounty",
            "nameLocation": "5344:9:48",
            "parameters": {
              "id": 32726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32719,
                  "mutability": "mutable",
                  "name": "__pid",
                  "nameLocation": "5371:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32729,
                  "src": "5363:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32721,
                  "mutability": "mutable",
                  "name": "_hunter",
                  "nameLocation": "5394:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32729,
                  "src": "5386:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5386:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32723,
                  "mutability": "mutable",
                  "name": "_payoutBPS",
                  "nameLocation": "5418:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32729,
                  "src": "5411:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 32722,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5411:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32725,
                  "mutability": "mutable",
                  "name": "_hunterBonusBPS",
                  "nameLocation": "5445:15:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32729,
                  "src": "5438:22:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 32724,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5353:113:48"
            },
            "returnParameters": {
              "id": 32727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5474:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32738,
            "nodeType": "FunctionDefinition",
            "src": "5632:57:48",
            "nodes": [],
            "body": {
              "id": 32737,
              "nodeType": "Block",
              "src": "5687:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32730,
              "nodeType": "StructuredDocumentation",
              "src": "5482:145:48",
              "text": "@notice Stake tokens in a Bounty pool to earn premium payments.\n @param _pid Bounty pool id\n @param _amount Amount to be staked"
            },
            "functionSelector": "7b0472f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "5641:5:48",
            "parameters": {
              "id": 32735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32732,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "5655:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32738,
                  "src": "5647:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5647:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32734,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5669:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32738,
                  "src": "5661:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5646:31:48"
            },
            "returnParameters": {
              "id": 32736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5687:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32747,
            "nodeType": "FunctionDefinition",
            "src": "5882:69:48",
            "nodes": [],
            "body": {
              "id": 32746,
              "nodeType": "Block",
              "src": "5949:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32739,
              "nodeType": "StructuredDocumentation",
              "src": "5695:182:48",
              "text": "@notice Schedule unstake with specific amount\n @dev must be unstaked within a certain time window after scheduled\n @param _tokenId Token Id of ERC721 being unstaked"
            },
            "functionSelector": "106d08df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleUnstake",
            "nameLocation": "5891:15:48",
            "parameters": {
              "id": 32742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32741,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5915:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32747,
                  "src": "5907:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5907:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5906:18:48"
            },
            "returnParameters": {
              "id": 32745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32747,
                  "src": "5943:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32743,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5943:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5942:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32758,
            "nodeType": "FunctionDefinition",
            "src": "6143:102:48",
            "nodes": [],
            "body": {
              "id": 32757,
              "nodeType": "Block",
              "src": "6243:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32748,
              "nodeType": "StructuredDocumentation",
              "src": "5957:181:48",
              "text": "@notice Unstake scheduled tokenId\n @param _tokenId Token Id of ERC721 being unstaked\n @param _shouldHarvest Whether staker wants to claim their owed premium or not"
            },
            "functionSelector": "9ebea88c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "6152:7:48",
            "parameters": {
              "id": 32753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32750,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6168:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32758,
                  "src": "6160:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6160:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32752,
                  "mutability": "mutable",
                  "name": "_shouldHarvest",
                  "nameLocation": "6183:14:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32758,
                  "src": "6178:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6178:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6159:39:48"
            },
            "returnParameters": {
              "id": 32756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32758,
                  "src": "6233:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32754,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6232:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32765,
            "nodeType": "FunctionDefinition",
            "src": "6347:51:48",
            "nodes": [],
            "body": {
              "id": 32764,
              "nodeType": "Block",
              "src": "6396:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32759,
              "nodeType": "StructuredDocumentation",
              "src": "6251:91:48",
              "text": "@notice Claims premium for specified tokenId\n @param _tokenId Token Id of ERC721"
            },
            "functionSelector": "f47ec3be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimPremium",
            "nameLocation": "6356:12:48",
            "parameters": {
              "id": 32762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32761,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6377:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32765,
                  "src": "6369:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6368:18:48"
            },
            "returnParameters": {
              "id": 32763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6396:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32778,
            "nodeType": "FunctionDefinition",
            "src": "6763:145:48",
            "nodes": [],
            "body": {
              "id": 32777,
              "nodeType": "Block",
              "src": "6906:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32766,
              "nodeType": "StructuredDocumentation",
              "src": "6404:354:48",
              "text": "@notice Calculates effective APY staker will be entitled to in exchange for amount staked\n @dev formula for calculating effective price:\n      (50000000000000 * ((ln(33 * (sk)) + 5_000_000) - ln((33 * s) + 5_000_000))) / 33\n @param _pid Bounty pool id\n @param _stake amount to be staked\n @param _x Arbitrary X value"
            },
            "functionSelector": "81c6f1a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateEffectiveAPY",
            "nameLocation": "6772:21:48",
            "parameters": {
              "id": 32773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32768,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "6811:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32778,
                  "src": "6803:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6803:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32770,
                  "mutability": "mutable",
                  "name": "_stake",
                  "nameLocation": "6833:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32778,
                  "src": "6825:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6825:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32772,
                  "mutability": "mutable",
                  "name": "_x",
                  "nameLocation": "6857:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32778,
                  "src": "6849:10:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6849:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6793:72:48"
            },
            "returnParameters": {
              "id": 32776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32775,
                  "mutability": "mutable",
                  "name": "scaledAPY",
                  "nameLocation": "6895:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32778,
                  "src": "6887:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6887:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6886:19:48"
            },
            "scope": 32881,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32785,
            "nodeType": "FunctionDefinition",
            "src": "7048:44:48",
            "nodes": [],
            "body": {
              "id": 32784,
              "nodeType": "Block",
              "src": "7090:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32779,
              "nodeType": "StructuredDocumentation",
              "src": "6914:129:48",
              "text": "@notice Processes unstakes and calculates new APY for remaining stakers of a specific pool\n @param _pid Bounty pool id"
            },
            "functionSelector": "949a4a4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consolidate",
            "nameLocation": "7057:11:48",
            "parameters": {
              "id": 32782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32781,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "7077:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32785,
                  "src": "7069:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7069:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7068:14:48"
            },
            "returnParameters": {
              "id": 32783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7090:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32790,
            "nodeType": "FunctionDefinition",
            "src": "7192:37:48",
            "nodes": [],
            "body": {
              "id": 32789,
              "nodeType": "Block",
              "src": "7227:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32786,
              "nodeType": "StructuredDocumentation",
              "src": "7098:89:48",
              "text": "@notice Processes unstakes and calculates new APY for remaining stakers for all pools"
            },
            "functionSelector": "75bfd63d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consolidateAll",
            "nameLocation": "7201:14:48",
            "parameters": {
              "id": 32787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7215:2:48"
            },
            "returnParameters": {
              "id": 32788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7227:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32805,
            "nodeType": "FunctionDefinition",
            "src": "7893:185:48",
            "nodes": [],
            "body": {
              "id": 32804,
              "nodeType": "Block",
              "src": "8076:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32791,
              "nodeType": "StructuredDocumentation",
              "src": "7488:400:48",
              "text": "@notice Sets the average APY,Pool Cap and deposits project payout\n @dev Can only be called by the projectWallet\n @param _pid Bounty pool id\n @param _poolCap Max size of pool in token amount\n @param _apy Average APY that will be paid to stakers\n @param _deposit Amount to be deopsited as bounty payout\n @param _strategyName Name of the strategy to be used"
            },
            "functionSelector": "30ca0794",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAPYandPoolCapAndDeposit",
            "nameLocation": "7902:26:48",
            "parameters": {
              "id": 32802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32793,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "7946:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32805,
                  "src": "7938:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7938:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32795,
                  "mutability": "mutable",
                  "name": "_poolCap",
                  "nameLocation": "7968:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32805,
                  "src": "7960:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7960:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32797,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "7993:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32805,
                  "src": "7986:11:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 32796,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7986:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32799,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nameLocation": "8015:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32805,
                  "src": "8007:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8007:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32801,
                  "mutability": "mutable",
                  "name": "_strategyName",
                  "nameLocation": "8047:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32805,
                  "src": "8033:27:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32800,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8033:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7928:138:48"
            },
            "returnParameters": {
              "id": 32803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8076:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32816,
            "nodeType": "FunctionDefinition",
            "src": "8350:130:48",
            "nodes": [],
            "body": {
              "id": 32815,
              "nodeType": "Block",
              "src": "8478:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32806,
              "nodeType": "StructuredDocumentation",
              "src": "8084:261:48",
              "text": "@notice Makes a deposit that will serve as bounty payout\n @dev Only callable by projectWallet\n @param _pid Bounty pool id\n @param _deposit Amount to be deposited\n @param _strategyName Name of the strategy where deposit will go to"
            },
            "functionSelector": "ae07f948",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeProjectDeposit",
            "nameLocation": "8359:18:48",
            "parameters": {
              "id": 32813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32808,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "8395:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32816,
                  "src": "8387:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8387:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32810,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nameLocation": "8417:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32816,
                  "src": "8409:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8409:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32812,
                  "mutability": "mutable",
                  "name": "_strategyName",
                  "nameLocation": "8449:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32816,
                  "src": "8435:27:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32811,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8435:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8377:91:48"
            },
            "returnParameters": {
              "id": 32814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8478:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32827,
            "nodeType": "FunctionDefinition",
            "src": "8688:119:48",
            "nodes": [],
            "body": {
              "id": 32826,
              "nodeType": "Block",
              "src": "8805:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32817,
              "nodeType": "StructuredDocumentation",
              "src": "8486:197:48",
              "text": "@notice Schedules withdrawal for a project deposit\n @dev withdrawal must be made within a certain time window\n @param _pid Bounty pool id\n @param _amount Amount to withdraw"
            },
            "functionSelector": "5669cbef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleProjectDepositWithdrawal",
            "nameLocation": "8697:32:48",
            "parameters": {
              "id": 32822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32819,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "8738:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32827,
                  "src": "8730:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8730:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32821,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8752:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32827,
                  "src": "8744:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8744:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8729:31:48"
            },
            "returnParameters": {
              "id": 32825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32827,
                  "src": "8795:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8795:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8794:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32838,
            "nodeType": "FunctionDefinition",
            "src": "8973:111:48",
            "nodes": [],
            "body": {
              "id": 32837,
              "nodeType": "Block",
              "src": "9082:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32828,
              "nodeType": "StructuredDocumentation",
              "src": "8813:155:48",
              "text": "@notice Completes scheduled withdrawal\n @param _pid Bounty pool id\n @param _amount Amount to withdraw (must be equal to amount scheduled)"
            },
            "functionSelector": "983c1ce0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "projectDepositWithdrawal",
            "nameLocation": "8982:24:48",
            "parameters": {
              "id": 32833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32830,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9015:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32838,
                  "src": "9007:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9007:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32832,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9029:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32838,
                  "src": "9021:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9021:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9006:31:48"
            },
            "returnParameters": {
              "id": 32836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32838,
                  "src": "9072:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9071:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32846,
            "nodeType": "FunctionDefinition",
            "src": "9090:108:48",
            "nodes": [],
            "body": {
              "id": 32845,
              "nodeType": "Block",
              "src": "9196:2:48",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "db53e8b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawProjectYield",
            "nameLocation": "9099:20:48",
            "parameters": {
              "id": 32841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32840,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9128:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32846,
                  "src": "9120:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9120:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9119:14:48"
            },
            "returnParameters": {
              "id": 32844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32843,
                  "mutability": "mutable",
                  "name": "returnedAmount",
                  "nameLocation": "9176:14:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32846,
                  "src": "9168:22:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9168:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9167:24:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32855,
            "nodeType": "FunctionDefinition",
            "src": "9272:64:48",
            "nodes": [],
            "body": {
              "id": 32854,
              "nodeType": "Block",
              "src": "9334:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32847,
              "nodeType": "StructuredDocumentation",
              "src": "9204:63:48",
              "text": "@notice Deactivates pool\n @param _pid Bounty pool id"
            },
            "functionSelector": "bb7019c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "windDownBounty",
            "nameLocation": "9281:14:48",
            "parameters": {
              "id": 32850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32849,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9304:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32855,
                  "src": "9296:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9296:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9295:14:48"
            },
            "returnParameters": {
              "id": 32853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32855,
                  "src": "9328:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32851,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9328:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9327:6:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32864,
            "nodeType": "FunctionDefinition",
            "src": "9488:97:48",
            "nodes": [],
            "body": {
              "id": 32863,
              "nodeType": "Block",
              "src": "9583:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32856,
              "nodeType": "StructuredDocumentation",
              "src": "9342:141:48",
              "text": "@notice Updates the pool's project wallet address\n @param _pid Bounty pool id\n @param _projectWallet The new project wallet"
            },
            "functionSelector": "995974c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProjectWalletAddress",
            "nameLocation": "9497:26:48",
            "parameters": {
              "id": 32861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32858,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9532:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32864,
                  "src": "9524:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9524:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32860,
                  "mutability": "mutable",
                  "name": "_projectWallet",
                  "nameLocation": "9546:14:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32864,
                  "src": "9538:22:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9538:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9523:38:48"
            },
            "returnParameters": {
              "id": 32862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9583:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32873,
            "nodeType": "FunctionDefinition",
            "src": "10018:74:48",
            "nodes": [],
            "body": {
              "id": 32872,
              "nodeType": "Block",
              "src": "10090:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32865,
              "nodeType": "StructuredDocumentation",
              "src": "9591:422:48",
              "text": "@notice Callback function from strategies upon converting yield to underlying\n @dev Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS?\n - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or\n   referralBalances are incremented.\n @param _token Token being received\n @param _amount Amount being received"
            },
            "functionSelector": "1aebcecb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveStrategyYield",
            "nameLocation": "10027:20:48",
            "parameters": {
              "id": 32870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32867,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "10056:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32873,
                  "src": "10048:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10048:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32869,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10072:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32873,
                  "src": "10064:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10064:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10047:33:48"
            },
            "returnParameters": {
              "id": 32871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10090:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32880,
            "nodeType": "FunctionDefinition",
            "src": "10249:52:48",
            "nodes": [],
            "body": {
              "id": 32879,
              "nodeType": "Block",
              "src": "10299:2:48",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 32874,
              "nodeType": "StructuredDocumentation",
              "src": "10098:146:48",
              "text": "@notice Harvest pending yield from active strategy for single pid and reinvest\n @param _pid Pool id whose strategy should be compounded"
            },
            "functionSelector": "e78ea3df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundYieldForPid",
            "nameLocation": "10258:19:48",
            "parameters": {
              "id": 32877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32876,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "10286:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 32880,
                  "src": "10278:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10278:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10277:14:48"
            },
            "returnParameters": {
              "id": 32878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10299:0:48"
            },
            "scope": 32881,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32593,
              "name": "Proxy",
              "nameLocations": [
                "712:5:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22076,
              "src": "712:5:48"
            },
            "id": 32594,
            "nodeType": "InheritanceSpecifier",
            "src": "712:5:48"
          },
          {
            "baseName": {
              "id": 32595,
              "name": "ERC1967Upgrade",
              "nameLocations": [
                "719:14:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22024,
              "src": "719:14:48"
            },
            "id": 32596,
            "nodeType": "InheritanceSpecifier",
            "src": "719:14:48"
          }
        ],
        "canonicalName": "SaloonProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32592,
          "nodeType": "StructuredDocumentation",
          "src": "315:372:48",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32881,
          22024,
          22076
        ],
        "name": "SaloonProxy",
        "nameLocation": "697:11:48",
        "scope": 32882,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 48
}