{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facet",
                  "type": "address"
                },
                {
                  "internalType": "enum Diamond.Action",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isFreezable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct Diamond.FacetCut[]",
              "name": "facetCuts",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "initAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initCalldata",
              "type": "bytes"
            }
          ],
          "internalType": "struct Diamond.DiamondCutData",
          "name": "_diamondCut",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "169:2418:49:-:0;;;197:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;454:31;473:11;454:18;;;;;:31;;:::i;:::-;197:295;169:2418;;4437:1221:78;4541:21;;4594:23;;;;4655:24;;;;4715:16;;4511:27;4741:789;4765:15;4761:1;:19;4741:789;;;4801:13;4817:9;4827:1;4817:12;;;;;;;;:::i;:::-;;;;;;;:19;;;4801:35;;4850:13;4866:9;4876:1;4866:12;;;;;;;;:::i;:::-;;;;;;;:18;;;4850:34;;4898:21;4922:9;4932:1;4922:12;;;;;;;;:::i;:::-;;;;;;;:24;;;4898:48;;4960:25;4988:9;4998:1;4988:12;;;;;;;;:::i;:::-;;;;;;;:22;;;4960:50;;5052:1;5033:9;:16;:20;5025:34;;;;-1:-1:-1;;;5025:34:78;;5870:2:87;5025:34:78;;;5852:21:87;5909:1;5889:18;;;5882:29;-1:-1:-1;;;5927:18:87;;;5920:31;5968:18;;5025:34:78;;;;;;;;;5120:10;5110:6;:20;;;;;;;;:::i;:::-;;5106:414;;5150:49;5164:5;5171:9;5182:16;5150:13;:49::i;:::-;5106:414;;;5234:14;5224:6;:24;;;;;;;;:::i;:::-;;5220:300;;5268:53;5286:5;5293:9;5304:16;5268:17;:53::i;5220:300::-;5356:13;5346:6;:23;;;;;;;;:::i;:::-;;5342:178;;5389:34;5406:5;5413:9;5389:16;:34::i;5342:178::-;5462:11;;-1:-1:-1;;;5462:11:78;;6331:2:87;5462:11:78;;;6313:21:87;6370:1;6350:18;;;6343:29;-1:-1:-1;;;6388:18:87;;;6381:31;6429:18;;5462:11:78;6129:324:87;5342:178:78;4787:743;;;;4782:3;;;;:::i;:::-;;;4741:789;;;-1:-1:-1;5540:48:78;5562:11;5575:12;5540:21;:48::i;:::-;5603;5614:9;5625:11;5638:12;5603:48;;;;;;;;:::i;:::-;;;;;;;;4501:1157;;;;4437:1221;:::o;5790:803::-;-1:-1:-1;;;;;;;;;;;;;;;;5995:20:78;;5987:34;;;;-1:-1:-1;;;5987:34:78;;9486:2:87;5987:34:78;;;9468:21:87;9525:1;9505:18;;;9498:29;-1:-1:-1;;;9543:18:87;;;9536:31;9584:18;;5987:34:78;9284:324:87;5987:34:78;6150:23;6166:6;6150:15;:23::i;:::-;6210:17;;6184:23;6237:350;6261:15;6257:1;:19;6237:350;;;6297:15;6315:10;6326:1;6315:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6376:28:78;;6342:31;6376:28;;;;;;;;;;;6342:62;;;;;;;;;-1:-1:-1;;;;;6342:62:78;;;;;-1:-1:-1;;;6342:62:78;;;;;;;;;;;-1:-1:-1;;;6342:62:78;;;;;;;;;;;;;6315:13;;-1:-1:-1;6342:62:78;6426:35;6418:49;;;;-1:-1:-1;;;6418:49:78;;9815:2:87;6418:49:78;;;9797:21:87;9854:1;9834:18;;;9827:29;-1:-1:-1;;;9872:18:87;;;9865:31;9913:18;;6418:49:78;9613:324:87;6418:49:78;6524:52;6540:6;6548:8;6558:17;6524:15;:52::i;:::-;6283:304;;6278:3;;;;:::i;:::-;;;6237:350;;;;5919:674;;5790:803;;;:::o;6747:897::-;-1:-1:-1;;;;;;;;;;;;;;;;6956:20:78;;6948:34;;;;-1:-1:-1;;;6948:34:78;;10144:2:87;6948:34:78;;;10126:21:87;10183:1;10163:18;;;10156:29;-1:-1:-1;;;10201:18:87;;;10194:31;10242:18;;6948:34:78;9942:324:87;6948:34:78;7061:17;;7035:23;7088:550;7112:15;7108:1;:19;7088:550;;;7148:15;7166:10;7177:1;7166:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7227:28:78;;7193:31;7227:28;;;;;;;;;;;7193:62;;;;;;;;;-1:-1:-1;;;;;7193:62:78;;;;;-1:-1:-1;;;7193:62:78;;;;;;;;;;;-1:-1:-1;;;7193:62:78;;;;;;;;;;;;;7166:13;;-1:-1:-1;7193:62:78;7269:49;;;;-1:-1:-1;;;7269:49:78;;10473:2:87;7269:49:78;;;10455:21:87;10512:1;10492:18;;;10485:29;-1:-1:-1;;;10530:18:87;;;10523:31;10571:18;;7269:49:78;10271:324:87;7269:49:78;7411:21;;7392:51;;7434:8;7392:18;:51::i;:::-;7538:23;7554:6;7538:15;:23::i;:::-;7575:52;7591:6;7599:8;7609:17;7575:15;:52::i;:::-;7134:504;;7129:3;;;;:::i;:::-;;;7088:550;;7780:638;-1:-1:-1;;;;;;;;;;;;;;;;7946:20:78;;;7938:35;;;;-1:-1:-1;;;7938:35:78;;10802:2:87;7938:35:78;;;10784:21:87;10841:1;10821:18;;;10814:29;-1:-1:-1;;;10859:18:87;;;10852:32;10901:18;;7938:35:78;10600:325:87;7938:35:78;8040:17;;8014:23;8067:345;8091:15;8087:1;:19;8067:345;;;8127:15;8145:10;8156:1;8145:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;8206:28:78;;8172:31;8206:28;;;;;;;;;;;8172:62;;;;;;;;;-1:-1:-1;;;;;8172:62:78;;;;;-1:-1:-1;;;8172:62:78;;;;;;;;;;;-1:-1:-1;;;8172:62:78;;;;;;;;;;;;;8145:13;;-1:-1:-1;8172:62:78;8248:50;;;;-1:-1:-1;;;8248:50:78;;11132:2:87;8248:50:78;;;11114:21:87;11171:1;11151:18;;;11144:29;-1:-1:-1;;;11189:18:87;;;11182:32;11231:18;;8248:50:78;10930:325:87;8248:50:78;8369:21;;8350:51;;8392:8;8350:18;:51::i;:::-;8113:299;;8108:3;;;;:::i;:::-;;;8067:345;;;;7870:548;;7780:638;;:::o;13141:850::-;-1:-1:-1;;;;;13245:19:78;;13241:744;;13288:16;;:21;13280:35;;;;-1:-1:-1;;;13280:35:78;;11462:2:87;13280:35:78;;;11444:21:87;11501:1;11481:18;;;11474:29;-1:-1:-1;;;11519:18:87;;;11512:31;11560:18;;13280:35:78;11260:324:87;13280:35:78;13141:850;;:::o;13241:744::-;13487:12;13501:17;13522:5;-1:-1:-1;;;;;13522:18:78;13541:9;13522:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13486:65;;;;13573:7;13565:21;;;;-1:-1:-1;;;13565:21:78;;12083:2:87;13565:21:78;;;12065::87;12122:1;12102:18;;;12095:29;-1:-1:-1;;;12140:18:87;;;12133:31;12181:18;;13565:21:78;11881:324:87;13565:21:78;13790:4;:11;13805:2;13790:17;13782:32;;;;-1:-1:-1;;;13782:32:78;;12412:2:87;13782:32:78;;;12394:21:87;12451:1;12431:18;;;12424:29;-1:-1:-1;;;12469:18:87;;;12462:32;12511:18;;13782:32:78;12210:325:87;13782:32:78;509:66;13904:33;;13864:4;13853:27;;;;;;;;;;;;:::i;:::-;:84;13828:146;;;;-1:-1:-1;;;13828:146:78;;12931:2:87;13828:146:78;;;12913:21:87;12970:1;12950:18;;;12943:29;-1:-1:-1;;;12988:18:87;;;12981:33;13031:18;;13828:146:78;12729:326:87;13828:146:78;13371:614;;13141:850;;:::o;8599:474::-;-1:-1:-1;;;;;8742:27:78;;8658:25;8742:27;;;-1:-1:-1;;;;;;;;;;;8742:27:78;;;;;:44;-1:-1:-1;;;;;;;;;;;736:66:78;8886:20;;;8882:185;;8990:9;;;:16;;-1:-1:-1;;;;;8922:27:78;;;;;;:19;;;;:27;;;;;;;:41;;:98;;-1:-1:-1;;8922:98:78;;;;;;;;;;;;9034:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9034:22:78;;;;;;8882:185;8648:425;;8599:474;:::o;9356:1084::-;-1:-1:-1;;;;;9594:27:78;;9490:25;9594:27;;;-1:-1:-1;;;;;;;;;;;9594:27:78;;;;;:44;-1:-1:-1;;;;;;;;;;;736:66:78;9905:21;;;;9901:271;;-1:-1:-1;;;;;9961:27:78;;9942:16;9961:27;;;:19;;;:27;;;;;:40;;9942:16;;9961:40;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10084:29:78;;;;;;;;;;;;:41;9961:40;;-1:-1:-1;;;;10084:41:78;;;;10040:85;;;;;;10015:146;;;;-1:-1:-1;;;10015:146:78;;13262:2:87;10015:146:78;;;13244:21:87;13301:1;13281:18;;;13274:29;-1:-1:-1;;;13319:18:87;;;13312:32;13361:18;;10015:146:78;13060:325:87;10015:146:78;9928:244;9901:271;10214:156;;;;;;;;-1:-1:-1;;;;;10214:156:78;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10182:29:78;;-1:-1:-1;10182:29:78;;;;;;;;;:188;;;;;;;;;;-1:-1:-1;;;;;;10182:188:78;;;;;;;-1:-1:-1;;;10182:188:78;;;;;;;;;-1:-1:-1;;;;10182:188:78;-1:-1:-1;;;10182:188:78;;;;;;;;;;;;;10380:27;;;-1:-1:-1;10380:19:78;;;:27;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;10182:188;10380:53;;;;;;;;;;;;;;;;;;9356:1084::o;10581:1402::-;-1:-1:-1;;;;;;10841:42:78;;10661:25;10841:42;;;-1:-1:-1;;;;;;;;;;;10841:42:78;;;;;;;;:72;-1:-1:-1;;;;;10954:40:78;;;;-1:-1:-1;;;;;;;;;;;10954:40:78;;;;;:83;736:66;;-1:-1:-1;;;10841:72:78;;;;;;10954:87;;11040:1;;10954:87;:::i;:::-;10923:118;;11186:20;11166:16;:40;11162:417;;-1:-1:-1;;;;;11244:27:78;;11222:19;11244:27;;;:19;;;:27;;;;;:89;;11299:20;;11244:89;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;11348:27:78;;;;:19;;;:27;;;;;;;:85;;11244:89;;;;;;;;;;;;;;-1:-1:-1;11244:89:78;;11348:27;11403:16;;11348:85;;;;;;:::i;:::-;;;;;;;;;;;;;:100;;;:85;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11462:32:78;;;;;;;;;;;;:106;;-1:-1:-1;;;;11462:106:78;-1:-1:-1;;;11462:106:78;;;;;;;11162:417;-1:-1:-1;;;;;11645:27:78;;;;;;:19;;;:27;;;;;:43;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;11645:43:78;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11762:29:78;;;;;;;;;;11755:36;;-1:-1:-1;;;;;;11755:36:78;;;11905:25;;;11901:76;;-1:-1:-1;;;;;12368:27:78;;12199:25;12368:27;;;-1:-1:-1;;;;;;;;;;;12368:27:78;;;;;:19;:41;;;;12447:9;:16;11946:20;;11959:6;;-1:-1:-1;;;;;;;;;;;736:66:78;12368:41;;;12447:20;;12368:19;12447:20;:::i;:::-;12419:48;;12603:17;12586:13;:34;12582:276;;12636:17;12656:2;:9;;12666:17;12656:28;;;;;;;;:::i;:::-;;;;;;;;;;;12699:9;;;:24;;-1:-1:-1;;;;;12656:28:78;;;;-1:-1:-1;12656:28:78;;12709:13;;12699:24;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;-1:-1:-1;;;;;;12699:36:78;-1:-1:-1;;;;;12699:36:78;;;;;;12749:30;;;;;;-1:-1:-1;12749:19:78;;;:30;;;;;;:44;:98;;-1:-1:-1;;12749:98:78;;;;;;;12582:276;12921:2;:9;;:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;12921:15:78;;;;;-1:-1:-1;;;;;;12921:15:78;;;;;;-1:-1:-1;;;;12143:800:78:o;14:127:87:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:87;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:::-;476:2;470:9;518:4;506:17;;-1:-1:-1;;;;;538:34:87;;574:22;;;535:62;532:88;;;600:18;;:::i;662:275::-;733:2;727:9;798:2;779:13;;-1:-1:-1;;775:27:87;763:40;;-1:-1:-1;;;;;818:34:87;;854:22;;;815:62;812:88;;;880:18;;:::i;:::-;916:2;909:22;662:275;;-1:-1:-1;662:275:87:o;942:191::-;1010:4;-1:-1:-1;;;;;1032:30:87;;1029:56;;;1065:18;;:::i;:::-;-1:-1:-1;1110:1:87;1106:14;1122:4;1102:25;;942:191::o;1138:177::-;1217:13;;-1:-1:-1;;;;;1259:31:87;;1249:42;;1239:70;;1305:1;1302;1295:12;1239:70;1138:177;;;:::o;1320:851::-;1384:5;1437:3;1430:4;1422:6;1418:17;1414:27;1404:55;;1455:1;1452;1445:12;1404:55;1484:6;1478:13;1510:4;1534:68;1550:51;1598:2;1550:51;:::i;:::-;1534:68;:::i;:::-;1636:15;;;1722:1;1718:10;;;;1706:23;;1702:32;;;1667:12;;;;1746:15;;;1743:35;;;1774:1;1771;1764:12;1743:35;1810:2;1802:6;1798:15;1822:320;1838:6;1833:3;1830:15;1822:320;;;1905:10;;-1:-1:-1;;;;;;1948:32:87;;1938:43;;1928:141;;2023:1;2052:2;2048;2041:14;1928:141;2082:18;;2120:12;;;;1855;;1822:320;;;-1:-1:-1;2160:5:87;1320:851;-1:-1:-1;;;;;;1320:851:87:o;2176:250::-;2261:1;2271:113;2285:6;2282:1;2279:13;2271:113;;;2361:11;;;2355:18;2342:11;;;2335:39;2307:2;2300:10;2271:113;;;-1:-1:-1;;2418:1:87;2400:16;;2393:27;2176:250::o;2431:509::-;2484:5;2537:3;2530:4;2522:6;2518:17;2514:27;2504:55;;2555:1;2552;2545:12;2504:55;2578:13;;-1:-1:-1;;;;;2603:26:87;;2600:52;;;2632:18;;:::i;:::-;2676:55;2719:2;2700:13;;-1:-1:-1;;2696:27:87;2725:4;2692:38;2676:55;:::i;:::-;2756:2;2747:7;2740:19;2802:3;2795:4;2790:2;2782:6;2778:15;2774:26;2771:35;2768:55;;;2819:1;2816;2809:12;2768:55;2832:77;2906:2;2899:4;2890:7;2886:18;2879:4;2871:6;2867:17;2832:77;:::i;:::-;2927:7;2431:509;-1:-1:-1;;;;2431:509:87:o;2945:2586::-;3048:6;3079:2;3122;3110:9;3101:7;3097:23;3093:32;3090:52;;;3138:1;3135;3128:12;3090:52;3165:16;;-1:-1:-1;;;;;3230:14:87;;;3227:34;;;3257:1;3254;3247:12;3227:34;3280:22;;;;3336:4;3318:16;;;3314:27;3311:47;;;3354:1;3351;3344:12;3311:47;3380:22;;:::i;:::-;3433:2;3427:9;3461:2;3451:8;3448:16;3445:36;;;3477:1;3474;3467:12;3445:36;3500:17;;3548:4;3540:13;;3536:27;-1:-1:-1;3526:55:87;;3577:1;3574;3567:12;3526:55;3606:2;3600:9;3629:68;3645:51;3693:2;3645:51;:::i;3629:68::-;3731:15;;;3813:1;3809:10;;;;3801:19;;3797:28;;;3762:12;;;;3837:19;;;3834:39;;;3869:1;3866;3859:12;3834:39;3901:2;3897;3893:11;3913:1308;3929:6;3924:3;3921:15;3913:1308;;;4008:3;4002:10;4044:2;4031:11;4028:19;4025:39;;;4060:1;4057;4050:12;4025:39;4087:20;;4159:4;4131:16;;;-1:-1:-1;;4127:30:87;4123:41;4120:131;;;4205:1;4234:2;4230;4223:14;4120:131;4279:22;;:::i;:::-;4330:42;4368:2;4364;4360:11;4330:42;:::i;:::-;4321:7;4314:59;4396:2;4440;4436;4432:11;4426:18;4479:1;4470:7;4467:14;4457:112;;4523:1;4552:2;4548;4541:14;4457:112;4589:16;;;4582:33;4657:4;4649:13;;4643:20;4705:15;;4698:23;4686:36;;4676:137;;4765:1;4795:3;4790;4783:16;4676:137;4833:16;;;4826:33;4902:4;4894:13;;4888:20;4924:16;;;4921:109;;;4982:1;5012:3;5007;5000:16;4921:109;5070:75;5137:7;5132:2;5121:8;5117:2;5113:17;5109:26;5070:75;:::i;:::-;5063:4;5050:18;;5043:103;-1:-1:-1;5159:20:87;;-1:-1:-1;5199:12:87;;;;3946;;3913:1308;;;-1:-1:-1;5230:20:87;;-1:-1:-1;5282:42:87;;-1:-1:-1;;5312:11:87;;;5282:42;:::i;:::-;5277:2;5270:5;5266:14;5259:66;5364:2;5360;5356:11;5350:18;5334:34;;5393:2;5383:8;5380:16;5377:36;;;5409:1;5406;5399:12;5377:36;5445:55;5492:7;5481:8;5477:2;5473:17;5445:55;:::i;:::-;5440:2;5429:14;;5422:79;5433:5;2945:2586;-1:-1:-1;;;;;;2945:2586:87:o;5536:127::-;5597:10;5592:3;5588:20;5585:1;5578:31;5628:4;5625:1;5618:15;5652:4;5649:1;5642:15;5997:127;6058:10;6053:3;6049:20;6046:1;6039:31;6089:4;6086:1;6079:15;6113:4;6110:1;6103:15;6458:127;6519:10;6514:3;6510:20;6507:1;6500:31;6550:4;6547:1;6540:15;6574:4;6571:1;6564:15;6590:135;6629:3;6650:17;;;6647:43;;6670:18;;:::i;:::-;-1:-1:-1;6717:1:87;6706:13;;6590:135::o;6839:270::-;6880:3;6918:5;6912:12;6945:6;6940:3;6933:19;6961:76;7030:6;7023:4;7018:3;7014:14;7007:4;7000:5;6996:16;6961:76;:::i;:::-;7091:2;7070:15;-1:-1:-1;;7066:29:87;7057:39;;;;7098:4;7053:50;;6839:270;-1:-1:-1;;6839:270:87:o;7114:2165::-;7384:4;7413:2;7453;7442:9;7438:18;7483:2;7472:9;7465:21;7506:6;7541;7535:13;7572:6;7564;7557:22;7598:3;7588:13;;7632:2;7621:9;7617:18;7610:25;;7694:2;7684:6;7681:1;7677:14;7666:9;7662:30;7658:39;7716:4;7755:2;7747:6;7743:15;7776:1;7786:1322;7800:6;7797:1;7794:13;7786:1322;;;7865:22;;;-1:-1:-1;;7861:37:87;7849:50;;7922:13;;8009:9;;-1:-1:-1;;;;;8005:35:87;7990:51;;8080:11;;;8074:18;7962:15;;;;8132:1;8115:19;;8105:170;;8185:10;8180:3;8176:20;8173:1;8166:31;8224:4;8221:1;8214:15;8256:4;8253:1;8246:15;8105:170;8295:15;;;8288:37;8348:4;8409:11;;;8403:18;8396:26;8389:34;8372:15;;;8365:59;8465:11;;;8459:18;8497:15;;;8490:27;;;8578:21;;8612:24;;;;8703:23;;;-1:-1:-1;;8670:3:87;8658:16;;;8764:236;8780:8;8775:3;8772:17;8764:236;;;8861:15;;-1:-1:-1;;;;;;8857:42:87;8843:57;;8969:17;;;;8808:1;8799:11;;;;;8926:14;;;;8764:236;;;-1:-1:-1;9086:12:87;;;;9023:5;-1:-1:-1;;;9051:15:87;;;;7822:1;7815:9;7786:1322;;;-1:-1:-1;;;;;;;6796:31:87;;9144:18;;;6784:44;9201:22;;;9194:4;9179:20;;9172:52;9241:32;9205:6;9258;9241:32;:::i;:::-;9233:40;7114:2165;-1:-1:-1;;;;;;;;;;7114:2165:87:o;11589:287::-;11718:3;11756:6;11750:13;11772:66;11831:6;11826:3;11819:4;11811:6;11807:17;11772:66;:::i;:::-;11854:16;;;;;11589:287;-1:-1:-1;;11589:287:87:o;12540:184::-;12610:6;12663:2;12651:9;12642:7;12638:23;12634:32;12631:52;;;12679:1;12676;12669:12;12631:52;-1:-1:-1;12702:16:87;;12540:184;-1:-1:-1;12540:184:87:o;13390:128::-;13457:9;;;13478:11;;;13475:37;;;13492:18;;:::i;:::-;13390:128;;;;:::o;13523:127::-;13584:10;13579:3;13575:20;13572:1;13565:31;13615:4;13612:1;13605:15;13639:4;13636:1;13629:15;13523:127;169:2418:49;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080516020610fce833981519152600436101580610021575036155b6100575760405162461bcd60e51b8152602060048201526002602482015261155d60f21b60448201526064015b60405180910390fd5b600080356001600160e01b03191681526020828152604091829020825160608101845290546001600160a01b038116808352600160a01b820461ffff1693830193909352600160b01b900460ff16151592810192909252806100df5760405162461bcd60e51b81526020600482015260016024820152602360f91b604482015260640161004e565b600383015460ff1615806100f557508160400151155b6101265760405162461bcd60e51b8152602060048201526002602482015261713160f01b604482015260640161004e565b60405136600082376000803683855af43d806000843e818015610147578184f35b8184fd5b805160208201516040830151825160005b818110156102d257600085828151811061017857610178610d94565b6020026020010151602001519050600086838151811061019a5761019a610d94565b602002602001015160000151905060008784815181106101bc576101bc610d94565b602002602001015160400151905060008885815181106101de576101de610d94565b602002602001015160600151905060008151116102215760405162461bcd60e51b81526020600482015260016024820152602160f91b604482015260640161004e565b600084600281111561023557610235610daa565b0361024a5761024583828461031f565b6102bd565b600184600281111561025e5761025e610daa565b0361026e5761024583828461044e565b600284600281111561028257610282610daa565b03610291576102458382610580565b60405162461bcd60e51b81526020600482015260016024820152604360f81b604482015260640161004e565b50505050806102cb90610dd6565b905061015c565b506102dd83836106a8565b7f87b829356b3403d36217eff1f66ee48eacd0a69015153aba4f0de29fe5340c3084848460405161031093929190610e3f565b60405180910390a15050505050565b600080516020610fce8339815191526001600160a01b0384166103685760405162461bcd60e51b81526020600482015260016024820152604760f81b604482015260640161004e565b61037184610825565b825160005b8181101561044657600085828151811061039257610392610d94565b6020908102919091018101516001600160e01b031981166000908152868352604090819020815160608101835290546001600160a01b038116808352600160a01b820461ffff1695830195909552600160b01b900460ff1615159181019190915290925090156104285760405162461bcd60e51b81526020600482015260016024820152602560f91b604482015260640161004e565b6104338883886108c3565b50508061043f90610dd6565b9050610376565b505050505050565b600080516020610fce8339815191526001600160a01b0384166104975760405162461bcd60e51b81526020600482015260016024820152604b60f81b604482015260640161004e565b825160005b818110156104465760008582815181106104b8576104b8610d94565b6020908102919091018101516001600160e01b031981166000908152868352604090819020815160608101835290546001600160a01b038116808352600160a01b820461ffff1695830195909552600160b01b900460ff161515918101919091529092509061054d5760405162461bcd60e51b81526020600482015260016024820152601360fa1b604482015260640161004e565b80516105599083610a76565b61056288610825565b61056d8883886108c3565b50508061057990610dd6565b905061049c565b600080516020610fce8339815191526001600160a01b038316156105cb5760405162461bcd60e51b8152602060048201526002602482015261613160f01b604482015260640161004e565b815160005b818110156106a15760008482815181106105ec576105ec610d94565b6020908102919091018101516001600160e01b031981166000908152868352604090819020815160608101835290546001600160a01b038116808352600160a01b820461ffff1695830195909552600160b01b900460ff16151591810191909152909250906106825760405162461bcd60e51b8152602060048201526002602482015261309960f11b604482015260640161004e565b805161068e9083610a76565b50508061069a90610dd6565b90506105d0565b5050505050565b6001600160a01b0382166106ed578051156106e95760405162461bcd60e51b81526020600482015260016024820152600960fb1b604482015260640161004e565b5050565b600080836001600160a01b0316836040516107089190610f49565b600060405180830381855af49150503d8060008114610743576040519150601f19603f3d011682016040523d82523d6000602084013e610748565b606091505b50915091508161077e5760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161004e565b80516020146107b45760405162461bcd60e51b815260206004820152600260248201526106c760f41b604482015260640161004e565b7f33774e659306e47509050e97cb651e731180a42d458212294d30751925c551a260001b818060200190518101906107ec9190610f65565b1461081f5760405162461bcd60e51b81526020600482015260036024820152626c703160e81b604482015260640161004e565b50505050565b6001600160a01b0381166000908152600080516020610fae8339815191526020526040812054600080516020610fce833981519152918190036108be576002820180546001600160a01b038516600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b505050565b6001600160a01b0383166000908152600080516020610fae8339815191526020526040902054600080516020610fce8339815191529061ffff8116156109ac576001600160a01b038516600090815260018301602052604081208054829061092d5761092d610d94565b6000918252602080832060088304015460079092166004026101000a90910460e01b6001600160e01b03198116835290859052604090912054909150600160b01b900460ff161515841515146109aa5760405162461bcd60e51b81526020600482015260026024820152614a3160f01b604482015260640161004e565b505b604080516060810182526001600160a01b0396871680825261ffff93841660208084019182529615158385019081526001600160e01b03198916600090815287895285812094518554935192519b166001600160b01b031990931692909217600160a01b91909616029490941760ff60b01b1916600160b01b981515989098029790971790559481526001918201835293842080549182018155845292206008830401805463ffffffff60079094166004026101000a938402191660e09290921c92909202179055565b6001600160e01b031981166000908152600080516020610fce83398151915260208181526040808420546001600160a01b0387168552600080516020610fae8339815191529092528320549192600160a01b90910461ffff1691610adc90600190610f7e565b9050808214610bc8576001600160a01b03851660009081526001840160205260408120805483908110610b1157610b11610d94565b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610b6257610b62610d94565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b03851660009081526001840160205260409020805480610bf157610bf1610f97565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040812080546001600160b81b03191690558190036106a1576001600160a01b0385166000908152600080516020610fae833981519152602052604081206001908101547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d546106a1938993600080516020610fce8339815191529361ffff1692610cbd9190610f7e565b9050808214610d59576000836002018281548110610cdd57610cdd610d94565b6000918252602090912001546002850180546001600160a01b039092169250829185908110610d0e57610d0e610d94565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018581019092526040902001805461ffff191661ffff84161790555b82600201805480610d6c57610d6c610f97565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610de857610de8610dc0565b5060010190565b60005b83811015610e0a578181015183820152602001610df2565b50506000910152565b60008151808452610e2b816020860160208601610def565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610f1957898403607f19018652815180516001600160a01b03168552838101518886019060038110610eae57634e487b7160e01b600052602160045260246000fd5b868601526040828101511515908701529089015189860189905280519182905284019060009060a08701905b80831015610f045783516001600160e01b0319168252928601926001929092019190860190610eda565b50978501979550505090820190600101610e68565b50506001600160a01b038a16908801528681036040880152610f3b8189610e13565b9a9950505050505050505050565b60008251610f5b818460208701610def565b9190910192915050565b600060208284031215610f7757600080fd5b5051919050565b81810381811115610f9157610f91610dc0565b92915050565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ba2646970667358221220c871fabb9397d54c876e738752e9b6db53d95878cd3138f5a43d888cc3af52fc64736f6c63430008110033",
    "sourceMap": "169:2418:49:-:0;;;-1:-1:-1;;;;;;;;;;;1024:1:49;1005:8;:20;;;:44;;-1:-1:-1;1029:8:49;:20;1005:44;997:59;;;;-1:-1:-1;;;997:59:49;;216:2:87;997:59:49;;;198:21:87;255:1;235:18;;;228:29;-1:-1:-1;;;273:18:87;;;266:32;315:18;;997:59:49;;;;;;;;;1110:36;1193:7;;-1:-1:-1;;;;;;1193:7:49;1149:61;;;;;;;;;;;1110:100;;;;;;;;;-1:-1:-1;;;;;1110:100:49;;;;;-1:-1:-1;;;1110:100:49;;;;;;;;;;;-1:-1:-1;;;1110:100:49;;;;;;;;;;;;;;1272:40;;;;-1:-1:-1;;;1272:40:49;;546:2:87;1272:40:49;;;528:21:87;585:1;565:18;;;558:29;-1:-1:-1;;;603:18:87;;;596:31;644:18;;1272:40:49;344:324:87;1272:40:49;1371:23;;;;;;1370:24;;:46;;;1399:5;:17;;;1398:18;1370:46;1362:61;;;;-1:-1:-1;;;1362:61:49;;875:2:87;1362:61:49;;;857:21:87;914:1;894:18;;;887:29;-1:-1:-1;;;932:18:87;;;925:32;974:18;;1362:61:49;673:325:87;1362:61:49;1544:4;1538:11;1699:14;1696:1;1691:3;1678:36;1981:1;1962;1930:14;1909:3;1879:12;1856:5;1826:170;2073:16;2224:4;2221:1;2216:3;2201:28;2294:6;2313:114;;;;2550:4;2545:3;2538:17;2313:114;2408:4;2403:3;2396:17;4437:1221:78;4541:21;;4594:23;;;;4655:24;;;;4715:16;;4511:27;4741:789;4765:15;4761:1;:19;4741:789;;;4801:13;4817:9;4827:1;4817:12;;;;;;;;:::i;:::-;;;;;;;:19;;;4801:35;;4850:13;4866:9;4876:1;4866:12;;;;;;;;:::i;:::-;;;;;;;:18;;;4850:34;;4898:21;4922:9;4932:1;4922:12;;;;;;;;:::i;:::-;;;;;;;:24;;;4898:48;;4960:25;4988:9;4998:1;4988:12;;;;;;;;:::i;:::-;;;;;;;:22;;;4960:50;;5052:1;5033:9;:16;:20;5025:34;;;;-1:-1:-1;;;5025:34:78;;1337:2:87;5025:34:78;;;1319:21:87;1376:1;1356:18;;;1349:29;-1:-1:-1;;;1394:18:87;;;1387:31;1435:18;;5025:34:78;1135:324:87;5025:34:78;5120:10;5110:6;:20;;;;;;;;:::i;:::-;;5106:414;;5150:49;5164:5;5171:9;5182:16;5150:13;:49::i;:::-;5106:414;;;5234:14;5224:6;:24;;;;;;;;:::i;:::-;;5220:300;;5268:53;5286:5;5293:9;5304:16;5268:17;:53::i;5220:300::-;5356:13;5346:6;:23;;;;;;;;:::i;:::-;;5342:178;;5389:34;5406:5;5413:9;5389:16;:34::i;5342:178::-;5462:11;;-1:-1:-1;;;5462:11:78;;1798:2:87;5462:11:78;;;1780:21:87;1837:1;1817:18;;;1810:29;-1:-1:-1;;;1855:18:87;;;1848:31;1896:18;;5462:11:78;1596:324:87;5342:178:78;4787:743;;;;4782:3;;;;:::i;:::-;;;4741:789;;;;5540:48;5562:11;5575:12;5540:21;:48::i;:::-;5603;5614:9;5625:11;5638:12;5603:48;;;;;;;;:::i;:::-;;;;;;;;4501:1157;;;;4437:1221;:::o;5790:803::-;-1:-1:-1;;;;;;;;;;;;;;;;5995:20:78;;5987:34;;;;-1:-1:-1;;;5987:34:78;;5208:2:87;5987:34:78;;;5190:21:87;5247:1;5227:18;;;5220:29;-1:-1:-1;;;5265:18:87;;;5258:31;5306:18;;5987:34:78;5006:324:87;5987:34:78;6150:23;6166:6;6150:15;:23::i;:::-;6210:17;;6184:23;6237:350;6261:15;6257:1;:19;6237:350;;;6297:15;6315:10;6326:1;6315:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6376:28:78;;6342:31;6376:28;;;;;;;;;;;6342:62;;;;;;;;;-1:-1:-1;;;;;6342:62:78;;;;;-1:-1:-1;;;6342:62:78;;;;;;;;;;;-1:-1:-1;;;6342:62:78;;;;;;;;;;;;;6315:13;;-1:-1:-1;6342:62:78;6426:35;6418:49;;;;-1:-1:-1;;;6418:49:78;;5537:2:87;6418:49:78;;;5519:21:87;5576:1;5556:18;;;5549:29;-1:-1:-1;;;5594:18:87;;;5587:31;5635:18;;6418:49:78;5335:324:87;6418:49:78;6524:52;6540:6;6548:8;6558:17;6524:15;:52::i;:::-;6283:304;;6278:3;;;;:::i;:::-;;;6237:350;;;;5919:674;;5790:803;;;:::o;6747:897::-;-1:-1:-1;;;;;;;;;;;;;;;;6956:20:78;;6948:34;;;;-1:-1:-1;;;6948:34:78;;5866:2:87;6948:34:78;;;5848:21:87;5905:1;5885:18;;;5878:29;-1:-1:-1;;;5923:18:87;;;5916:31;5964:18;;6948:34:78;5664:324:87;6948:34:78;7061:17;;7035:23;7088:550;7112:15;7108:1;:19;7088:550;;;7148:15;7166:10;7177:1;7166:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7227:28:78;;7193:31;7227:28;;;;;;;;;;;7193:62;;;;;;;;;-1:-1:-1;;;;;7193:62:78;;;;;-1:-1:-1;;;7193:62:78;;;;;;;;;;;-1:-1:-1;;;7193:62:78;;;;;;;;;;;;;7166:13;;-1:-1:-1;7193:62:78;7269:49;;;;-1:-1:-1;;;7269:49:78;;6195:2:87;7269:49:78;;;6177:21:87;6234:1;6214:18;;;6207:29;-1:-1:-1;;;6252:18:87;;;6245:31;6293:18;;7269:49:78;5993:324:87;7269:49:78;7411:21;;7392:51;;7434:8;7392:18;:51::i;:::-;7538:23;7554:6;7538:15;:23::i;:::-;7575:52;7591:6;7599:8;7609:17;7575:15;:52::i;:::-;7134:504;;7129:3;;;;:::i;:::-;;;7088:550;;7780:638;-1:-1:-1;;;;;;;;;;;;;;;;7946:20:78;;;7938:35;;;;-1:-1:-1;;;7938:35:78;;6524:2:87;7938:35:78;;;6506:21:87;6563:1;6543:18;;;6536:29;-1:-1:-1;;;6581:18:87;;;6574:32;6623:18;;7938:35:78;6322:325:87;7938:35:78;8040:17;;8014:23;8067:345;8091:15;8087:1;:19;8067:345;;;8127:15;8145:10;8156:1;8145:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;8206:28:78;;8172:31;8206:28;;;;;;;;;;;8172:62;;;;;;;;;-1:-1:-1;;;;;8172:62:78;;;;;-1:-1:-1;;;8172:62:78;;;;;;;;;;;-1:-1:-1;;;8172:62:78;;;;;;;;;;;;;8145:13;;-1:-1:-1;8172:62:78;8248:50;;;;-1:-1:-1;;;8248:50:78;;6854:2:87;8248:50:78;;;6836:21:87;6893:1;6873:18;;;6866:29;-1:-1:-1;;;6911:18:87;;;6904:32;6953:18;;8248:50:78;6652:325:87;8248:50:78;8369:21;;8350:51;;8392:8;8350:18;:51::i;:::-;8113:299;;8108:3;;;;:::i;:::-;;;8067:345;;;;7870:548;;7780:638;;:::o;13141:850::-;-1:-1:-1;;;;;13245:19:78;;13241:744;;13288:16;;:21;13280:35;;;;-1:-1:-1;;;13280:35:78;;7184:2:87;13280:35:78;;;7166:21:87;7223:1;7203:18;;;7196:29;-1:-1:-1;;;7241:18:87;;;7234:31;7282:18;;13280:35:78;6982:324:87;13280:35:78;13141:850;;:::o;13241:744::-;13487:12;13501:17;13522:5;-1:-1:-1;;;;;13522:18:78;13541:9;13522:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13486:65;;;;13573:7;13565:21;;;;-1:-1:-1;;;13565:21:78;;7805:2:87;13565:21:78;;;7787::87;7844:1;7824:18;;;7817:29;-1:-1:-1;;;7862:18:87;;;7855:31;7903:18;;13565:21:78;7603:324:87;13565:21:78;13790:4;:11;13805:2;13790:17;13782:32;;;;-1:-1:-1;;;13782:32:78;;8134:2:87;13782:32:78;;;8116:21:87;8173:1;8153:18;;;8146:29;-1:-1:-1;;;8191:18:87;;;8184:32;8233:18;;13782:32:78;7932:325:87;13782:32:78;509:66;13904:33;;13864:4;13853:27;;;;;;;;;;;;:::i;:::-;:84;13828:146;;;;-1:-1:-1;;;13828:146:78;;8653:2:87;13828:146:78;;;8635:21:87;8692:1;8672:18;;;8665:29;-1:-1:-1;;;8710:18:87;;;8703:33;8753:18;;13828:146:78;8451:326:87;13828:146:78;13371:614;;13141:850;;:::o;8599:474::-;-1:-1:-1;;;;;8742:27:78;;8658:25;8742:27;;;-1:-1:-1;;;;;;;;;;;8742:27:78;;;;;:44;-1:-1:-1;;;;;;;;;;;736:66:78;8886:20;;;8882:185;;8990:9;;;:16;;-1:-1:-1;;;;;8922:27:78;;;;;;:19;;;;:27;;;;;;;:41;;:98;;-1:-1:-1;;8922:98:78;;;;;;;;;;;;9034:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9034:22:78;;;;;;8882:185;8648:425;;8599:474;:::o;9356:1084::-;-1:-1:-1;;;;;9594:27:78;;9490:25;9594:27;;;-1:-1:-1;;;;;;;;;;;9594:27:78;;;;;:44;-1:-1:-1;;;;;;;;;;;736:66:78;9905:21;;;;9901:271;;-1:-1:-1;;;;;9961:27:78;;9942:16;9961:27;;;:19;;;:27;;;;;:40;;9942:16;;9961:40;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10084:29:78;;;;;;;;;;;;:41;9961:40;;-1:-1:-1;;;;10084:41:78;;;;10040:85;;;;;;10015:146;;;;-1:-1:-1;;;10015:146:78;;8984:2:87;10015:146:78;;;8966:21:87;9023:1;9003:18;;;8996:29;-1:-1:-1;;;9041:18:87;;;9034:32;9083:18;;10015:146:78;8782:325:87;10015:146:78;9928:244;9901:271;10214:156;;;;;;;;-1:-1:-1;;;;;10214:156:78;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10182:29:78;;-1:-1:-1;10182:29:78;;;;;;;;;:188;;;;;;;;;;-1:-1:-1;;;;;;10182:188:78;;;;;;;-1:-1:-1;;;10182:188:78;;;;;;;;;-1:-1:-1;;;;10182:188:78;-1:-1:-1;;;10182:188:78;;;;;;;;;;;;;10380:27;;;-1:-1:-1;10380:19:78;;;:27;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;10182:188;10380:53;;;;;;;;;;;;;;;;;;9356:1084::o;10581:1402::-;-1:-1:-1;;;;;;10841:42:78;;10661:25;10841:42;;;-1:-1:-1;;;;;;;;;;;10841:42:78;;;;;;;;:72;-1:-1:-1;;;;;10954:40:78;;;;-1:-1:-1;;;;;;;;;;;10954:40:78;;;;;:83;736:66;;-1:-1:-1;;;10841:72:78;;;;;;10954:87;;11040:1;;10954:87;:::i;:::-;10923:118;;11186:20;11166:16;:40;11162:417;;-1:-1:-1;;;;;11244:27:78;;11222:19;11244:27;;;:19;;;:27;;;;;:89;;11299:20;;11244:89;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;11348:27:78;;;;:19;;;:27;;;;;;;:85;;11244:89;;;;;;;;;;;;;;-1:-1:-1;11244:89:78;;11348:27;11403:16;;11348:85;;;;;;:::i;:::-;;;;;;;;;;;;;:100;;;:85;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11462:32:78;;;;;;;;;;;;:106;;-1:-1:-1;;;;11462:106:78;-1:-1:-1;;;11462:106:78;;;;;;;11162:417;-1:-1:-1;;;;;11645:27:78;;;;;;:19;;;:27;;;;;:43;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;11645:43:78;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11762:29:78;;;;;;;;;;11755:36;;-1:-1:-1;;;;;;11755:36:78;;;11905:25;;;11901:76;;-1:-1:-1;;;;;12368:27:78;;12199:25;12368:27;;;-1:-1:-1;;;;;;;;;;;12368:27:78;;;;;:19;:41;;;;12447:9;:16;11946:20;;11959:6;;-1:-1:-1;;;;;;;;;;;736:66:78;12368:41;;;12447:20;;12368:19;12447:20;:::i;:::-;12419:48;;12603:17;12586:13;:34;12582:276;;12636:17;12656:2;:9;;12666:17;12656:28;;;;;;;;:::i;:::-;;;;;;;;;;;12699:9;;;:24;;-1:-1:-1;;;;;12656:28:78;;;;-1:-1:-1;12656:28:78;;12709:13;;12699:24;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;-1:-1:-1;;;;;;12699:36:78;-1:-1:-1;;;;;12699:36:78;;;;;;12749:30;;;;;;-1:-1:-1;12749:19:78;;;:30;;;;;;:44;:98;;-1:-1:-1;;12749:98:78;;;;;;;12582:276;12921:2;:9;;:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;12921:15:78;;;;;-1:-1:-1;;;;;;12921:15:78;;;;;;-1:-1:-1;;;;12143:800:78:o;1003:127:87:-;1064:10;1059:3;1055:20;1052:1;1045:31;1095:4;1092:1;1085:15;1119:4;1116:1;1109:15;1464:127;1525:10;1520:3;1516:20;1513:1;1506:31;1556:4;1553:1;1546:15;1580:4;1577:1;1570:15;1925:127;1986:10;1981:3;1977:20;1974:1;1967:31;2017:4;2014:1;2007:15;2041:4;2038:1;2031:15;2057:135;2096:3;2117:17;;;2114:43;;2137:18;;:::i;:::-;-1:-1:-1;2184:1:87;2173:13;;2057:135::o;2306:250::-;2391:1;2401:113;2415:6;2412:1;2409:13;2401:113;;;2491:11;;;2485:18;2472:11;;;2465:39;2437:2;2430:10;2401:113;;;-1:-1:-1;;2548:1:87;2530:16;;2523:27;2306:250::o;2561:270::-;2602:3;2640:5;2634:12;2667:6;2662:3;2655:19;2683:76;2752:6;2745:4;2740:3;2736:14;2729:4;2722:5;2718:16;2683:76;:::i;:::-;2813:2;2792:15;-1:-1:-1;;2788:29:87;2779:39;;;;2820:4;2775:50;;2561:270;-1:-1:-1;;2561:270:87:o;2836:2165::-;3106:4;3135:2;3175;3164:9;3160:18;3205:2;3194:9;3187:21;3228:6;3263;3257:13;3294:6;3286;3279:22;3320:3;3310:13;;3354:2;3343:9;3339:18;3332:25;;3416:2;3406:6;3403:1;3399:14;3388:9;3384:30;3380:39;3438:4;3477:2;3469:6;3465:15;3498:1;3508:1322;3522:6;3519:1;3516:13;3508:1322;;;3587:22;;;-1:-1:-1;;3583:37:87;3571:50;;3644:13;;3731:9;;-1:-1:-1;;;;;3727:35:87;3712:51;;3802:11;;;3796:18;3684:15;;;;3854:1;3837:19;;3827:170;;3907:10;3902:3;3898:20;3895:1;3888:31;3946:4;3943:1;3936:15;3978:4;3975:1;3968:15;3827:170;4017:15;;;4010:37;4070:4;4131:11;;;4125:18;4118:26;4111:34;4094:15;;;4087:59;4187:11;;;4181:18;4219:15;;;4212:27;;;4300:21;;4334:24;;;;4425:23;;;-1:-1:-1;;4392:3:87;4380:16;;;4486:236;4502:8;4497:3;4494:17;4486:236;;;4583:15;;-1:-1:-1;;;;;;4579:42:87;4565:57;;4691:17;;;;4530:1;4521:11;;;;;4648:14;;;;4486:236;;;-1:-1:-1;4808:12:87;;;;4745:5;-1:-1:-1;;;4773:15:87;;;;3544:1;3537:9;3508:1322;;;-1:-1:-1;;;;;;;2263:31:87;;4866:18;;;2251:44;4923:22;;;4916:4;4901:20;;4894:52;4963:32;4927:6;4980;4963:32;:::i;:::-;4955:40;2836:2165;-1:-1:-1;;;;;;;;;;2836:2165:87:o;7311:287::-;7440:3;7478:6;7472:13;7494:66;7553:6;7548:3;7541:4;7533:6;7529:17;7494:66;:::i;:::-;7576:16;;;;;7311:287;-1:-1:-1;;7311:287:87:o;8262:184::-;8332:6;8385:2;8373:9;8364:7;8360:23;8356:32;8353:52;;;8401:1;8398;8391:12;8353:52;-1:-1:-1;8424:16:87;;8262:184;-1:-1:-1;8262:184:87:o;9112:128::-;9179:9;;;9200:11;;;9197:37;;;9214:18;;:::i;:::-;9112:128;;;;:::o;9245:127::-;9306:10;9301:3;9297:20;9294:1;9287:31;9337:4;9334:1;9327:15;9361:4;9358:1;9351:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"},{\"internalType\":\"enum Diamond.Action\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isFreezable\",\"type\":\"bool\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct Diamond.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"initAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCalldata\",\"type\":\"bytes\"}],\"internalType\":\"struct Diamond.DiamondCutData\",\"name\":\"_diamondCut\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Matter Labs\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Diamond Proxy Cotract (EIP-2535)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DiamondProxy.sol\":\"DiamondProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":decimath/=lib/decimath/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\"]},\"sources\":{\"src/DiamondProxy.sol\":{\"keccak256\":\"0x404391f3f0ad80afcb1552511dccfcdedd70eaa7dcaa5da27a2f995b619be66b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://539db8c7fc7a34c7e95a11b21b61040d95de8bc94396287d564fbfcfefddeb87\",\"dweb:/ipfs/QmcxeNBDvoZH2aewL9WNPxChhU6c9vdgAwz4LtU7X7L2bJ\"]},\"src/lib/Diamond.sol\":{\"keccak256\":\"0xded900704652c2ba02649cea01c416dc16c494bfc083c55485844471095510a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2a068d692367c3ba5bd17a97b363a75540b7bdb7fbc2821c17c71ba3ea04fea\",\"dweb:/ipfs/QmS3f7pgAQY7yjNNr3CePSkVh1CV4kR16jycQ3sRR6GGPo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct Diamond.DiamondCutData",
              "name": "_diamondCut",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Diamond.FacetCut[]",
                  "name": "facetCuts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facet",
                      "type": "address"
                    },
                    {
                      "internalType": "enum Diamond.Action",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "isFreezable",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "selectors",
                      "type": "bytes4[]"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "initAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initCalldata",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":decimath/=lib/decimath/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/DiamondProxy.sol": "DiamondProxy"
      },
      "libraries": {}
    },
    "sources": {
      "src/DiamondProxy.sol": {
        "keccak256": "0x404391f3f0ad80afcb1552511dccfcdedd70eaa7dcaa5da27a2f995b619be66b",
        "urls": [
          "bzz-raw://539db8c7fc7a34c7e95a11b21b61040d95de8bc94396287d564fbfcfefddeb87",
          "dweb:/ipfs/QmcxeNBDvoZH2aewL9WNPxChhU6c9vdgAwz4LtU7X7L2bJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/Diamond.sol": {
        "keccak256": "0xded900704652c2ba02649cea01c416dc16c494bfc083c55485844471095510a5",
        "urls": [
          "bzz-raw://f2a068d692367c3ba5bd17a97b363a75540b7bdb7fbc2821c17c71ba3ea04fea",
          "dweb:/ipfs/QmS3f7pgAQY7yjNNr3CePSkVh1CV4kR16jycQ3sRR6GGPo"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/DiamondProxy.sol",
    "id": 28647,
    "exportedSymbols": {
      "Diamond": [
        41380
      ],
      "DiamondProxy": [
        28646
      ]
    },
    "nodeType": "SourceUnit",
    "src": "47:2541:49",
    "nodes": [
      {
        "id": 28563,
        "nodeType": "PragmaDirective",
        "src": "47:23:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28564,
        "nodeType": "ImportDirective",
        "src": "72:27:49",
        "nodes": [],
        "absolutePath": "src/lib/Diamond.sol",
        "file": "./lib/Diamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28647,
        "sourceUnit": 41381,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28646,
        "nodeType": "ContractDefinition",
        "src": "169:2418:49",
        "nodes": [
          {
            "id": 28578,
            "nodeType": "FunctionDefinition",
            "src": "197:295:49",
            "nodes": [],
            "body": {
              "id": 28577,
              "nodeType": "Block",
              "src": "252:240:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28574,
                        "name": "_diamondCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28568,
                        "src": "473:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondCutData_$40637_memory_ptr",
                          "typeString": "struct Diamond.DiamondCutData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DiamondCutData_$40637_memory_ptr",
                          "typeString": "struct Diamond.DiamondCutData memory"
                        }
                      ],
                      "expression": {
                        "id": 28571,
                        "name": "Diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41380,
                        "src": "454:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Diamond_$41380_$",
                          "typeString": "type(library Diamond)"
                        }
                      },
                      "id": 28573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "462:10:49",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40788,
                      "src": "454:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DiamondCutData_$40637_memory_ptr_$returns$__$",
                        "typeString": "function (struct Diamond.DiamondCutData memory)"
                      }
                    },
                    "id": 28575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:31:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28576,
                  "nodeType": "ExpressionStatement",
                  "src": "454:31:49"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28568,
                  "mutability": "mutable",
                  "name": "_diamondCut",
                  "nameLocation": "239:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 28578,
                  "src": "209:41:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DiamondCutData_$40637_memory_ptr",
                    "typeString": "struct Diamond.DiamondCutData"
                  },
                  "typeName": {
                    "id": 28567,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28566,
                      "name": "Diamond.DiamondCutData",
                      "nameLocations": [
                        "209:7:49",
                        "217:14:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40637,
                      "src": "209:22:49"
                    },
                    "referencedDeclaration": 40637,
                    "src": "209:22:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondCutData_$40637_storage_ptr",
                      "typeString": "struct Diamond.DiamondCutData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "208:43:49"
            },
            "returnParameters": {
              "id": 28570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:0:49"
            },
            "scope": 28646,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28645,
            "nodeType": "FunctionDefinition",
            "src": "640:1945:49",
            "nodes": [],
            "body": {
              "id": 28644,
              "nodeType": "Block",
              "src": "668:1917:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28586,
                      "mutability": "mutable",
                      "name": "diamondStorage",
                      "nameLocation": "709:14:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 28644,
                      "src": "678:45:49",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$40617_storage_ptr",
                        "typeString": "struct Diamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 28585,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 28584,
                          "name": "Diamond.DiamondStorage",
                          "nameLocations": [
                            "678:7:49",
                            "686:14:49"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40617,
                          "src": "678:22:49"
                        },
                        "referencedDeclaration": 40617,
                        "src": "678:22:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$40617_storage_ptr",
                          "typeString": "struct Diamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28590,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28587,
                        "name": "Diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41380,
                        "src": "726:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Diamond_$41380_$",
                          "typeString": "type(library Diamond)"
                        }
                      },
                      "id": 28588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "747:17:49",
                      "memberName": "getDiamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40654,
                      "src": "726:38:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$40617_storage_ptr_$",
                        "typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 28589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:40:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$40617_storage_ptr",
                      "typeString": "struct Diamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "678:88:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 28602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 28596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 28592,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1005:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 28593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1009:4:49",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "1005:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 28594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1014:6:49",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1005:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 28595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1024:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1005:20:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 28601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 28597,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1029:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 28598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1033:4:49",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "1029:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 28599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1038:6:49",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1029:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 28600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1048:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1029:20:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1005:44:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5574",
                        "id": 28603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1051:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40ee2c9cddcf7d83be93a490845aa6d93928e135b34d4bd318be1106776572fd",
                          "typeString": "literal_string \"Ut\""
                        },
                        "value": "Ut"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40ee2c9cddcf7d83be93a490845aa6d93928e135b34d4bd318be1106776572fd",
                          "typeString": "literal_string \"Ut\""
                        }
                      ],
                      "id": 28591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "997:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "997:59:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28605,
                  "nodeType": "ExpressionStatement",
                  "src": "997:59:49"
                },
                {
                  "assignments": [
                    28610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28610,
                      "mutability": "mutable",
                      "name": "facet",
                      "nameLocation": "1141:5:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 28644,
                      "src": "1110:36:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SelectorToFacet_$40595_memory_ptr",
                        "typeString": "struct Diamond.SelectorToFacet"
                      },
                      "typeName": {
                        "id": 28609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 28608,
                          "name": "Diamond.SelectorToFacet",
                          "nameLocations": [
                            "1110:7:49",
                            "1118:15:49"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40595,
                          "src": "1110:23:49"
                        },
                        "referencedDeclaration": 40595,
                        "src": "1110:23:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SelectorToFacet_$40595_storage_ptr",
                          "typeString": "struct Diamond.SelectorToFacet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28616,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 28611,
                        "name": "diamondStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28586,
                        "src": "1149:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$40617_storage_ptr",
                          "typeString": "struct Diamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 28612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1164:15:49",
                      "memberName": "selectorToFacet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40606,
                      "src": "1149:30:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_SelectorToFacet_$40595_storage_$",
                        "typeString": "mapping(bytes4 => struct Diamond.SelectorToFacet storage ref)"
                      }
                    },
                    "id": 28615,
                    "indexExpression": {
                      "expression": {
                        "id": 28613,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1193:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1197:3:49",
                      "memberName": "sig",
                      "nodeType": "MemberAccess",
                      "src": "1193:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1149:61:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SelectorToFacet_$40595_storage",
                      "typeString": "struct Diamond.SelectorToFacet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:100:49"
                },
                {
                  "assignments": [
                    28618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28618,
                      "mutability": "mutable",
                      "name": "facetAddress",
                      "nameLocation": "1228:12:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 28644,
                      "src": "1220:20:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28617,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1220:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28621,
                  "initialValue": {
                    "expression": {
                      "id": 28619,
                      "name": "facet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28610,
                      "src": "1243:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SelectorToFacet_$40595_memory_ptr",
                        "typeString": "struct Diamond.SelectorToFacet memory"
                      }
                    },
                    "id": 28620,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1249:12:49",
                    "memberName": "facetAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 40590,
                    "src": "1243:18:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1220:41:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28623,
                          "name": "facetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28618,
                          "src": "1280:12:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 28626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1304:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 28625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1296:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1296:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1296:10:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1280:26:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46",
                        "id": 28629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e61d9a3d3848fb2cdd9a2ab61e2f21a10ea431275aed628a0557f9dee697c37a",
                          "typeString": "literal_string \"F\""
                        },
                        "value": "F"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e61d9a3d3848fb2cdd9a2ab61e2f21a10ea431275aed628a0557f9dee697c37a",
                          "typeString": "literal_string \"F\""
                        }
                      ],
                      "id": 28622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1272:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:40:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28631,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:40:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 28639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1370:24:49",
                          "subExpression": {
                            "expression": {
                              "id": 28633,
                              "name": "diamondStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28586,
                              "src": "1371:14:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DiamondStorage_$40617_storage_ptr",
                                "typeString": "struct Diamond.DiamondStorage storage pointer"
                              }
                            },
                            "id": 28634,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1386:8:49",
                            "memberName": "isFrozen",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40616,
                            "src": "1371:23:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 28638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1398:18:49",
                          "subExpression": {
                            "expression": {
                              "id": 28636,
                              "name": "facet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28610,
                              "src": "1399:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SelectorToFacet_$40595_memory_ptr",
                                "typeString": "struct Diamond.SelectorToFacet memory"
                              }
                            },
                            "id": 28637,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1405:11:49",
                            "memberName": "isFreezable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40594,
                            "src": "1399:17:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1370:46:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7131",
                        "id": 28640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8d00316a62a0d195cd21f6e6a94cd80f084162af5a4b596d615bf79ecf19bcf",
                          "typeString": "literal_string \"q1\""
                        },
                        "value": "q1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8d00316a62a0d195cd21f6e6a94cd80f084162af5a4b596d615bf79ecf19bcf",
                          "typeString": "literal_string \"q1\""
                        }
                      ],
                      "id": 28632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1362:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:61:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28642,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:61:49"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1462:1117:49",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1527:22:49",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1544:4:49",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1538:5:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1538:11:49"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "1531:3:49",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1691:3:49"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1696:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1699:12:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1699:14:49"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1678:12:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1678:36:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1678:36:49"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1812:184:49",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1856:3:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1856:5:49"
                            },
                            {
                              "name": "facetAddress",
                              "nodeType": "YulIdentifier",
                              "src": "1879:12:49"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1909:3:49"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1930:12:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1930:14:49"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1962:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1981:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1826:12:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1826:170:49"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "1816:6:49",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2061:28:49",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "2073:14:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2073:16:49"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2065:4:49",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "2216:3:49"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2221:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "2224:4:49"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2201:14:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2201:28:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2201:28:49"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2320:107:49",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2403:3:49"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "2408:4:49"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2396:6:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2396:17:49"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2396:17:49"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2313:114:49",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2318:1:49",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2448:121:49",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2545:3:49"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "2550:4:49"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2538:6:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2538:17:49"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2538:17:49"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2440:129:49",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2294:6:49"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2287:282:49"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 28618,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1879:12:49",
                      "valueSize": 1
                    }
                  ],
                  "id": 28643,
                  "nodeType": "InlineAssembly",
                  "src": "1453:1126:49"
                }
              ]
            },
            "documentation": {
              "id": 28579,
              "nodeType": "StructuredDocumentation",
              "src": "498:137:49",
              "text": "@dev 1. Find the facet for the function that is called.\n @dev 2. Delegate the execution to the found facet via `delegatecall`."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "648:2:49"
            },
            "returnParameters": {
              "id": 28581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "668:0:49"
            },
            "scope": 28646,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DiamondProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28565,
          "nodeType": "StructuredDocumentation",
          "src": "101:68:49",
          "text": "@title Diamond Proxy Cotract (EIP-2535)\n @author Matter Labs"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28646
        ],
        "name": "DiamondProxy",
        "nameLocation": "178:12:49",
        "scope": 28647,
        "usedErrors": []
      }
    ],
    "license": "MIT OR Apache-2.0"
  },
  "id": 49
}