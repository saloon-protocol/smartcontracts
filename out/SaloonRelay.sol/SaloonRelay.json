{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "BountyBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "hunter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BountyPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenDecimals",
          "type": "uint256"
        }
      ],
      "name": "NewBountyDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PremiumBilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOrUnstakeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "referralPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "tokenWhitelistUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeStrategies",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_projectWallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_projectName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_referralFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_referralEndTime",
          "type": "uint256"
        }
      ],
      "name": "addNewBountyPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "billPremium",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimPremium",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectAllReferralProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_saloonWallet",
          "type": "address"
        }
      ],
      "name": "collectAllSaloonProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "collectReferralProfit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_saloonWallet",
          "type": "address"
        }
      ],
      "name": "collectSaloonProfits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "compoundYieldForPid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "consolidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "consolidateAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "extendReferralPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "_saloonManager",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonProjectPortal",
          "name": "_saloonProjectPortal",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonBounty",
          "name": "_saloonBounty",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deposit",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_strategyName",
          "type": "string"
        }
      ],
      "name": "makeProjectDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minTokenStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "xDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastClaimedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelimit",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasUnstaked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "__pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_hunter",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_payoutBPS",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_hunterBonusBPS",
          "type": "uint16"
        }
      ],
      "name": "payBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pidNFTList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pidStrategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "apy",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "projectName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scalingMultiplier",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.GeneralInfo",
          "name": "generalInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "projectDepositHeld",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "projectDepositInStrategy",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.DepositInfo",
          "name": "depositInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "premiumBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premiumAvailable",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.PremiumInfo",
          "name": "premiumInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalScheduledAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "withdrawalExecuted",
              "type": "bool"
            }
          ],
          "internalType": "struct ISaloon.TimelockInfo",
          "name": "poolTimelock",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "currentX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentY",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "unstakedTokens",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ISaloon.CurveInfo",
          "name": "curveInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "referralFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.ReferralInfo",
          "name": "referralInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "assessmentPeriodEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "freezeTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "projectDepositWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "receiveStrategyYield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonBounty",
      "outputs": [
        {
          "internalType": "contract ISaloonBounty",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonBountyProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonManager",
      "outputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonPremiumProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonProjectPortal",
      "outputs": [
        {
          "internalType": "contract ISaloonProjectPortal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonStrategyProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "scheduleProjectDepositWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "scheduleUnstake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_poolCap",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_apy",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_deposit",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_strategyName",
          "type": "string"
        }
      ],
      "name": "setAPYandPoolCapAndDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "_saloonManager",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonProjectPortal",
          "name": "_saloonProjectPortal",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonBounty",
          "name": "_saloonBounty",
          "type": "address"
        }
      ],
      "name": "setImplementations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategyFactory",
          "type": "address"
        }
      ],
      "name": "setStrategyFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyAddressToPid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_shouldHarvest",
          "type": "bool"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_projectWallet",
          "type": "address"
        }
      ],
      "name": "updateProjectWalletAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_minStakeAmount",
          "type": "uint256"
        }
      ],
      "name": "updateTokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "windDownBounty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "withdrawProjectYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b506080516124d861004c60003960008181610e5801528181610ea101528181610f8601528181610fc6015261105901526124d86000f3fe6080604052600436106102ae5760003560e01c80638da5cb5b11610175578063b20b2429116100dc578063d075afac11610095578063e78ea3df1161006f578063e78ea3df14610990578063ecd7fbed146109b0578063f2fde38b146109d0578063f47ec3be146109f057600080fd5b8063d075afac14610923578063db53e8b514610943578063e45abd0f1461096357600080fd5b8063b20b242914610854578063b842e87f14610881578063bb7019c114610896578063c0c53b8b146108b6578063ca006148146108d6578063cf9564b91461090357600080fd5b8063995974c41161012e578063995974c4146107945780639ebea88c146107b45780639f224f35146107d4578063a089a520146107f4578063a5352bfd14610814578063ae07f9481461083457600080fd5b80638da5cb5b146106c95780639300d238146106e7578063949a4a4a14610707578063957deecc1461072757806396ea48e814610754578063983c1ce01461077457600080fd5b80633659cfe611610219578063598d17bf116101d2578063598d17bf146105f75780635de406dc14610624578063753d75631461064457806375bfd63d1461067457806379923898146106895780637b0472f0146106a957600080fd5b80633659cfe61461054d578063394587231461056d5780633e8888d91461059a5780634f1ef286146105af57806352d1902d146105c25780635669cbef146105d757600080fd5b8063220e11241161026b578063220e11241461048d578063277fd2a1146104ad5780632cb0dfcc146104cd5780632dbe051e146104ed57806330ca07941461050d57806332fce6021461052d57600080fd5b8063011b408b146102b3578063074ecf03146102fe578063106d08df146103575780631526fe27146103875780631aebcecb146103bc5780631f8bc790146103de575b600080fd5b3480156102bf57600080fd5b506102eb6102ce366004611c0a565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561030a57600080fd5b5061033f610319366004611c43565b600b6020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b0390911681526020016102f5565b34801561036357600080fd5b50610377610372366004611c65565b610a10565b60405190151581526020016102f5565b34801561039357600080fd5b506103a76103a2366004611c65565b610a7a565b6040516102f599989796959493929190611d2e565b3480156103c857600080fd5b506103dc6103d7366004611e71565b610cdb565b005b3480156103ea57600080fd5b506104476103f9366004611c65565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460078701546008909701549597949693959293919290919060ff1689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301521515610100820152610120016102f5565b34801561049957600080fd5b5060005461033f906001600160a01b031681565b3480156104b957600080fd5b5060015461033f906001600160a01b031681565b3480156104d957600080fd5b506103776104e8366004611eb2565b610d4e565b3480156104f957600080fd5b50610377610508366004611c65565b610dcf565b34801561051957600080fd5b506103dc610528366004611fae565b610def565b34801561053957600080fd5b506102eb610548366004612019565b610e1b565b34801561055957600080fd5b506103dc6105683660046120a0565b610e4e565b34801561057957600080fd5b506102eb6105883660046120a0565b60106020526000908152604090205481565b3480156105a657600080fd5b50610377610f36565b6103dc6105bd3660046120bd565b610f7c565b3480156105ce57600080fd5b506102eb61104c565b3480156105e357600080fd5b506103776105f2366004611c43565b6110ff565b34801561060357600080fd5b506102eb6106123660046120a0565b60086020526000908152604090205481565b34801561063057600080fd5b506103dc61063f366004611c43565b61112f565b34801561065057600080fd5b5061037761065f3660046120a0565b600e6020526000908152604090205460ff1681565b34801561068057600080fd5b506103dc611155565b34801561069557600080fd5b5060025461033f906001600160a01b031681565b3480156106b557600080fd5b506103dc6106c4366004611c43565b611196565b3480156106d557600080fd5b506044546001600160a01b031661033f565b3480156106f357600080fd5b506103dc610702366004612121565b6111bc565b34801561071357600080fd5b506103dc610722366004611c65565b611222565b34801561073357600080fd5b506102eb6107423660046120a0565b600d6020526000908152604090205481565b34801561076057600080fd5b506102eb61076f366004611c43565b611241565b34801561078057600080fd5b5061037761078f366004611c43565b611272565b3480156107a057600080fd5b506103dc6107af36600461216c565b61129b565b3480156107c057600080fd5b506103776107cf366004612191565b6112c9565b3480156107e057600080fd5b5061033f6107ef366004611c65565b6112f3565b34801561080057600080fd5b5061037761080f3660046120a0565b61131d565b34801561082057600080fd5b506103dc61082f3660046120a0565b611347565b34801561084057600080fd5b506103dc61084f3660046121bd565b611376565b34801561086057600080fd5b506102eb61086f366004611c65565b600c6020526000908152604090205481565b34801561088d57600080fd5b506103dc611396565b3480156108a257600080fd5b506103776108b1366004611c65565b611416565b3480156108c257600080fd5b506103dc6108d1366004612121565b611436565b3480156108e257600080fd5b506102eb6108f13660046120a0565b60076020526000908152604090205481565b34801561090f57600080fd5b5061037761091e366004611c0a565b611554565b34801561092f57600080fd5b506103dc61093e36600461220d565b611586565b34801561094f57600080fd5b506102eb61095e366004611c65565b6115cd565b34801561096f57600080fd5b506102eb61097e3660046120a0565b60066020526000908152604090205481565b34801561099c57600080fd5b506103dc6109ab366004611c65565b6115ed565b3480156109bc57600080fd5b506103776109cb3660046120a0565b61160c565b3480156109dc57600080fd5b506103dc6109eb3660046120a0565b611636565b3480156109fc57600080fd5b506103dc610a0b366004611c65565b6116c5565b6000610a7463106d08df60e01b83604051602401610a3091815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526002546001600160a01b0316906116e4565b50919050565b60038181548110610a8a57600080fd5b60009182526020918290206040805161010081018252601890930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b909104169183019190915260018101549092166060820152600282018054929350909183916080840191610b039061225c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2f9061225c565b8015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260059093015460609283015282518084018452600686015481526007860154818301528351808501855260088701548152600987015481840152845160808082018752600a8901548252600b89015482860152600c89015482880152600d89015460ff1615158287015286519081018752600e890180548252600f8a01548287015260108a01548289015260118a018054895181890281018901909a52808a52999a9599949893979596929591949186019392909190830182828015610c8557602002820191906000526020600020905b815481526020019060010190808311610c71575b5050509190925250506040805160608101825260128501546001600160a01b0316815260138501546020820152601485015491810191909152601584015460168501546017909501549394919390925060ff1689565b6040516001600160a01b038316602482015260448101829052610d4990631aebcecb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001546001600160a01b0316906116e4565b505050565b6040516001600160a01b0384166024820152821515604482015260648101829052600090610dc790630b2c37f360e21b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000546001600160a01b0316906116e4565b509392505050565b6000610a74632dbe051e60e01b83604051602401610d8391815260200190565b610e136330ca079460e01b8686868686604051602401610d05959493929190612290565b505050505050565b6000610e436332fce60260e01b888888888888604051602401610d83969594939291906122ca565b509695505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e9f5760405162461bcd60e51b8152600401610e9690612311565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ee860008051602061245c833981519152546001600160a01b031690565b6001600160a01b031614610f0e5760405162461bcd60e51b8152600401610e969061235d565b610f178161172d565b60408051600080825260208201909252610f3391839190611735565b50565b6040805160048152602481019091526020810180516001600160e01b0316633e8888d960e01b179052600080549091610f78916001600160a01b0316906116e4565b5090565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610fc45760405162461bcd60e51b8152600401610e9690612311565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661100d60008051602061245c833981519152546001600160a01b031690565b6001600160a01b0316146110335760405162461bcd60e51b8152600401610e969061235d565b61103c8261172d565b61104882826001611735565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110ec5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610e96565b5060008051602061245c83398151915290565b604051602481018390526044810182905260009061112890635669cbef60e01b90606401610d05565b5092915050565b6040516024810183905260448101829052610d499063177901b760e21b90606401610d83565b6040805160048152602481019091526020810180516001600160e01b03166375bfd63d60e01b179052600254610f33916001600160a01b03909116906116e4565b6040516024810183905260448101829052610d49906307b0472f60e41b90606401610a30565b604080516001600160a01b038581166024830181905285821660448401529084166064808401919091528351808403909101815260849092019092526020810180516001600160e01b03166312601a4760e31b17905261121c91906116e4565b50505050565b6040516024810182905261104890634a4d252560e11b90604401610a30565b6005602052816000526040600020818154811061125d57600080fd5b90600052602060002001600091509150505481565b6040516024810183905260448101829052600090611128906304c1e0e760e51b90606401610d05565b604051602481018390526001600160a01b0382166044820152610d49906326565d3160e21b90606401610d05565b604051602481018390528115156044820152600090611128906327afaa2360e21b90606401610a30565b600f818154811061130357600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516001600160a01b0382166024820152600090610a74906305044d2960e51b90604401610d83565b61134f6118a0565b6040516001600160a01b03821660248201526110489063a5352bfd60e01b90604401610d83565b61121c63ae07f94860e01b848484604051602401610d05939291906123a9565b6045546001600160a01b031633146113ff5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792070656e64696e67206f776e65722063616e2061636365707420747260448201526530b739b332b960d11b6064820152608401610e96565b604554611414906001600160a01b03166118fa565b565b6000610a7463bb7019c160e01b83604051602401610d0591815260200190565b601154610100900460ff16158080156114565750601154600160ff909116105b806114705750303b158015611470575060115460ff166001145b6114d35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e96565b6011805460ff1916600117905580156114f6576011805461ff0019166101001790555b6114fe611957565b6115098484846111bc565b801561121c576011805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6040516001600160a01b038084166024830152821660448201526000906111289063cf9564b960e01b90606401610d83565b604051602481018590526001600160a01b038416604482015261ffff8084166064830152821660848201526115c69063341d6beb60e21b9060a401610a30565b5050505050565b6000610a7463db53e8b560e01b83604051602401610d0591815260200190565b604051602481018290526110489063e78ea3df60e01b90604401610d05565b6040516001600160a01b0382166024820152600090610a749063ecd7fbed60e01b90604401610d83565b61163e6118a0565b6001600160a01b0381166116a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e96565b604580546001600160a01b0319166001600160a01b0392909216919091179055565b6040516024810182905261104890637a3f61df60e11b90604401610a30565b6040518151600090819060208501865af4611716573d61170d5763037b81af60e11b8152600481fd5b3d6000823e3d81fd5b3d8152602081013d6000823e3d0160405292915050565b610f336118a0565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561176857610d4983611986565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117c2575060408051601f3d908101601f191682019092526117bf918101906123c8565b60015b6118255760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610e96565b60008051602061245c83398151915281146118945760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610e96565b50610d49838383611a22565b6044546001600160a01b031633146114145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e96565b604480546001600160a01b038381166001600160a01b03198084168217909455604580549094169093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601154610100900460ff1661197e5760405162461bcd60e51b8152600401610e96906123e1565b611414611a47565b6001600160a01b0381163b6119f35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610e96565b60008051602061245c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611a2b83611a77565b600082511180611a385750805b15610d495761121c8383611ab7565b601154610100900460ff16611a6e5760405162461bcd60e51b8152600401610e96906123e1565b611414336118fa565b611a8081611986565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611b1f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610e96565b600080846001600160a01b031684604051611b3a919061242c565b600060405180830381855af49150503d8060008114611b75576040519150601f19603f3d011682016040523d82523d6000602084013e611b7a565b606091505b5091509150611ba2828260405180606001604052806027815260200161247c60279139611bab565b95945050505050565b60608315611bba575081611bc4565b611bc48383611bcb565b9392505050565b815115611bdb5781518083602001fd5b8060405162461bcd60e51b8152600401610e969190612448565b6001600160a01b0381168114610f3357600080fd5b60008060408385031215611c1d57600080fd5b8235611c2881611bf5565b91506020830135611c3881611bf5565b809150509250929050565b60008060408385031215611c5657600080fd5b50508035926020909101359150565b600060208284031215611c7757600080fd5b5035919050565b60005b83811015611c99578181015183820152602001611c81565b50506000910152565b60008151808452611cba816020860160208601611c7e565b601f01601f19169290920160200192915050565b60006080830182518452602080840151818601526040840151604086015260608401516080606087015282815180855260a0880191508383019450600092505b80831015610e435784518252938301936001929092019190830190611d0e565b6102008082528a516001600160a01b039081169183019190915260208b015160ff1661022083015260408b015161ffff1661024083015260608b01511661026082015260808a0151610100610280830152600090611d90610300840182611ca2565b905060a08c01516102a084015260c08c01516102c084015260e08c01516102e0840152611dca602084018c80518252602090810151910152565b8951606084015260208a01516080840152885160a0840152602089015160c0840152604089015160e084015260608901511515610100840152828103610120840152611e168189611cce565b87516001600160a01b0316610140850152602088015161016085015260408801516101808501529150611e469050565b846101a0830152836101c0830152611e636101e083018415159052565b9a9950505050505050505050565b60008060408385031215611e8457600080fd5b8235611e8f81611bf5565b946020939093013593505050565b80358015158114611ead57600080fd5b919050565b600080600060608486031215611ec757600080fd5b8335611ed281611bf5565b9250611ee060208501611e9d565b9150604084013590509250925092565b803561ffff81168114611ead57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611f3357611f33611f02565b604051601f8501601f19908116603f01168101908282118183101715611f5b57611f5b611f02565b81604052809350858152868686011115611f7457600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611f9f57600080fd5b611bc483833560208501611f18565b600080600080600060a08688031215611fc657600080fd5b8535945060208601359350611fdd60408701611ef0565b925060608601359150608086013567ffffffffffffffff81111561200057600080fd5b61200c88828901611f8e565b9150509295509295909350565b60008060008060008060c0878903121561203257600080fd5b863561203d81611bf5565b9550602087013561204d81611bf5565b9450604087013567ffffffffffffffff81111561206957600080fd5b61207589828a01611f8e565b945050606087013561208681611bf5565b9598949750929560808101359460a0909101359350915050565b6000602082840312156120b257600080fd5b8135611bc481611bf5565b600080604083850312156120d057600080fd5b82356120db81611bf5565b9150602083013567ffffffffffffffff8111156120f757600080fd5b8301601f8101851361210857600080fd5b61211785823560208401611f18565b9150509250929050565b60008060006060848603121561213657600080fd5b833561214181611bf5565b9250602084013561215181611bf5565b9150604084013561216181611bf5565b809150509250925092565b6000806040838503121561217f57600080fd5b823591506020830135611c3881611bf5565b600080604083850312156121a457600080fd5b823591506121b460208401611e9d565b90509250929050565b6000806000606084860312156121d257600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156121f757600080fd5b61220386828701611f8e565b9150509250925092565b6000806000806080858703121561222357600080fd5b84359350602085013561223581611bf5565b925061224360408601611ef0565b915061225160608601611ef0565b905092959194509250565b600181811c9082168061227057607f821691505b602082108103610a7457634e487b7160e01b600052602260045260246000fd5b85815284602082015261ffff8416604082015282606082015260a0608082015260006122bf60a0830184611ca2565b979650505050505050565b600060018060a01b038089168352808816602084015260c060408401526122f460c0840188611ca2565b9516606083015250608081019290925260a0909101529392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b838152826020820152606060408201526000611ba26060830184611ca2565b6000602082840312156123da57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161243e818460208701611c7e565b9190910192915050565b602081526000611bc46020830184611ca256fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122055ff72528b5708de9263f48fcc12d4be2b5d59f9b8ac1eacb04147518aa92f1f64736f6c63430008110033",
    "sourceMap": "465:16139:51:-:0;;;1332:4:10;1289:48;;465:16139:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102ae5760003560e01c80638da5cb5b11610175578063b20b2429116100dc578063d075afac11610095578063e78ea3df1161006f578063e78ea3df14610990578063ecd7fbed146109b0578063f2fde38b146109d0578063f47ec3be146109f057600080fd5b8063d075afac14610923578063db53e8b514610943578063e45abd0f1461096357600080fd5b8063b20b242914610854578063b842e87f14610881578063bb7019c114610896578063c0c53b8b146108b6578063ca006148146108d6578063cf9564b91461090357600080fd5b8063995974c41161012e578063995974c4146107945780639ebea88c146107b45780639f224f35146107d4578063a089a520146107f4578063a5352bfd14610814578063ae07f9481461083457600080fd5b80638da5cb5b146106c95780639300d238146106e7578063949a4a4a14610707578063957deecc1461072757806396ea48e814610754578063983c1ce01461077457600080fd5b80633659cfe611610219578063598d17bf116101d2578063598d17bf146105f75780635de406dc14610624578063753d75631461064457806375bfd63d1461067457806379923898146106895780637b0472f0146106a957600080fd5b80633659cfe61461054d578063394587231461056d5780633e8888d91461059a5780634f1ef286146105af57806352d1902d146105c25780635669cbef146105d757600080fd5b8063220e11241161026b578063220e11241461048d578063277fd2a1146104ad5780632cb0dfcc146104cd5780632dbe051e146104ed57806330ca07941461050d57806332fce6021461052d57600080fd5b8063011b408b146102b3578063074ecf03146102fe578063106d08df146103575780631526fe27146103875780631aebcecb146103bc5780631f8bc790146103de575b600080fd5b3480156102bf57600080fd5b506102eb6102ce366004611c0a565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561030a57600080fd5b5061033f610319366004611c43565b600b6020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b0390911681526020016102f5565b34801561036357600080fd5b50610377610372366004611c65565b610a10565b60405190151581526020016102f5565b34801561039357600080fd5b506103a76103a2366004611c65565b610a7a565b6040516102f599989796959493929190611d2e565b3480156103c857600080fd5b506103dc6103d7366004611e71565b610cdb565b005b3480156103ea57600080fd5b506104476103f9366004611c65565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460078701546008909701549597949693959293919290919060ff1689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301521515610100820152610120016102f5565b34801561049957600080fd5b5060005461033f906001600160a01b031681565b3480156104b957600080fd5b5060015461033f906001600160a01b031681565b3480156104d957600080fd5b506103776104e8366004611eb2565b610d4e565b3480156104f957600080fd5b50610377610508366004611c65565b610dcf565b34801561051957600080fd5b506103dc610528366004611fae565b610def565b34801561053957600080fd5b506102eb610548366004612019565b610e1b565b34801561055957600080fd5b506103dc6105683660046120a0565b610e4e565b34801561057957600080fd5b506102eb6105883660046120a0565b60106020526000908152604090205481565b3480156105a657600080fd5b50610377610f36565b6103dc6105bd3660046120bd565b610f7c565b3480156105ce57600080fd5b506102eb61104c565b3480156105e357600080fd5b506103776105f2366004611c43565b6110ff565b34801561060357600080fd5b506102eb6106123660046120a0565b60086020526000908152604090205481565b34801561063057600080fd5b506103dc61063f366004611c43565b61112f565b34801561065057600080fd5b5061037761065f3660046120a0565b600e6020526000908152604090205460ff1681565b34801561068057600080fd5b506103dc611155565b34801561069557600080fd5b5060025461033f906001600160a01b031681565b3480156106b557600080fd5b506103dc6106c4366004611c43565b611196565b3480156106d557600080fd5b506044546001600160a01b031661033f565b3480156106f357600080fd5b506103dc610702366004612121565b6111bc565b34801561071357600080fd5b506103dc610722366004611c65565b611222565b34801561073357600080fd5b506102eb6107423660046120a0565b600d6020526000908152604090205481565b34801561076057600080fd5b506102eb61076f366004611c43565b611241565b34801561078057600080fd5b5061037761078f366004611c43565b611272565b3480156107a057600080fd5b506103dc6107af36600461216c565b61129b565b3480156107c057600080fd5b506103776107cf366004612191565b6112c9565b3480156107e057600080fd5b5061033f6107ef366004611c65565b6112f3565b34801561080057600080fd5b5061037761080f3660046120a0565b61131d565b34801561082057600080fd5b506103dc61082f3660046120a0565b611347565b34801561084057600080fd5b506103dc61084f3660046121bd565b611376565b34801561086057600080fd5b506102eb61086f366004611c65565b600c6020526000908152604090205481565b34801561088d57600080fd5b506103dc611396565b3480156108a257600080fd5b506103776108b1366004611c65565b611416565b3480156108c257600080fd5b506103dc6108d1366004612121565b611436565b3480156108e257600080fd5b506102eb6108f13660046120a0565b60076020526000908152604090205481565b34801561090f57600080fd5b5061037761091e366004611c0a565b611554565b34801561092f57600080fd5b506103dc61093e36600461220d565b611586565b34801561094f57600080fd5b506102eb61095e366004611c65565b6115cd565b34801561096f57600080fd5b506102eb61097e3660046120a0565b60066020526000908152604090205481565b34801561099c57600080fd5b506103dc6109ab366004611c65565b6115ed565b3480156109bc57600080fd5b506103776109cb3660046120a0565b61160c565b3480156109dc57600080fd5b506103dc6109eb3660046120a0565b611636565b3480156109fc57600080fd5b506103dc610a0b366004611c65565b6116c5565b6000610a7463106d08df60e01b83604051602401610a3091815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526002546001600160a01b0316906116e4565b50919050565b60038181548110610a8a57600080fd5b60009182526020918290206040805161010081018252601890930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b909104169183019190915260018101549092166060820152600282018054929350909183916080840191610b039061225c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2f9061225c565b8015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260059093015460609283015282518084018452600686015481526007860154818301528351808501855260088701548152600987015481840152845160808082018752600a8901548252600b89015482860152600c89015482880152600d89015460ff1615158287015286519081018752600e890180548252600f8a01548287015260108a01548289015260118a018054895181890281018901909a52808a52999a9599949893979596929591949186019392909190830182828015610c8557602002820191906000526020600020905b815481526020019060010190808311610c71575b5050509190925250506040805160608101825260128501546001600160a01b0316815260138501546020820152601485015491810191909152601584015460168501546017909501549394919390925060ff1689565b6040516001600160a01b038316602482015260448101829052610d4990631aebcecb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001546001600160a01b0316906116e4565b505050565b6040516001600160a01b0384166024820152821515604482015260648101829052600090610dc790630b2c37f360e21b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000546001600160a01b0316906116e4565b509392505050565b6000610a74632dbe051e60e01b83604051602401610d8391815260200190565b610e136330ca079460e01b8686868686604051602401610d05959493929190612290565b505050505050565b6000610e436332fce60260e01b888888888888604051602401610d83969594939291906122ca565b509695505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e9f5760405162461bcd60e51b8152600401610e9690612311565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ee860008051602061245c833981519152546001600160a01b031690565b6001600160a01b031614610f0e5760405162461bcd60e51b8152600401610e969061235d565b610f178161172d565b60408051600080825260208201909252610f3391839190611735565b50565b6040805160048152602481019091526020810180516001600160e01b0316633e8888d960e01b179052600080549091610f78916001600160a01b0316906116e4565b5090565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610fc45760405162461bcd60e51b8152600401610e9690612311565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661100d60008051602061245c833981519152546001600160a01b031690565b6001600160a01b0316146110335760405162461bcd60e51b8152600401610e969061235d565b61103c8261172d565b61104882826001611735565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110ec5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610e96565b5060008051602061245c83398151915290565b604051602481018390526044810182905260009061112890635669cbef60e01b90606401610d05565b5092915050565b6040516024810183905260448101829052610d499063177901b760e21b90606401610d83565b6040805160048152602481019091526020810180516001600160e01b03166375bfd63d60e01b179052600254610f33916001600160a01b03909116906116e4565b6040516024810183905260448101829052610d49906307b0472f60e41b90606401610a30565b604080516001600160a01b038581166024830181905285821660448401529084166064808401919091528351808403909101815260849092019092526020810180516001600160e01b03166312601a4760e31b17905261121c91906116e4565b50505050565b6040516024810182905261104890634a4d252560e11b90604401610a30565b6005602052816000526040600020818154811061125d57600080fd5b90600052602060002001600091509150505481565b6040516024810183905260448101829052600090611128906304c1e0e760e51b90606401610d05565b604051602481018390526001600160a01b0382166044820152610d49906326565d3160e21b90606401610d05565b604051602481018390528115156044820152600090611128906327afaa2360e21b90606401610a30565b600f818154811061130357600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516001600160a01b0382166024820152600090610a74906305044d2960e51b90604401610d83565b61134f6118a0565b6040516001600160a01b03821660248201526110489063a5352bfd60e01b90604401610d83565b61121c63ae07f94860e01b848484604051602401610d05939291906123a9565b6045546001600160a01b031633146113ff5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792070656e64696e67206f776e65722063616e2061636365707420747260448201526530b739b332b960d11b6064820152608401610e96565b604554611414906001600160a01b03166118fa565b565b6000610a7463bb7019c160e01b83604051602401610d0591815260200190565b601154610100900460ff16158080156114565750601154600160ff909116105b806114705750303b158015611470575060115460ff166001145b6114d35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e96565b6011805460ff1916600117905580156114f6576011805461ff0019166101001790555b6114fe611957565b6115098484846111bc565b801561121c576011805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6040516001600160a01b038084166024830152821660448201526000906111289063cf9564b960e01b90606401610d83565b604051602481018590526001600160a01b038416604482015261ffff8084166064830152821660848201526115c69063341d6beb60e21b9060a401610a30565b5050505050565b6000610a7463db53e8b560e01b83604051602401610d0591815260200190565b604051602481018290526110489063e78ea3df60e01b90604401610d05565b6040516001600160a01b0382166024820152600090610a749063ecd7fbed60e01b90604401610d83565b61163e6118a0565b6001600160a01b0381166116a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e96565b604580546001600160a01b0319166001600160a01b0392909216919091179055565b6040516024810182905261104890637a3f61df60e11b90604401610a30565b6040518151600090819060208501865af4611716573d61170d5763037b81af60e11b8152600481fd5b3d6000823e3d81fd5b3d8152602081013d6000823e3d0160405292915050565b610f336118a0565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561176857610d4983611986565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117c2575060408051601f3d908101601f191682019092526117bf918101906123c8565b60015b6118255760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610e96565b60008051602061245c83398151915281146118945760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610e96565b50610d49838383611a22565b6044546001600160a01b031633146114145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e96565b604480546001600160a01b038381166001600160a01b03198084168217909455604580549094169093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601154610100900460ff1661197e5760405162461bcd60e51b8152600401610e96906123e1565b611414611a47565b6001600160a01b0381163b6119f35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610e96565b60008051602061245c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611a2b83611a77565b600082511180611a385750805b15610d495761121c8383611ab7565b601154610100900460ff16611a6e5760405162461bcd60e51b8152600401610e96906123e1565b611414336118fa565b611a8081611986565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611b1f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610e96565b600080846001600160a01b031684604051611b3a919061242c565b600060405180830381855af49150503d8060008114611b75576040519150601f19603f3d011682016040523d82523d6000602084013e611b7a565b606091505b5091509150611ba2828260405180606001604052806027815260200161247c60279139611bab565b95945050505050565b60608315611bba575081611bc4565b611bc48383611bcb565b9392505050565b815115611bdb5781518083602001fd5b8060405162461bcd60e51b8152600401610e969190612448565b6001600160a01b0381168114610f3357600080fd5b60008060408385031215611c1d57600080fd5b8235611c2881611bf5565b91506020830135611c3881611bf5565b809150509250929050565b60008060408385031215611c5657600080fd5b50508035926020909101359150565b600060208284031215611c7757600080fd5b5035919050565b60005b83811015611c99578181015183820152602001611c81565b50506000910152565b60008151808452611cba816020860160208601611c7e565b601f01601f19169290920160200192915050565b60006080830182518452602080840151818601526040840151604086015260608401516080606087015282815180855260a0880191508383019450600092505b80831015610e435784518252938301936001929092019190830190611d0e565b6102008082528a516001600160a01b039081169183019190915260208b015160ff1661022083015260408b015161ffff1661024083015260608b01511661026082015260808a0151610100610280830152600090611d90610300840182611ca2565b905060a08c01516102a084015260c08c01516102c084015260e08c01516102e0840152611dca602084018c80518252602090810151910152565b8951606084015260208a01516080840152885160a0840152602089015160c0840152604089015160e084015260608901511515610100840152828103610120840152611e168189611cce565b87516001600160a01b0316610140850152602088015161016085015260408801516101808501529150611e469050565b846101a0830152836101c0830152611e636101e083018415159052565b9a9950505050505050505050565b60008060408385031215611e8457600080fd5b8235611e8f81611bf5565b946020939093013593505050565b80358015158114611ead57600080fd5b919050565b600080600060608486031215611ec757600080fd5b8335611ed281611bf5565b9250611ee060208501611e9d565b9150604084013590509250925092565b803561ffff81168114611ead57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611f3357611f33611f02565b604051601f8501601f19908116603f01168101908282118183101715611f5b57611f5b611f02565b81604052809350858152868686011115611f7457600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611f9f57600080fd5b611bc483833560208501611f18565b600080600080600060a08688031215611fc657600080fd5b8535945060208601359350611fdd60408701611ef0565b925060608601359150608086013567ffffffffffffffff81111561200057600080fd5b61200c88828901611f8e565b9150509295509295909350565b60008060008060008060c0878903121561203257600080fd5b863561203d81611bf5565b9550602087013561204d81611bf5565b9450604087013567ffffffffffffffff81111561206957600080fd5b61207589828a01611f8e565b945050606087013561208681611bf5565b9598949750929560808101359460a0909101359350915050565b6000602082840312156120b257600080fd5b8135611bc481611bf5565b600080604083850312156120d057600080fd5b82356120db81611bf5565b9150602083013567ffffffffffffffff8111156120f757600080fd5b8301601f8101851361210857600080fd5b61211785823560208401611f18565b9150509250929050565b60008060006060848603121561213657600080fd5b833561214181611bf5565b9250602084013561215181611bf5565b9150604084013561216181611bf5565b809150509250925092565b6000806040838503121561217f57600080fd5b823591506020830135611c3881611bf5565b600080604083850312156121a457600080fd5b823591506121b460208401611e9d565b90509250929050565b6000806000606084860312156121d257600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156121f757600080fd5b61220386828701611f8e565b9150509250925092565b6000806000806080858703121561222357600080fd5b84359350602085013561223581611bf5565b925061224360408601611ef0565b915061225160608601611ef0565b905092959194509250565b600181811c9082168061227057607f821691505b602082108103610a7457634e487b7160e01b600052602260045260246000fd5b85815284602082015261ffff8416604082015282606082015260a0608082015260006122bf60a0830184611ca2565b979650505050505050565b600060018060a01b038089168352808816602084015260c060408401526122f460c0840188611ca2565b9516606083015250608081019290925260a0909101529392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b838152826020820152606060408201526000611ba26060830184611ca2565b6000602082840312156123da57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161243e818460208701611c7e565b9190910192915050565b602081526000611bc46020830184611ca256fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122055ff72528b5708de9263f48fcc12d4be2b5d59f9b8ac1eacb04147518aa92f1f64736f6c63430008110033",
    "sourceMap": "465:16139:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:71:52;;;;;;;;;;-1:-1:-1;1510:71:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:25:72;;;677:2;662:18;1510:71:52;;;;;;;;1851:68;;;;;;;;;;-1:-1:-1;1851:68:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1851:68:52;;;;;;-1:-1:-1;;;;;1251:32:72;;;1233:51;;1221:2;1206:18;1851:68:52;1087:203:72;8708:268:51;;;;;;;;;;-1:-1:-1;8708:268:51;;;;;:::i;:::-;;:::i;:::-;;;1741:14:72;;1734:22;1716:41;;1704:2;1689:18;8708:268:51;1576:187:72;1121:26:52;;;;;;;;;;-1:-1:-1;1121:26:52;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;15865:315:51:-;;;;;;;;;;-1:-1:-1;15865:315:51;;;;;:::i;:::-;;:::i;:::-;;1180:42:52;;;;;;;;;;-1:-1:-1;1180:42:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6664:25:72;;;6720:2;6705:18;;6698:34;;;;6748:18;;;6741:34;;;;6806:2;6791:18;;6784:34;;;;6849:3;6834:19;;6827:35;;;;6893:3;6878:19;;6871:35;6937:3;6922:19;;6915:35;6981:3;6966:19;;6959:35;7038:14;7031:22;7025:3;7010:19;;7003:51;6651:3;6636:19;1180:42:52;6299:761:72;690:35:52;;;;;;;;;;-1:-1:-1;690:35:52;;;;-1:-1:-1;;;;;690:35:52;;;731:47;;;;;;;;;;-1:-1:-1;731:47:52;;;;-1:-1:-1;;;;;731:47:52;;;2524:413:51;;;;;;;;;;-1:-1:-1;2524:413:51;;;;;:::i;:::-;;:::i;4665:206::-;;;;;;;;;;-1:-1:-1;4665:206:51;;;;;:::i;:::-;;:::i;11978:510::-;;;;;;;;;;-1:-1:-1;11978:510:51;;;;;:::i;:::-;;:::i;3525:597::-;;;;;;;;;;-1:-1:-1;3525:597:51;;;;;:::i;:::-;;:::i;3317:197:10:-;;;;;;;;;;-1:-1:-1;3317:197:10;;;;;:::i;:::-;;:::i;2349:54:52:-;;;;;;;;;;-1:-1:-1;2349:54:52;;;;;:::i;:::-;;;;;;;;;;;;;;6451:248:51;;;;;;;;;;;;;:::i;3763:222:10:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;13367:370:51:-;;;;;;;;;;-1:-1:-1;13367:370:51;;;;;:::i;:::-;;:::i;1449:55:52:-;;;;;;;;;;-1:-1:-1;1449:55:52;;;;;:::i;:::-;;;;;;;;;;;;;;4358:301:51;;;;;;;;;;-1:-1:-1;4358:301:51;;;;;:::i;:::-;;:::i;2183:46:52:-;;;;;;;;;;-1:-1:-1;2183:46:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;11135:179:51;;;;;;;;;;;;;:::i;784:33:52:-;;;;;;;;;;-1:-1:-1;784:33:52;;;;-1:-1:-1;;;;;784:33:52;;;8310:205:51;;;;;;;;;;-1:-1:-1;8310:205:51;;;;;:::i;:::-;;:::i;1562:85:68:-;;;;;;;;;;-1:-1:-1;1634:6:68;;-1:-1:-1;;;;;1634:6:68;1562:85;;1262:450:51;;;;;;;;;;-1:-1:-1;1262:450:51;;;;;:::i;:::-;;:::i;10846:189::-;;;;;;;;;;-1:-1:-1;10846:189:51;;;;;:::i;:::-;;:::i;2084:55:52:-;;;;;;;;;;-1:-1:-1;2084:55:52;;;;;:::i;:::-;;;;;;;;;;;;;;1253:47;;;;;;;;;;-1:-1:-1;1253:47:52;;;;;:::i;:::-;;:::i;13903:354:51:-;;;;;;;;;;-1:-1:-1;13903:354:51;;;;;:::i;:::-;;:::i;15083:349::-;;;;;;;;;;-1:-1:-1;15083:349:51;;;;;:::i;:::-;;:::i;9168:325::-;;;;;;;;;;-1:-1:-1;9168:325:51;;;;;:::i;:::-;;:::i;2273:29:52:-;;;;;;;;;;-1:-1:-1;2273:29:52;;;;;:::i;:::-;;:::i;6079:276:51:-;;;;;;;;;;-1:-1:-1;6079:276:51;;;;;:::i;:::-;;:::i;1718:287::-;;;;;;;;;;-1:-1:-1;1718:287:51;;;;;:::i;:::-;;:::i;12760:399::-;;;;;;;;;;-1:-1:-1;12760:399:51;;;;;:::i;:::-;;:::i;1968:51:52:-;;;;;;;;;;-1:-1:-1;1968:51:52;;;;;:::i;:::-;;;;;;;;;;;;;;2562:216:68;;;;;;;;;;;;;:::i;14659:272:51:-;;;;;;;;;;-1:-1:-1;14659:272:51;;;;;:::i;:::-;;:::i;583:286::-;;;;;;;;;;-1:-1:-1;583:286:51;;;;;:::i;:::-;;:::i;1389:54:52:-;;;;;;;;;;-1:-1:-1;1389:54:52;;;;;:::i;:::-;;;;;;;;;;;;;;5093:348:51;;;;;;;;;;-1:-1:-1;5093:348:51;;;;;:::i;:::-;;:::i;7737:417::-;;;;;;;;;;-1:-1:-1;7737:417:51;;;;;:::i;:::-;;:::i;14263:322::-;;;;;;;;;;-1:-1:-1;14263:322:51;;;;;:::i;:::-;;:::i;1330:53:52:-;;;;;;;;;;-1:-1:-1;1330:53:52;;;;;:::i;:::-;;;;;;;;;;;;;;16337:265:51;;;;;;;;;;-1:-1:-1;16337:265:51;;;;;:::i;:::-;;:::i;5603:316::-;;;;;;;;;;-1:-1:-1;5603:316:51;;;;;:::i;:::-;;:::i;2336:220:68:-;;;;;;;;;;-1:-1:-1;2336:220:68;;;;;:::i;:::-;;:::i;9595:247:51:-;;;;;;;;;;-1:-1:-1;9595:247:51;;;;;:::i;:::-;;:::i;8708:268::-;8769:4;8785:184;8881:38;;;8937:8;8841:118;;;;;;689:25:72;;677:2;662:18;;543:177;8841:118:51;;;;-1:-1:-1;;8841:118:51;;;;;;;;;;;;;;-1:-1:-1;;;;;8841:118:51;-1:-1:-1;;;;;;8841:118:51;;;;;;;;;;8793:12;;-1:-1:-1;;;;;8793:12:51;;8785:42;:184::i;:::-;;8708:268;;;:::o;1121:26:52:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1121:26:52;;;;;;-1:-1:-1;;;1121:26:52;;;;;;;;;;;-1:-1:-1;;;1121:26:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1121:26:52;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1121:26:52;;;-1:-1:-1;;1121:26:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1121:26:52;;;;-1:-1:-1;;1121:26:52;;;;;;;;;;;;-1:-1:-1;;;;;1121:26:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1121:26:52;;;:::o;15865:315:51:-;16010:153;;-1:-1:-1;;;;;14933:32:72;;16010:153:51;;;14915:51:72;14982:18;;;14975:34;;;15947:226:51;;-1:-1:-1;;;16050:50:51;14888:18:72;;16010:153:51;;;;-1:-1:-1;;16010:153:51;;;;;;;;;;;;;;-1:-1:-1;;;;;16010:153:51;-1:-1:-1;;;;;;16010:153:51;;;;;;;;;;15955:19;;-1:-1:-1;;;;;15955:19:51;;15947:49;:226::i;:::-;;15865:315;;:::o;2524:413::-;2735:185;;-1:-1:-1;;;;;15234:32:72;;2735:185:51;;;15216:51:72;15310:14;;15303:22;15283:18;;;15276:50;15342:18;;;15335:34;;;2662:4:51;;2678:252;;-1:-1:-1;;;2775:44:51;15189:18:72;;2735:185:51;;;;-1:-1:-1;;2735:185:51;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:185:51;-1:-1:-1;;;;;;2735:185:51;;;;;;;;;;-1:-1:-1;2686:13:51;-1:-1:-1;;;;;2686:13:51;;2678:43;:252::i;:::-;;2524:413;;;;;:::o;4665:206::-;4716:4;4732:132;4812:35;;;4849:4;4789:65;;;;;;689:25:72;;677:2;662:18;;543:177;11978:510:51;12171:310;12274:56;;;12348:4;12370:8;12396:4;12418:8;12444:13;12234:237;;;;;;;;;;;;:::i;12171:310::-;;11978:510;;;;;:::o;3525:597::-;3758:7;3777:338;3874:40;;;3932:6;3956:14;3988:12;4018:9;4045:12;4075:16;3834:271;;;;;;;;;;;;;:::i;3777:338::-;;3525:597;;;;;;;;:::o;3317:197:10:-;-1:-1:-1;;;;;1898:6:10;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:10;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:10;:20;-1:-1:-1;;;;;;;;;;;1642:65:7;-1:-1:-1;;;;;1642:65:7;;1563:151;1971:20:10;-1:-1:-1;;;;;1971:30:10;;1963:87;;;;-1:-1:-1;;;1963:87:10;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;6451:248:51:-;6579:103;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6579:103:51;-1:-1:-1;;;6579:103:51;;;6506:4;6530:13;;6506:4;;6522:170;;-1:-1:-1;;;;;6530:13:51;;6522:43;:170::i;:::-;;6451:248;:::o;3763:222:10:-;-1:-1:-1;;;;;1898:6:10;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:10;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:10;:20;-1:-1:-1;;;;;;;;;;;1642:65:7;-1:-1:-1;;;;;1642:65:7;;1563:151;1971:20:10;-1:-1:-1;;;;;1971:30:10;;1963:87;;;;-1:-1:-1;;;1963:87:10;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:10;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:10;;17580:2:72;2308:92:10;;;17562:21:72;17619:2;17599:18;;;17592:30;17658:34;17638:18;;;17631:62;17729:26;17709:18;;;17702:54;17773:19;;2308:92:10;17378:420:72;2308:92:10;-1:-1:-1;;;;;;;;;;;;3006:131:10;:::o;13367:370:51:-;13557:163;;;;;17977:25:72;;;18018:18;;;18011:34;;;13474:4:51;;13494:236;;-1:-1:-1;;;13597:62:51;17950:18:72;;13557:163:51;17803:248:72;13494:236:51;;13367:370;;;;:::o;4358:301::-;4496:146;;;;;17977:25:72;;;18018:18;;;18011:34;;;4439:213:51;;-1:-1:-1;;;4536:44:51;17950:18:72;;4496:146:51;17803:248:72;11135:179:51;11236:61;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11236:61:51;-1:-1:-1;;;11236:61:51;;;11188:12;;11180:127;;-1:-1:-1;;;;;11188:12:51;;;;11180:42;:127::i;8310:205::-;8431:67;;;;;17977:25:72;;;18018:18;;;18011:34;;;8375:133:51;;-1:-1:-1;;;8454:28:51;17950:18:72;;8431:67:51;17803:248:72;1262:450:51;1498:197;;;-1:-1:-1;;;;;18391:15:72;;;1498:197:51;;;18373:34:72;;;18443:15;;;18423:18;;;18416:43;18495:15;;;18475:18;;;;18468:43;;;;1498:197:51;;;;;;;;;;18308:18:72;;;;1498:197:51;;;;;;;;-1:-1:-1;;;;;1498:197:51;-1:-1:-1;;;1498:197:51;;;1440:265;;18391:15:72;1440:44:51;:265::i;:::-;;1262:450;;;:::o;10846:189::-;10954:64;;;;;689:25:72;;;10898:130:51;;-1:-1:-1;;;10977:34:51;662:18:72;;10954:64:51;543:177:72;1253:47:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13903:354:51:-;14085:155;;;;;17977:25:72;;;18018:18;;;18011:34;;;14002:4:51;;14022:228;;-1:-1:-1;;;14125:54:51;17950:18:72;;14085:155:51;17803:248:72;15083:349:51;15251:164;;;;;18696:25:72;;;-1:-1:-1;;;;;18757:32:72;;18737:18;;;18730:60;15188:237:51;;-1:-1:-1;;;15291:56:51;18669:18:72;;15251:164:51;18522:274:72;9168:325:51;9334:142;;;;;18969:25:72;;;19037:14;;19030:22;19010:18;;;19003:50;9258:4:51;;9278:208;;-1:-1:-1;;;9374:30:51;18942:18:72;;9334:142:51;18801:258:72;2273:29:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2273:29:52;;-1:-1:-1;2273:29:52;:::o;6079:276:51:-;6215:123;;-1:-1:-1;;;;;1251:32:72;;6215:123:51;;;1233:51:72;6142:4:51;;6158:190;;-1:-1:-1;;;6255:45:51;1206:18:72;;6215:123:51;1087:203:72;1718:287:51;1455:13:68;:11;:13::i;:::-;1858:130:51::1;::::0;-1:-1:-1;;;;;1251:32:72;;1858:130:51::1;::::0;::::1;1233:51:72::0;1801:197:51::1;::::0;-1:-1:-1;;;1898:42:51;1206:18:72;;1858:130:51::1;1087:203:72::0;12760:399:51;12898:254;13001:48;;;13067:4;13089:8;13115:13;12961:181;;;;;;;;;;:::i;2562:216:68:-;2637:13;;-1:-1:-1;;;;;2637:13:68;2654:10;2637:27;2616:112;;;;-1:-1:-1;;;2616:112:68;;19633:2:72;2616:112:68;;;19615:21:72;19672:2;19652:18;;;19645:30;19711:34;19691:18;;;19684:62;-1:-1:-1;;;19762:18:72;;;19755:36;19808:19;;2616:112:68;19431:402:72;2616:112:68;2757:13;;2738:33;;-1:-1:-1;;;;;2757:13:68;2738:18;:33::i;:::-;2562:216::o;14659:272:51:-;14715:4;14731:193;14834:44;;;14896:4;14794:120;;;;;;689:25:72;;677:2;662:18;;543:177;583:286:51;3291:13:9;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:9;;3369:1;3354:12;;;;:16;3336:34;3335:124;;;-1:-1:-1;3431:4:9;1476:19:15;:23;;;3392:66:9;;-1:-1:-1;3441:12:9;;;;;:17;3392:66;3314:217;;;;-1:-1:-1;;;3314:217:9;;20040:2:72;3314:217:9;;;20022:21:72;20079:2;20059:18;;;20052:30;20118:34;20098:18;;;20091:62;-1:-1:-1;;;20169:18:72;;;20162:44;20223:19;;3314:217:9;19838:410:72;3314:217:9;3541:12;:16;;-1:-1:-1;;3541:16:9;3556:1;3541:16;;;3567:65;;;;3601:13;:20;;-1:-1:-1;;3601:20:9;;;;;3567:65;765:16:51::1;:14;:16::i;:::-;791:71;810:14;826:20;848:13;791:18;:71::i;:::-;3656:14:9::0;3652:99;;;3686:13;:21;;-1:-1:-1;;3686:21:9;;;3726:14;;-1:-1:-1;20405:36:72;;3726:14:9;;20393:2:72;20378:18;3726:14:9;;;;;;;3258:499;583:286:51;;;:::o;5093:348::-;5271:153;;-1:-1:-1;;;;;20682:15:72;;;5271:153:51;;;20664:34:72;20734:15;;20714:18;;;20707:43;5194:4:51;;5214:220;;-1:-1:-1;;;5311:44:51;20599:18:72;;5271:153:51;20452:304:72;7737:417:51;7942:195;;;;;20988:25:72;;;-1:-1:-1;;;;;21049:32:72;;21029:18;;;21022:60;21101:6;21143:15;;;21123:18;;;21116:43;21195:15;;21175:18;;;21168:43;7886:261:51;;-1:-1:-1;;;7982:32:51;20960:19:72;;7942:195:51;20761:456:72;7886:261:51;;7737:417;;;;:::o;14263:322::-;14341:22;14379:199;14482:50;;;14550:4;14442:126;;;;;;689:25:72;;677:2;662:18;;543:177;16337:265:51;16460:125;;;;;689:25:72;;;16397:198:51;;-1:-1:-1;;;16500:49:51;662:18:72;;16460:125:51;543:177:72;5603:316:51;5770:132;;-1:-1:-1;;;;;1251:32:72;;5770:132:51;;;1233:51:72;5693:4:51;;5713:199;;-1:-1:-1;;;5810:47:51;1206:18:72;;5770:132:51;1087:203:72;2336:220:68;1455:13;:11;:13::i;:::-;-1:-1:-1;;;;;2429:22:68;::::1;2408:107;;;::::0;-1:-1:-1;;;2408:107:68;;21424:2:72;2408:107:68::1;::::0;::::1;21406:21:72::0;21463:2;21443:18;;;21436:30;21502:34;21482:18;;;21475:62;-1:-1:-1;;;21553:18:72;;;21546:36;21599:19;;2408:107:68::1;21222:402:72::0;2408:107:68::1;2525:13;:24:::0;;-1:-1:-1;;;;;;2525:24:68::1;-1:-1:-1::0;;;;;2525:24:68;;;::::1;::::0;;;::::1;::::0;;2336:220::o;9595:247:51:-;9710:115;;;;;689:25:72;;;9654:181:51;;-1:-1:-1;;;9750:35:51;662:18:72;;9710:115:51;543:177:72;1022:1364:65;1205:4;1199:11;1496:12;;1553:1;;;;1469:4;1458:16;;1429:7;1402:5;1368:204;1341:682;;1681:16;1671:161;;-1:-1:-1;;;1728:10:65;1721:51;1812:1;1800:10;1793:21;1671:161;1939:16;1936:1;1924:10;1909:47;1992:16;1980:10;1973:36;1341:682;2124:16;2112:10;2105:36;2191:4;2179:10;2175:21;2242:16;2239:1;2224:13;2209:50;2352:16;2333:36;2327:4;2320:50;1022:1364;;-1:-1:-1;;1022:1364:65:o;875:129:51:-;1455:13:68;:11;:13::i;2938:974:7:-;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:7;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:7;;;;;;;;-1:-1:-1;;3531:63:7;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:7;;22020:2:72;3758:56:7;;;22002:21:72;22059:2;22039:18;;;22032:30;22098:34;22078:18;;;22071:62;-1:-1:-1;;;22149:18:72;;;22142:44;22203:19;;3758:56:7;21818:410:72;3527:302:7;-1:-1:-1;;;;;;;;;;;3644:28:7;;3636:82;;;;-1:-1:-1;;;3636:82:7;;22435:2:72;3636:82:7;;;22417:21:72;22474:2;22454:18;;;22447:30;22513:34;22493:18;;;22486:62;-1:-1:-1;;;22564:18:72;;;22557:39;22613:19;;3636:82:7;22233:405:72;3636:82:7;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;1720:130:68:-;1634:6;;-1:-1:-1;;;;;1634:6:68;920:10:16;1783:23:68;1775:68;;;;-1:-1:-1;;;1775:68:68;;22845:2:72;1775:68:68;;;22827:21:72;;;22864:18;;;22857:30;22923:34;22903:18;;;22896:62;22975:18;;1775:68:68;22643:356:72;2932:223:68;3024:6;;;-1:-1:-1;;;;;3040:17:68;;;-1:-1:-1;;;;;;3040:17:68;;;;;;;;3067:13;:26;;;;;;;;3108:40;;3024:6;;;3040:17;3024:6;;3108:40;;3005:16;;3108:40;2995:160;2932:223;:::o;1124:95::-;5379:13:9;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:9;;;;;;;:::i;:::-;1186:26:68::1;:24;:26::i;1805:281:7:-:0;-1:-1:-1;;;;;1476:19:15;;;1878:106:7;;;;-1:-1:-1;;;1878:106:7;;23618:2:72;1878:106:7;;;23600:21:72;23657:2;23637:18;;;23630:30;23696:34;23676:18;;;23669:62;-1:-1:-1;;;23747:18:72;;;23740:43;23800:19;;1878:106:7;23416:409:72;1878:106:7;-1:-1:-1;;;;;;;;;;;1994:85:7;;-1:-1:-1;;;;;;1994:85:7;-1:-1:-1;;;;;1994:85:7;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;1225:111:68:-;5379:13:9;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:9;;;;;;;:::i;:::-;1297:32:68::1;920:10:16::0;1297:18:68::1;:32::i;2192:152:7:-:0;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:7;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:15;;;7195:88:7;;;;-1:-1:-1;;;7195:88:7;;24032:2:72;7195:88:7;;;24014:21:72;24071:2;24051:18;;;24044:30;24110:34;24090:18;;;24083:62;-1:-1:-1;;;24161:18:72;;;24154:36;24207:19;;7195:88:7;23830:402:72;7195:88:7;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:7;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:7:o;7438:295:15:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:15;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;:::-;7438:295;;;;;:::o;7739:540::-;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:15;;;;;;;;:::i;14:131:72:-;-1:-1:-1;;;;;89:31:72;;79:42;;69:70;;135:1;132;125:12;150:388;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:72;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;725:248::-;793:6;801;854:2;842:9;833:7;829:23;825:32;822:52;;;870:1;867;860:12;822:52;-1:-1:-1;;893:23:72;;;963:2;948:18;;;935:32;;-1:-1:-1;725:248:72:o;1295:180::-;1354:6;1407:2;1395:9;1386:7;1382:23;1378:32;1375:52;;;1423:1;1420;1413:12;1375:52;-1:-1:-1;1446:23:72;;1295:180;-1:-1:-1;1295:180:72:o;1943:250::-;2028:1;2038:113;2052:6;2049:1;2046:13;2038:113;;;2128:11;;;2122:18;2109:11;;;2102:39;2074:2;2067:10;2038:113;;;-1:-1:-1;;2185:1:72;2167:16;;2160:27;1943:250::o;2198:271::-;2240:3;2278:5;2272:12;2305:6;2300:3;2293:19;2321:76;2390:6;2383:4;2378:3;2374:14;2367:4;2360:5;2356:16;2321:76;:::i;:::-;2451:2;2430:15;-1:-1:-1;;2426:29:72;2417:39;;;;2458:4;2413:50;;2198:271;-1:-1:-1;;2198:271:72:o;2917:752::-;2969:3;3008:4;3003:3;2999:14;3040:5;3034:12;3029:3;3022:25;3066:4;3117:2;3110:5;3106:14;3100:21;3095:2;3090:3;3086:12;3079:43;3171:4;3164:5;3160:16;3154:23;3147:4;3142:3;3138:14;3131:47;3224:4;3217:5;3213:16;3207:23;3262:4;3255;3250:3;3246:14;3239:28;3289:4;3322:12;3316:19;3357:6;3351:4;3344:20;3391:3;3386;3382:13;3373:22;;3436:2;3422:12;3418:21;3404:35;;3457:1;3448:10;;3467:175;3481:6;3478:1;3475:13;3467:175;;;3544:13;;3530:28;;3617:15;;;;3503:1;3496:9;;;;;3580:14;;;;3467:175;;3914:2060;4613:3;4625:21;;;4686:13;;-1:-1:-1;;;;;4682:39:72;;;4662:18;;;4655:67;;;;4769:4;4757:17;;4751:24;1835:4;1824:16;4830:3;4815:19;;1812:29;4884:4;4872:17;;4866:24;1924:6;1913:18;4948:3;4933:19;;1901:31;5002:4;4990:17;;4984:24;1044:31;5067:3;5052:19;;1032:44;5121:4;5109:17;;5103:24;5164:6;5158:3;5143:19;;5136:35;-1:-1:-1;;5194:54:72;5243:3;5228:19;;5103:24;5194:54;:::i;:::-;5180:68;;5303:4;5295:6;5291:17;5285:24;5279:3;5268:9;5264:19;5257:53;5365:4;5357:6;5353:17;5347:24;5341:3;5330:9;5326:19;5319:53;5427:4;5419:6;5415:17;5409:24;5403:3;5392:9;5388:19;5381:53;5443:59;5496:4;5485:9;5481:20;5473:6;2551:12;;2539:25;;2613:4;2602:16;;;2596:23;2580:14;;2573:47;2474:152;5443:59;2551:12;;5564:4;5549:20;;2539:25;2613:4;2602:16;;2596:23;2580:14;;;2573:47;2709:12;;5633:4;5618:20;;2697:25;2771:4;2760:16;;2754:23;2738:14;;;2731:47;2827:4;2816:16;;2810:23;2794:14;;;2787:47;2897:4;2886:16;;2880:23;2873:31;2866:39;2850:14;;;2843:63;5688:9;5680:6;5676:22;5670:3;5659:9;5655:19;5648:51;5716:43;5752:6;5744;5716:43;:::i;:::-;3756:12;;-1:-1:-1;;;;;3752:38:72;5822:3;5807:19;;3740:51;3840:4;3829:16;;3823:23;3807:14;;;3800:47;3896:4;3885:16;;3879:23;3863:14;;;3856:47;5708:51;-1:-1:-1;5768:59:72;;-1:-1:-1;3674:235:72;5768:59;5864:6;5858:3;5847:9;5843:19;5836:35;5908:6;5902:3;5891:9;5887:19;5880:35;5924:44;5963:3;5952:9;5948:19;5940:6;1550:13;1543:21;1531:34;;1480:91;5924:44;3914:2060;;;;;;;;;;;;:::o;5979:315::-;6047:6;6055;6108:2;6096:9;6087:7;6083:23;6079:32;6076:52;;;6124:1;6121;6114:12;6076:52;6163:9;6150:23;6182:31;6207:5;6182:31;:::i;:::-;6232:5;6284:2;6269:18;;;;6256:32;;-1:-1:-1;;;5979:315:72:o;7535:160::-;7600:20;;7656:13;;7649:21;7639:32;;7629:60;;7685:1;7682;7675:12;7629:60;7535:160;;;:::o;7700:383::-;7774:6;7782;7790;7843:2;7831:9;7822:7;7818:23;7814:32;7811:52;;;7859:1;7856;7849:12;7811:52;7898:9;7885:23;7917:31;7942:5;7917:31;:::i;:::-;7967:5;-1:-1:-1;7991:35:72;8022:2;8007:18;;7991:35;:::i;:::-;7981:45;;8073:2;8062:9;8058:18;8045:32;8035:42;;7700:383;;;;;:::o;8088:159::-;8155:20;;8215:6;8204:18;;8194:29;;8184:57;;8237:1;8234;8227:12;8252:127;8313:10;8308:3;8304:20;8301:1;8294:31;8344:4;8341:1;8334:15;8368:4;8365:1;8358:15;8384:632;8449:5;8479:18;8520:2;8512:6;8509:14;8506:40;;;8526:18;;:::i;:::-;8601:2;8595:9;8569:2;8655:15;;-1:-1:-1;;8651:24:72;;;8677:2;8647:33;8643:42;8631:55;;;8701:18;;;8721:22;;;8698:46;8695:72;;;8747:18;;:::i;:::-;8787:10;8783:2;8776:22;8816:6;8807:15;;8846:6;8838;8831:22;8886:3;8877:6;8872:3;8868:16;8865:25;8862:45;;;8903:1;8900;8893:12;8862:45;8953:6;8948:3;8941:4;8933:6;8929:17;8916:44;9008:1;9001:4;8992:6;8984;8980:19;8976:30;8969:41;;;;8384:632;;;;;:::o;9021:222::-;9064:5;9117:3;9110:4;9102:6;9098:17;9094:27;9084:55;;9135:1;9132;9125:12;9084:55;9157:80;9233:3;9224:6;9211:20;9204:4;9196:6;9192:17;9157:80;:::i;9248:600::-;9352:6;9360;9368;9376;9384;9437:3;9425:9;9416:7;9412:23;9408:33;9405:53;;;9454:1;9451;9444:12;9405:53;9490:9;9477:23;9467:33;;9547:2;9536:9;9532:18;9519:32;9509:42;;9570:37;9603:2;9592:9;9588:18;9570:37;:::i;:::-;9560:47;;9654:2;9643:9;9639:18;9626:32;9616:42;;9709:3;9698:9;9694:19;9681:33;9737:18;9729:6;9726:30;9723:50;;;9769:1;9766;9759:12;9723:50;9792;9834:7;9825:6;9814:9;9810:22;9792:50;:::i;:::-;9782:60;;;9248:600;;;;;;;;:::o;9853:878::-;9967:6;9975;9983;9991;9999;10007;10060:3;10048:9;10039:7;10035:23;10031:33;10028:53;;;10077:1;10074;10067:12;10028:53;10116:9;10103:23;10135:31;10160:5;10135:31;:::i;:::-;10185:5;-1:-1:-1;10242:2:72;10227:18;;10214:32;10255:33;10214:32;10255:33;:::i;:::-;10307:7;-1:-1:-1;10365:2:72;10350:18;;10337:32;10392:18;10381:30;;10378:50;;;10424:1;10421;10414:12;10378:50;10447;10489:7;10480:6;10469:9;10465:22;10447:50;:::i;:::-;10437:60;;;10549:2;10538:9;10534:18;10521:32;10562:33;10587:7;10562:33;:::i;:::-;9853:878;;;;-1:-1:-1;9853:878:72;;10668:3;10653:19;;10640:33;;10720:3;10705:19;;;10692:33;;-1:-1:-1;9853:878:72;-1:-1:-1;;9853:878:72:o;10736:247::-;10795:6;10848:2;10836:9;10827:7;10823:23;10819:32;10816:52;;;10864:1;10861;10854:12;10816:52;10903:9;10890:23;10922:31;10947:5;10922:31;:::i;10988:585::-;11065:6;11073;11126:2;11114:9;11105:7;11101:23;11097:32;11094:52;;;11142:1;11139;11132:12;11094:52;11181:9;11168:23;11200:31;11225:5;11200:31;:::i;:::-;11250:5;-1:-1:-1;11306:2:72;11291:18;;11278:32;11333:18;11322:30;;11319:50;;;11365:1;11362;11355:12;11319:50;11388:22;;11441:4;11433:13;;11429:27;-1:-1:-1;11419:55:72;;11470:1;11467;11460:12;11419:55;11493:74;11559:7;11554:2;11541:16;11536:2;11532;11528:11;11493:74;:::i;:::-;11483:84;;;10988:585;;;;;:::o;12244:606::-;12398:6;12406;12414;12467:2;12455:9;12446:7;12442:23;12438:32;12435:52;;;12483:1;12480;12473:12;12435:52;12522:9;12509:23;12541:31;12566:5;12541:31;:::i;:::-;12591:5;-1:-1:-1;12648:2:72;12633:18;;12620:32;12661:33;12620:32;12661:33;:::i;:::-;12713:7;-1:-1:-1;12772:2:72;12757:18;;12744:32;12785:33;12744:32;12785:33;:::i;:::-;12837:7;12827:17;;;12244:606;;;;;:::o;12855:315::-;12923:6;12931;12984:2;12972:9;12963:7;12959:23;12955:32;12952:52;;;13000:1;12997;12990:12;12952:52;13036:9;13023:23;13013:33;;13096:2;13085:9;13081:18;13068:32;13109:31;13134:5;13109:31;:::i;13175:248::-;13240:6;13248;13301:2;13289:9;13280:7;13276:23;13272:32;13269:52;;;13317:1;13314;13307:12;13269:52;13353:9;13340:23;13330:33;;13382:35;13413:2;13402:9;13398:18;13382:35;:::i;:::-;13372:45;;13175:248;;;;;:::o;13428:458::-;13515:6;13523;13531;13584:2;13572:9;13563:7;13559:23;13555:32;13552:52;;;13600:1;13597;13590:12;13552:52;13636:9;13623:23;13613:33;;13693:2;13682:9;13678:18;13665:32;13655:42;;13748:2;13737:9;13733:18;13720:32;13775:18;13767:6;13764:30;13761:50;;;13807:1;13804;13797:12;13761:50;13830;13872:7;13863:6;13852:9;13848:22;13830:50;:::i;:::-;13820:60;;;13428:458;;;;;:::o;13891:460::-;13975:6;13983;13991;13999;14052:3;14040:9;14031:7;14027:23;14023:33;14020:53;;;14069:1;14066;14059:12;14020:53;14105:9;14092:23;14082:33;;14165:2;14154:9;14150:18;14137:32;14178:31;14203:5;14178:31;:::i;:::-;14228:5;-1:-1:-1;14252:37:72;14285:2;14270:18;;14252:37;:::i;:::-;14242:47;;14308:37;14341:2;14330:9;14326:18;14308:37;:::i;:::-;14298:47;;13891:460;;;;;;;:::o;14356:380::-;14435:1;14431:12;;;;14478;;;14499:61;;14553:4;14545:6;14541:17;14531:27;;14499:61;14606:2;14598:6;14595:14;14575:18;14572:38;14569:161;;14652:10;14647:3;14643:20;14640:1;14633:31;14687:4;14684:1;14677:15;14715:4;14712:1;14705:15;15380:518;15639:6;15628:9;15621:25;15682:6;15677:2;15666:9;15662:18;15655:34;15737:6;15729;15725:19;15720:2;15709:9;15705:18;15698:47;15781:6;15776:2;15765:9;15761:18;15754:34;15825:3;15819;15808:9;15804:19;15797:32;15602:4;15846:46;15887:3;15876:9;15872:19;15864:6;15846:46;:::i;:::-;15838:54;15380:518;-1:-1:-1;;;;;;;15380:518:72:o;15903:644::-;16155:4;16201:1;16197;16192:3;16188:11;16184:19;16242:2;16234:6;16230:15;16219:9;16212:34;16294:2;16286:6;16282:15;16277:2;16266:9;16262:18;16255:43;16334:3;16329:2;16318:9;16314:18;16307:31;16355:46;16396:3;16385:9;16381:19;16373:6;16355:46;:::i;:::-;16437:15;;16432:2;16417:18;;16410:43;-1:-1:-1;16484:3:72;16469:19;;16462:35;;;;16528:3;16513:19;;;16506:35;16347:54;15903:644;-1:-1:-1;;;15903:644:72:o;16552:408::-;16754:2;16736:21;;;16793:2;16773:18;;;16766:30;16832:34;16827:2;16812:18;;16805:62;-1:-1:-1;;;16898:2:72;16883:18;;16876:42;16950:3;16935:19;;16552:408::o;16965:::-;17167:2;17149:21;;;17206:2;17186:18;;;17179:30;17245:34;17240:2;17225:18;;17218:62;-1:-1:-1;;;17311:2:72;17296:18;;17289:42;17363:3;17348:19;;16965:408::o;19064:362::-;19269:6;19258:9;19251:25;19312:6;19307:2;19296:9;19292:18;19285:34;19355:2;19350;19339:9;19335:18;19328:30;19232:4;19375:45;19416:2;19405:9;19401:18;19393:6;19375:45;:::i;21629:184::-;21699:6;21752:2;21740:9;21731:7;21727:23;21723:32;21720:52;;;21768:1;21765;21758:12;21720:52;-1:-1:-1;21791:16:72;;21629:184;-1:-1:-1;21629:184:72:o;23004:407::-;23206:2;23188:21;;;23245:2;23225:18;;;23218:30;23284:34;23279:2;23264:18;;23257:62;-1:-1:-1;;;23350:2:72;23335:18;;23328:41;23401:3;23386:19;;23004:407::o;24237:287::-;24366:3;24404:6;24398:13;24420:66;24479:6;24474:3;24467:4;24459:6;24455:17;24420:66;:::i;:::-;24502:16;;;;;24237:287;-1:-1:-1;;24237:287:72:o;24529:220::-;24678:2;24667:9;24660:21;24641:4;24698:45;24739:2;24728:9;24724:18;24716:6;24698:45;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "19875": [
        {
          "start": 3672,
          "length": 32
        },
        {
          "start": 3745,
          "length": 32
        },
        {
          "start": 3974,
          "length": 32
        },
        {
          "start": 4038,
          "length": 32
        },
        {
          "start": 4185,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnershipTransfer()": "b842e87f",
    "activeStrategies(uint256)": "b20b2429",
    "activeTokens(uint256)": "9f224f35",
    "addNewBountyPool(address,address,string,address,uint256,uint256)": "32fce602",
    "billPremium(uint256)": "2dbe051e",
    "claimPremium(uint256)": "f47ec3be",
    "collectAllReferralProfits()": "3e8888d9",
    "collectAllSaloonProfits(address)": "ecd7fbed",
    "collectReferralProfit(address)": "a089a520",
    "collectSaloonProfits(address,address)": "cf9564b9",
    "compoundYieldForPid(uint256)": "e78ea3df",
    "consolidate(uint256)": "949a4a4a",
    "consolidateAll()": "75bfd63d",
    "extendReferralPeriod(uint256,uint256)": "5de406dc",
    "initialize(address,address,address)": "c0c53b8b",
    "makeProjectDeposit(uint256,uint256,string)": "ae07f948",
    "minTokenStakeAmount(address)": "39458723",
    "nftInfo(uint256)": "1f8bc790",
    "owner()": "8da5cb5b",
    "payBounty(uint256,address,uint16,uint16)": "d075afac",
    "pidNFTList(uint256,uint256)": "96ea48e8",
    "pidStrategies(uint256,bytes32)": "074ecf03",
    "poolInfo(uint256)": "1526fe27",
    "projectDepositWithdrawal(uint256,uint256)": "983c1ce0",
    "proxiableUUID()": "52d1902d",
    "receiveStrategyYield(address,uint256)": "1aebcecb",
    "referralBalances(address,address)": "011b408b",
    "saloonBounty()": "79923898",
    "saloonBountyProfit(address)": "e45abd0f",
    "saloonManager()": "220e1124",
    "saloonPremiumProfit(address)": "ca006148",
    "saloonProjectPortal()": "277fd2a1",
    "saloonStrategyProfit(address)": "598d17bf",
    "scheduleProjectDepositWithdrawal(uint256,uint256)": "5669cbef",
    "scheduleUnstake(uint256)": "106d08df",
    "setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)": "30ca0794",
    "setImplementations(address,address,address)": "9300d238",
    "setStrategyFactory(address)": "a5352bfd",
    "stake(uint256,uint256)": "7b0472f0",
    "strategyAddressToPid(address)": "957deecc",
    "tokenWhitelist(address)": "753d7563",
    "transferOwnership(address)": "f2fde38b",
    "unstake(uint256,bool)": "9ebea88c",
    "updateProjectWalletAddress(uint256,address)": "995974c4",
    "updateTokenWhitelist(address,bool,uint256)": "2cb0dfcc",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "windDownBounty(uint256)": "bb7019c1",
    "withdrawProjectYield(uint256)": "db53e8b5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"BountyBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BountyPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"NewBountyDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PremiumBilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalOrUnstakeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"referralPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"tokenWhitelistUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeStrategies\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_projectName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralEndTime\",\"type\":\"uint256\"}],\"name\":\"addNewBountyPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"billPremium\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimPremium\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectAllReferralProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saloonWallet\",\"type\":\"address\"}],\"name\":\"collectAllSaloonProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"collectReferralProfit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_saloonWallet\",\"type\":\"address\"}],\"name\":\"collectSaloonProfits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compoundYieldForPid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"consolidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consolidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"extendReferralPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"_saloonManager\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonProjectPortal\",\"name\":\"_saloonProjectPortal\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonBounty\",\"name\":\"_saloonBounty\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deposit\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_strategyName\",\"type\":\"string\"}],\"name\":\"makeProjectDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minTokenStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelimit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUnstaked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_hunter\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_payoutBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_hunterBonusBPS\",\"type\":\"uint16\"}],\"name\":\"payBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pidNFTList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pidStrategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"apy\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scalingMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.GeneralInfo\",\"name\":\"generalInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"projectDepositHeld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectDepositInStrategy\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.DepositInfo\",\"name\":\"depositInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"premiumBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumAvailable\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.PremiumInfo\",\"name\":\"premiumInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalScheduledAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawalExecuted\",\"type\":\"bool\"}],\"internalType\":\"struct ISaloon.TimelockInfo\",\"name\":\"poolTimelock\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"currentX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unstakedTokens\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ISaloon.CurveInfo\",\"name\":\"curveInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.ReferralInfo\",\"name\":\"referralInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"assessmentPeriodEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"freezeTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"projectDepositWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"receiveStrategyYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonBounty\",\"outputs\":[{\"internalType\":\"contract ISaloonBounty\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonBountyProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonManager\",\"outputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonPremiumProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonProjectPortal\",\"outputs\":[{\"internalType\":\"contract ISaloonProjectPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonStrategyProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"scheduleProjectDepositWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"scheduleUnstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_apy\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_deposit\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_strategyName\",\"type\":\"string\"}],\"name\":\"setAPYandPoolCapAndDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"_saloonManager\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonProjectPortal\",\"name\":\"_saloonProjectPortal\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonBounty\",\"name\":\"_saloonBounty\",\"type\":\"address\"}],\"name\":\"setImplementations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategyFactory\",\"type\":\"address\"}],\"name\":\"setStrategyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyAddressToPid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldHarvest\",\"type\":\"bool\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_projectWallet\",\"type\":\"address\"}],\"name\":\"updateProjectWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minStakeAmount\",\"type\":\"uint256\"}],\"name\":\"updateTokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"windDownBounty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawProjectYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addNewBountyPool(address,address,string,address,uint256,uint256)\":{\"details\":\"Can only be called by the owner.\",\"params\":{\"_projectName\":\"Name of the project that is hosting the bounty\",\"_projectWallet\":\"Address that will be able to deposit funds, set APY and poolCap for the pool\",\"_referralEndTime\":\"Timestamp up until the referral will be active\",\"_referralFee\":\"Referral fee that the referrer will receive (in BPS), max 50%\",\"_referrer\":\"Address of the individual that referred this bounty to The Saloon\",\"_token\":\"Token to be used by bounty pool\"}},\"claimPremium(uint256)\":{\"params\":{\"_tokenId\":\"Token Id of ERC721\"}},\"collectAllSaloonProfits(address)\":{\"params\":{\"_saloonWallet\":\"Address where the funds will go to\"}},\"collectReferralProfit(address)\":{\"params\":{\"_token\":\"Token used by the bounty that was referred\"}},\"collectSaloonProfits(address,address)\":{\"params\":{\"_saloonWallet\":\"Address where the funds will go to\",\"_token\":\"Token address to be transferred\"}},\"compoundYieldForPid(uint256)\":{\"params\":{\"_pid\":\"Pool id whose strategy should be compounded\"}},\"consolidate(uint256)\":{\"params\":{\"_pid\":\"Bounty pool id\"}},\"extendReferralPeriod(uint256,uint256)\":{\"params\":{\"_endTime\":\"The new end time for the referral bonus\",\"_pid\":\"The pool id for the bounty\"}},\"makeProjectDeposit(uint256,uint256,string)\":{\"details\":\"Only callable by projectWallet\",\"params\":{\"_deposit\":\"Amount to be deposited\",\"_pid\":\"Bounty pool id\",\"_strategyName\":\"Name of the strategy where deposit will go to\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"payBounty(uint256,address,uint16,uint16)\":{\"details\":\"only callable by Saloon ownerIncludes Saloon commission + hunter payout\",\"params\":{\"__pid\":\"Bounty pool id\",\"_hunter\":\"Hunter address that will receive payout\",\"_payoutBPS\":\"Percentage of Saloon's fee that will go to hunter as bonus\"}},\"projectDepositWithdrawal(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to withdraw (must be equal to amount scheduled)\",\"_pid\":\"Bounty pool id\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"receiveStrategyYield(address,uint256)\":{\"details\":\"Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS? - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or   referralBalances are incremented.\",\"params\":{\"_amount\":\"Amount being received\",\"_token\":\"Token being received\"}},\"scheduleProjectDepositWithdrawal(uint256,uint256)\":{\"details\":\"withdrawal must be made within a certain time window\",\"params\":{\"_amount\":\"Amount to withdraw\",\"_pid\":\"Bounty pool id\"}},\"scheduleUnstake(uint256)\":{\"details\":\"must be unstaked within a certain time window after scheduled\",\"params\":{\"_tokenId\":\"Token Id of ERC721 being unstaked\"}},\"setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)\":{\"details\":\"Can only be called by the projectWallet\",\"params\":{\"_apy\":\"Average APY that will be paid to stakers\",\"_deposit\":\"Amount to be deopsited as bounty payout\",\"_pid\":\"Bounty pool id\",\"_poolCap\":\"Max size of pool in token amount\",\"_strategyName\":\"Name of the strategy to be used\"}},\"stake(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount to be staked\",\"_pid\":\"Bounty pool id\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256,bool)\":{\"params\":{\"_shouldHarvest\":\"Whether staker wants to claim their owed premium or not\",\"_tokenId\":\"Token Id of ERC721 being unstaked\"}},\"updateProjectWalletAddress(uint256,address)\":{\"params\":{\"_pid\":\"Bounty pool id\",\"_projectWallet\":\"The new project wallet\"}},\"updateTokenWhitelist(address,bool,uint256)\":{\"details\":\"Only one token is allowed per pool\",\"params\":{\"_minStakeAmount\":\"The minimum amount for staking for pools pools using such token\",\"_token\":\"ERC20 to add or remove from whitelist\",\"_whitelisted\":\"bool to select if a token will be added or removed\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"windDownBounty(uint256)\":{\"params\":{\"_pid\":\"Bounty pool id\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addNewBountyPool(address,address,string,address,uint256,uint256)\":{\"notice\":\"Adds a new bounty pool.\"},\"claimPremium(uint256)\":{\"notice\":\"Claims premium for specified tokenId\"},\"collectAllReferralProfits()\":{\"notice\":\"Allows referrers to collect their profit from all bounties for all tokens\"},\"collectAllSaloonProfits(address)\":{\"notice\":\"Transfer Saloon profits for all tokens from premiums and bounties collected\"},\"collectReferralProfit(address)\":{\"notice\":\"Allows referrers to collect their profit from all bounties for one token\"},\"collectSaloonProfits(address,address)\":{\"notice\":\"Transfer Saloon profits for a specific token from premiums and bounties collected\"},\"compoundYieldForPid(uint256)\":{\"notice\":\"Harvest pending yield from active strategy for single pid and reinvest\"},\"consolidate(uint256)\":{\"notice\":\"Processes unstakes and calculates new APY for remaining stakers of a specific pool\"},\"consolidateAll()\":{\"notice\":\"Processes unstakes and calculates new APY for remaining stakers for all pools\"},\"extendReferralPeriod(uint256,uint256)\":{\"notice\":\"Extend the referral period for the bounty. The new end time can only be larger than the current value.\"},\"makeProjectDeposit(uint256,uint256,string)\":{\"notice\":\"Makes a deposit that will serve as bounty payout\"},\"payBounty(uint256,address,uint16,uint16)\":{\"notice\":\"Pays valid bounty submission to hunter\"},\"projectDepositWithdrawal(uint256,uint256)\":{\"notice\":\"Completes scheduled withdrawal\"},\"receiveStrategyYield(address,uint256)\":{\"notice\":\"Callback function from strategies upon converting yield to underlying\"},\"scheduleProjectDepositWithdrawal(uint256,uint256)\":{\"notice\":\"Schedules withdrawal for a project deposit\"},\"scheduleUnstake(uint256)\":{\"notice\":\"Schedule unstake with specific amount\"},\"setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)\":{\"notice\":\"Sets the average APY,Pool Cap and deposits project payout\"},\"stake(uint256,uint256)\":{\"notice\":\"Stake tokens in a Bounty pool to earn premium payments.\"},\"unstake(uint256,bool)\":{\"notice\":\"Unstake scheduled tokenId\"},\"updateProjectWalletAddress(uint256,address)\":{\"notice\":\"Updates the pool's project wallet address\"},\"updateTokenWhitelist(address,bool,uint256)\":{\"notice\":\"Updates the list of ERC20 tokens allow to be used in bounty pools_minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value\"},\"windDownBounty(uint256)\":{\"notice\":\"Deactivates pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SaloonRelay.sol\":\"SaloonRelay\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":decimath/=lib/decimath/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31\",\"dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb\",\"dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622\",\"dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x26058f63de05c657b2409bb4349c25b3cd3d0d61f523318b661894b7ec34fc7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5df5fc65c6255a2fceeadb3ff3d419878eda019f93d015d4faf96c5c44c54329\",\"dweb:/ipfs/QmeNa1t44nAMjhwEcN86sf5udkpATLWHQkdXbaTrzvYHTW\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/prb-math/src/Core.sol\":{\"keccak256\":\"0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc\",\"dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo\"]},\"lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4\",\"dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ\"]},\"src/SaloonRelay.sol\":{\"keccak256\":\"0x1711580de283cab2ab9fb89a13826512aaeeaa63d717f9cd401ce0b4414323fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://291cc69d515af71aecf084edac6eecc04924ff5f2a5b1df01077e9c7943d0e12\",\"dweb:/ipfs/QmTLemGcBQA7X1Q3Jagg8a6JSvDhrKZaT5W5TNVdAJNsDu\"]},\"src/SaloonStorage.sol\":{\"keccak256\":\"0x123af92f266010e57ad77c4a1d4c387829b7eae09d85c37b324e0508ebf5f074\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa9be6a365dade7d9e52000f2f9e31898ce8251a203b5ef4fed1eea4b06904a9\",\"dweb:/ipfs/QmPdf3xWY6d1n2WApn932XXiVjhxiq3szhMnVSCyu8EQw8\"]},\"src/StargateStrategy.sol\":{\"keccak256\":\"0x0633bc75edcdfef96951bcbad280038bb026403f3ef064d898030dd5a620be66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7e5a105815447426d835c8f7f5f124147ca49a1c266327d10ba4e313b122d28\",\"dweb:/ipfs/QmSA4CVzbAHcM5YkBhWEYsmuDxAibPXEPL9Sh2FiPc4Be1\"]},\"src/StrategyFactory.sol\":{\"keccak256\":\"0x3ef442ffea0e03e931d821eebe90677816511ee62ae8249860c43a290862081c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://df5cb9796c8a0d21b1d459d758b9179ac9176c6c923f63be9f88344966ff5a2f\",\"dweb:/ipfs/QmeKmvwNbfMoo3267sRvsSzeuZdFXnHhYTqFJa4VQzT4h3\"]},\"src/interfaces/ISaloon.sol\":{\"keccak256\":\"0x83baf6dfafd196d5f41f86c12fa1f1bf0fe12985b7d1f6a53dd4e67dc075dd1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ca683042dad574e6981cccecc17f937e15f078747f5b8207505844e497d207\",\"dweb:/ipfs/QmU9vwYtMMYu5LGsTAvr96thgWqpHLYZ3iDzgYnK6Y3vrK\"]},\"src/interfaces/ISaloonBounty.sol\":{\"keccak256\":\"0xfaa942dff4f5d30ea4a422c149ffb3ae8f05142874b28ddd2ece24e2a18ed476\",\"urls\":[\"bzz-raw://c6bb05d81cedd55f0117fe07c8e493c5a565d3c37acbc8ef7e8afa79e18eb02e\",\"dweb:/ipfs/QmPqD5krnEsa5MW9pJzhifSrRPwWuvUDv8k3EXppTCzM4y\"]},\"src/interfaces/ISaloonManager.sol\":{\"keccak256\":\"0x0351b5106a56708baf086c5dce378a02c18a8fb4cda4be71ff3ea0557deadd0e\",\"urls\":[\"bzz-raw://7c4dc9baa54a2ddbfe2331dbc1353616218a4b7c9b9c3f5278a55c8747a46ce5\",\"dweb:/ipfs/QmP6cdWqYPmDHAHQu9y9AXBgMX9p5BQMZWaor5uVQfpftn\"]},\"src/interfaces/ISaloonProjectPortal.sol\":{\"keccak256\":\"0x7df7cbdff34fed9c423c9ed19a74e22bfc7b48aaba6698d33bd60e3e979031b5\",\"urls\":[\"bzz-raw://c2ab15d8c96f88a87c31339f6c693224289805ccb0800fd9fba4c6b77377de46\",\"dweb:/ipfs/QmYRc14oZ3aDy1R4xNeSs6L9Sg85NdENZiHPsASp3j3o9g\"]},\"src/interfaces/IStargateLPStaking.sol\":{\"keccak256\":\"0xe9a1809f72ea884a7efbe242ab20c076a410c3c9343f922358c925dde0bb646e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://49f815734c64e5e40562194c971c0e2cd07ab4fe5b598dd31bdbd99d4f7332a3\",\"dweb:/ipfs/QmUMBPbPmDQR3eRj3Witv6zSDxhf5eLZwWM2Rh17LKoDXH\"]},\"src/interfaces/IStargateLPToken.sol\":{\"keccak256\":\"0x833d671a6a8931417d786c94ea52ab7836a5600a62dd9a7fd51a89ae046c1b0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da84e795a91b6ee4c13f765819192ab21f293f73ef19d971da6749d9fd918abb\",\"dweb:/ipfs/QmZ5mGyuaJwGJU3zGqHkmjntKgjeuoaY6xNDzoNwk8aBCA\"]},\"src/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x49e37ab901c32cdff42e175d9331be3c9f049b67f72453100da8643afbb49bcf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3c3d5c34d78c40a967009367cd9b8ac25f3bc46907bc3fb8afaeb2ba5622ebc\",\"dweb:/ipfs/QmYGMT4kXiqKVdf4affdUvHF8ErhqkhqxiVsAwG8pFJMTp\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0x61df32bf05ed8ada74307ad39b9e4feacab1f429b74b089e317714f9c158e48e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://914514dd8e6e691b42b9b594195d5c12f0227179148799678dd633bfb8097852\",\"dweb:/ipfs/QmQrBUcs5AQnKRzR4zbMkjqxtjQagQ9y4UeKHB7kqskJDw\"]},\"src/interfaces/IStrategyFactory.sol\":{\"keccak256\":\"0x053b70c802f8ff3d446dbb1fe4dad88f6af977959d7253b488e0862759381375\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fdaec0ba085431307e27883728914ca26812547e70c033501e1800a33bbf8729\",\"dweb:/ipfs/QmfQa3gdT7RdC9wejgXTK16h5LpE2t34drxkR71Q3G4Yod\"]},\"src/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0x1cbd03c5fe3ee590bdd40fd62c47fe403f6ee3734be9e0c24be2ecfe87bf3f5f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d7b0b3b880c5a29585ffcb3142d78a2f5749cb4c5e1f2461a2052ea0f5cf9a2e\",\"dweb:/ipfs/QmWJg3HTUsEx56YS2ntgoH7f3inuTJvV39WvcC2pQbcNVe\"]},\"src/lib/DelegateCall.sol\":{\"keccak256\":\"0x42940e46c9950fa521644f60131b6d7e7e9f72dffc946c5ea4d97572805a0e84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e72fd325a5ca30a00cde08c0fd31706866538ed1bc9d7b36d8b113680a4a53f2\",\"dweb:/ipfs/QmfZWfizfzZQumN928UrwxHn8Mt4h4cYysqL6Y5RZFENb4\"]},\"src/lib/OwnableUpgradeable.sol\":{\"keccak256\":\"0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5\",\"dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz\"]},\"src/lib/SaloonLib.sol\":{\"keccak256\":\"0x7b4b18c7fa60e84486c89a13097744a5dd84af9156f77fced61c990ffd805fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f80d6be5cc55e81251aff91e5b5a6250f5974e3f3563566f9d1d64ed9ed9f1e\",\"dweb:/ipfs/QmSLJPxBpTc8EH23DtApJqHKqwtAXdWEwZ9rj4PDDsijnS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hunter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBountyDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PremiumBilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalOrUnstakeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "referralPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "tokenWhitelistUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeStrategies",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_projectName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_referrer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_referralFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_referralEndTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewBountyPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "billPremium",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimPremium"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectAllReferralProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_saloonWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectAllSaloonProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectReferralProfit",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_saloonWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectSaloonProfits",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "compoundYieldForPid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consolidate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consolidateAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_endTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendReferralPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "_saloonManager",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonProjectPortal",
              "name": "_saloonProjectPortal",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonBounty",
              "name": "_saloonBounty",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deposit",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_strategyName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeProjectDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minTokenStakeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nftInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "xDelta",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastClaimedTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timelimit",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "hasUnstaked",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "__pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_hunter",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_payoutBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_hunterBonusBPS",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "payBounty"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pidNFTList",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pidStrategies",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "struct ISaloon.GeneralInfo",
              "name": "generalInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "tokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "apy",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "projectWallet",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "projectName",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "poolCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scalingMultiplier",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.DepositInfo",
              "name": "depositInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "projectDepositHeld",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectDepositInStrategy",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.PremiumInfo",
              "name": "premiumInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "premiumBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumAvailable",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.TimelockInfo",
              "name": "poolTimelock",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalScheduledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrawalExecuted",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.CurveInfo",
              "name": "curveInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "currentX",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentY",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "unstakedTokens",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.ReferralInfo",
              "name": "referralInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "referralFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "assessmentPeriodEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "freezeTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "projectDepositWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveStrategyYield"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referralBalances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonBounty",
          "outputs": [
            {
              "internalType": "contract ISaloonBounty",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonBountyProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonManager",
          "outputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonPremiumProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonProjectPortal",
          "outputs": [
            {
              "internalType": "contract ISaloonProjectPortal",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonStrategyProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleProjectDepositWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleUnstake",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "_apy",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "_deposit",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_strategyName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAPYandPoolCapAndDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "_saloonManager",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonProjectPortal",
              "name": "_saloonProjectPortal",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonBounty",
              "name": "_saloonBounty",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setImplementations"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategyFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyFactory"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyAddressToPid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_shouldHarvest",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_projectWallet",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProjectWalletAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_whitelisted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_minStakeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "windDownBounty",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawProjectYield",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "returnedAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addNewBountyPool(address,address,string,address,uint256,uint256)": {
            "details": "Can only be called by the owner.",
            "params": {
              "_projectName": "Name of the project that is hosting the bounty",
              "_projectWallet": "Address that will be able to deposit funds, set APY and poolCap for the pool",
              "_referralEndTime": "Timestamp up until the referral will be active",
              "_referralFee": "Referral fee that the referrer will receive (in BPS), max 50%",
              "_referrer": "Address of the individual that referred this bounty to The Saloon",
              "_token": "Token to be used by bounty pool"
            }
          },
          "claimPremium(uint256)": {
            "params": {
              "_tokenId": "Token Id of ERC721"
            }
          },
          "collectAllSaloonProfits(address)": {
            "params": {
              "_saloonWallet": "Address where the funds will go to"
            }
          },
          "collectReferralProfit(address)": {
            "params": {
              "_token": "Token used by the bounty that was referred"
            }
          },
          "collectSaloonProfits(address,address)": {
            "params": {
              "_saloonWallet": "Address where the funds will go to",
              "_token": "Token address to be transferred"
            }
          },
          "compoundYieldForPid(uint256)": {
            "params": {
              "_pid": "Pool id whose strategy should be compounded"
            }
          },
          "consolidate(uint256)": {
            "params": {
              "_pid": "Bounty pool id"
            }
          },
          "extendReferralPeriod(uint256,uint256)": {
            "params": {
              "_endTime": "The new end time for the referral bonus",
              "_pid": "The pool id for the bounty"
            }
          },
          "makeProjectDeposit(uint256,uint256,string)": {
            "details": "Only callable by projectWallet",
            "params": {
              "_deposit": "Amount to be deposited",
              "_pid": "Bounty pool id",
              "_strategyName": "Name of the strategy where deposit will go to"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "payBounty(uint256,address,uint16,uint16)": {
            "details": "only callable by Saloon ownerIncludes Saloon commission + hunter payout",
            "params": {
              "__pid": "Bounty pool id",
              "_hunter": "Hunter address that will receive payout",
              "_payoutBPS": "Percentage of Saloon's fee that will go to hunter as bonus"
            }
          },
          "projectDepositWithdrawal(uint256,uint256)": {
            "params": {
              "_amount": "Amount to withdraw (must be equal to amount scheduled)",
              "_pid": "Bounty pool id"
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "receiveStrategyYield(address,uint256)": {
            "details": "Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS? - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or   referralBalances are incremented.",
            "params": {
              "_amount": "Amount being received",
              "_token": "Token being received"
            }
          },
          "scheduleProjectDepositWithdrawal(uint256,uint256)": {
            "details": "withdrawal must be made within a certain time window",
            "params": {
              "_amount": "Amount to withdraw",
              "_pid": "Bounty pool id"
            }
          },
          "scheduleUnstake(uint256)": {
            "details": "must be unstaked within a certain time window after scheduled",
            "params": {
              "_tokenId": "Token Id of ERC721 being unstaked"
            }
          },
          "setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)": {
            "details": "Can only be called by the projectWallet",
            "params": {
              "_apy": "Average APY that will be paid to stakers",
              "_deposit": "Amount to be deopsited as bounty payout",
              "_pid": "Bounty pool id",
              "_poolCap": "Max size of pool in token amount",
              "_strategyName": "Name of the strategy to be used"
            }
          },
          "stake(uint256,uint256)": {
            "params": {
              "_amount": "Amount to be staked",
              "_pid": "Bounty pool id"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unstake(uint256,bool)": {
            "params": {
              "_shouldHarvest": "Whether staker wants to claim their owed premium or not",
              "_tokenId": "Token Id of ERC721 being unstaked"
            }
          },
          "updateProjectWalletAddress(uint256,address)": {
            "params": {
              "_pid": "Bounty pool id",
              "_projectWallet": "The new project wallet"
            }
          },
          "updateTokenWhitelist(address,bool,uint256)": {
            "details": "Only one token is allowed per pool",
            "params": {
              "_minStakeAmount": "The minimum amount for staking for pools pools using such token",
              "_token": "ERC20 to add or remove from whitelist",
              "_whitelisted": "bool to select if a token will be added or removed"
            }
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "windDownBounty(uint256)": {
            "params": {
              "_pid": "Bounty pool id"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addNewBountyPool(address,address,string,address,uint256,uint256)": {
            "notice": "Adds a new bounty pool."
          },
          "claimPremium(uint256)": {
            "notice": "Claims premium for specified tokenId"
          },
          "collectAllReferralProfits()": {
            "notice": "Allows referrers to collect their profit from all bounties for all tokens"
          },
          "collectAllSaloonProfits(address)": {
            "notice": "Transfer Saloon profits for all tokens from premiums and bounties collected"
          },
          "collectReferralProfit(address)": {
            "notice": "Allows referrers to collect their profit from all bounties for one token"
          },
          "collectSaloonProfits(address,address)": {
            "notice": "Transfer Saloon profits for a specific token from premiums and bounties collected"
          },
          "compoundYieldForPid(uint256)": {
            "notice": "Harvest pending yield from active strategy for single pid and reinvest"
          },
          "consolidate(uint256)": {
            "notice": "Processes unstakes and calculates new APY for remaining stakers of a specific pool"
          },
          "consolidateAll()": {
            "notice": "Processes unstakes and calculates new APY for remaining stakers for all pools"
          },
          "extendReferralPeriod(uint256,uint256)": {
            "notice": "Extend the referral period for the bounty. The new end time can only be larger than the current value."
          },
          "makeProjectDeposit(uint256,uint256,string)": {
            "notice": "Makes a deposit that will serve as bounty payout"
          },
          "payBounty(uint256,address,uint16,uint16)": {
            "notice": "Pays valid bounty submission to hunter"
          },
          "projectDepositWithdrawal(uint256,uint256)": {
            "notice": "Completes scheduled withdrawal"
          },
          "receiveStrategyYield(address,uint256)": {
            "notice": "Callback function from strategies upon converting yield to underlying"
          },
          "scheduleProjectDepositWithdrawal(uint256,uint256)": {
            "notice": "Schedules withdrawal for a project deposit"
          },
          "scheduleUnstake(uint256)": {
            "notice": "Schedule unstake with specific amount"
          },
          "setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string)": {
            "notice": "Sets the average APY,Pool Cap and deposits project payout"
          },
          "stake(uint256,uint256)": {
            "notice": "Stake tokens in a Bounty pool to earn premium payments."
          },
          "unstake(uint256,bool)": {
            "notice": "Unstake scheduled tokenId"
          },
          "updateProjectWalletAddress(uint256,address)": {
            "notice": "Updates the pool's project wallet address"
          },
          "updateTokenWhitelist(address,bool,uint256)": {
            "notice": "Updates the list of ERC20 tokens allow to be used in bounty pools_minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value"
          },
          "windDownBounty(uint256)": {
            "notice": "Deactivates pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":decimath/=lib/decimath/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SaloonRelay.sol": "SaloonRelay"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1",
        "urls": [
          "bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31",
          "dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5",
        "urls": [
          "bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb",
          "dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2",
        "urls": [
          "bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622",
          "dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a",
        "urls": [
          "bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8",
          "dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x26058f63de05c657b2409bb4349c25b3cd3d0d61f523318b661894b7ec34fc7a",
        "urls": [
          "bzz-raw://5df5fc65c6255a2fceeadb3ff3d419878eda019f93d015d4faf96c5c44c54329",
          "dweb:/ipfs/QmeNa1t44nAMjhwEcN86sf5udkpATLWHQkdXbaTrzvYHTW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
        "urls": [
          "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
          "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/Core.sol": {
        "keccak256": "0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76",
        "urls": [
          "bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc",
          "dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926",
        "urls": [
          "bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4",
          "dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ"
        ],
        "license": "MIT"
      },
      "src/SaloonRelay.sol": {
        "keccak256": "0x1711580de283cab2ab9fb89a13826512aaeeaa63d717f9cd401ce0b4414323fd",
        "urls": [
          "bzz-raw://291cc69d515af71aecf084edac6eecc04924ff5f2a5b1df01077e9c7943d0e12",
          "dweb:/ipfs/QmTLemGcBQA7X1Q3Jagg8a6JSvDhrKZaT5W5TNVdAJNsDu"
        ],
        "license": "MIT"
      },
      "src/SaloonStorage.sol": {
        "keccak256": "0x123af92f266010e57ad77c4a1d4c387829b7eae09d85c37b324e0508ebf5f074",
        "urls": [
          "bzz-raw://fa9be6a365dade7d9e52000f2f9e31898ce8251a203b5ef4fed1eea4b06904a9",
          "dweb:/ipfs/QmPdf3xWY6d1n2WApn932XXiVjhxiq3szhMnVSCyu8EQw8"
        ],
        "license": "MIT"
      },
      "src/StargateStrategy.sol": {
        "keccak256": "0x0633bc75edcdfef96951bcbad280038bb026403f3ef064d898030dd5a620be66",
        "urls": [
          "bzz-raw://b7e5a105815447426d835c8f7f5f124147ca49a1c266327d10ba4e313b122d28",
          "dweb:/ipfs/QmSA4CVzbAHcM5YkBhWEYsmuDxAibPXEPL9Sh2FiPc4Be1"
        ],
        "license": "MIT"
      },
      "src/StrategyFactory.sol": {
        "keccak256": "0x3ef442ffea0e03e931d821eebe90677816511ee62ae8249860c43a290862081c",
        "urls": [
          "bzz-raw://df5cb9796c8a0d21b1d459d758b9179ac9176c6c923f63be9f88344966ff5a2f",
          "dweb:/ipfs/QmeKmvwNbfMoo3267sRvsSzeuZdFXnHhYTqFJa4VQzT4h3"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/ISaloon.sol": {
        "keccak256": "0x83baf6dfafd196d5f41f86c12fa1f1bf0fe12985b7d1f6a53dd4e67dc075dd1a",
        "urls": [
          "bzz-raw://d8ca683042dad574e6981cccecc17f937e15f078747f5b8207505844e497d207",
          "dweb:/ipfs/QmU9vwYtMMYu5LGsTAvr96thgWqpHLYZ3iDzgYnK6Y3vrK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISaloonBounty.sol": {
        "keccak256": "0xfaa942dff4f5d30ea4a422c149ffb3ae8f05142874b28ddd2ece24e2a18ed476",
        "urls": [
          "bzz-raw://c6bb05d81cedd55f0117fe07c8e493c5a565d3c37acbc8ef7e8afa79e18eb02e",
          "dweb:/ipfs/QmPqD5krnEsa5MW9pJzhifSrRPwWuvUDv8k3EXppTCzM4y"
        ],
        "license": null
      },
      "src/interfaces/ISaloonManager.sol": {
        "keccak256": "0x0351b5106a56708baf086c5dce378a02c18a8fb4cda4be71ff3ea0557deadd0e",
        "urls": [
          "bzz-raw://7c4dc9baa54a2ddbfe2331dbc1353616218a4b7c9b9c3f5278a55c8747a46ce5",
          "dweb:/ipfs/QmP6cdWqYPmDHAHQu9y9AXBgMX9p5BQMZWaor5uVQfpftn"
        ],
        "license": null
      },
      "src/interfaces/ISaloonProjectPortal.sol": {
        "keccak256": "0x7df7cbdff34fed9c423c9ed19a74e22bfc7b48aaba6698d33bd60e3e979031b5",
        "urls": [
          "bzz-raw://c2ab15d8c96f88a87c31339f6c693224289805ccb0800fd9fba4c6b77377de46",
          "dweb:/ipfs/QmYRc14oZ3aDy1R4xNeSs6L9Sg85NdENZiHPsASp3j3o9g"
        ],
        "license": null
      },
      "src/interfaces/IStargateLPStaking.sol": {
        "keccak256": "0xe9a1809f72ea884a7efbe242ab20c076a410c3c9343f922358c925dde0bb646e",
        "urls": [
          "bzz-raw://49f815734c64e5e40562194c971c0e2cd07ab4fe5b598dd31bdbd99d4f7332a3",
          "dweb:/ipfs/QmUMBPbPmDQR3eRj3Witv6zSDxhf5eLZwWM2Rh17LKoDXH"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStargateLPToken.sol": {
        "keccak256": "0x833d671a6a8931417d786c94ea52ab7836a5600a62dd9a7fd51a89ae046c1b0f",
        "urls": [
          "bzz-raw://da84e795a91b6ee4c13f765819192ab21f293f73ef19d971da6749d9fd918abb",
          "dweb:/ipfs/QmZ5mGyuaJwGJU3zGqHkmjntKgjeuoaY6xNDzoNwk8aBCA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStargateRouter.sol": {
        "keccak256": "0x49e37ab901c32cdff42e175d9331be3c9f049b67f72453100da8643afbb49bcf",
        "urls": [
          "bzz-raw://b3c3d5c34d78c40a967009367cd9b8ac25f3bc46907bc3fb8afaeb2ba5622ebc",
          "dweb:/ipfs/QmYGMT4kXiqKVdf4affdUvHF8ErhqkhqxiVsAwG8pFJMTp"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0x61df32bf05ed8ada74307ad39b9e4feacab1f429b74b089e317714f9c158e48e",
        "urls": [
          "bzz-raw://914514dd8e6e691b42b9b594195d5c12f0227179148799678dd633bfb8097852",
          "dweb:/ipfs/QmQrBUcs5AQnKRzR4zbMkjqxtjQagQ9y4UeKHB7kqskJDw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStrategyFactory.sol": {
        "keccak256": "0x053b70c802f8ff3d446dbb1fe4dad88f6af977959d7253b488e0862759381375",
        "urls": [
          "bzz-raw://fdaec0ba085431307e27883728914ca26812547e70c033501e1800a33bbf8729",
          "dweb:/ipfs/QmfQa3gdT7RdC9wejgXTK16h5LpE2t34drxkR71Q3G4Yod"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/IUniswapV2Router.sol": {
        "keccak256": "0x1cbd03c5fe3ee590bdd40fd62c47fe403f6ee3734be9e0c24be2ecfe87bf3f5f",
        "urls": [
          "bzz-raw://d7b0b3b880c5a29585ffcb3142d78a2f5749cb4c5e1f2461a2052ea0f5cf9a2e",
          "dweb:/ipfs/QmWJg3HTUsEx56YS2ntgoH7f3inuTJvV39WvcC2pQbcNVe"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/DelegateCall.sol": {
        "keccak256": "0x42940e46c9950fa521644f60131b6d7e7e9f72dffc946c5ea4d97572805a0e84",
        "urls": [
          "bzz-raw://e72fd325a5ca30a00cde08c0fd31706866538ed1bc9d7b36d8b113680a4a53f2",
          "dweb:/ipfs/QmfZWfizfzZQumN928UrwxHn8Mt4h4cYysqL6Y5RZFENb4"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/OwnableUpgradeable.sol": {
        "keccak256": "0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661",
        "urls": [
          "bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5",
          "dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz"
        ],
        "license": "MIT"
      },
      "src/lib/SaloonLib.sol": {
        "keccak256": "0x7b4b18c7fa60e84486c89a13097744a5dd84af9156f77fced61c990ffd805fb3",
        "urls": [
          "bzz-raw://7f80d6be5cc55e81251aff91e5b5a6250f5974e3f3563566f9d1d64ed9ed9f1e",
          "dweb:/ipfs/QmSLJPxBpTc8EH23DtApJqHKqwtAXdWEwZ9rj4PDDsijnS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SaloonRelay.sol",
    "id": 35103,
    "exportedSymbols": {
      "Address": [
        23657
      ],
      "AddressUpgradeable": [
        20498
      ],
      "ContextUpgradeable": [
        20540
      ],
      "DelegateCall": [
        37935
      ],
      "E": [
        25852
      ],
      "ERC1967Upgrade": [
        22061
      ],
      "ERC1967UpgradeUpgradeable": [
        19665
      ],
      "HALF_UNIT": [
        25863
      ],
      "IBeacon": [
        22123
      ],
      "IBeaconUpgradeable": [
        19675
      ],
      "IERC1822Proxiable": [
        21706
      ],
      "IERC1822ProxiableUpgradeable": [
        19296
      ],
      "IERC20": [
        22788
      ],
      "IERC20Permit": [
        22893
      ],
      "ISaloon": [
        36120
      ],
      "ISaloonBounty": [
        36642
      ],
      "ISaloonManager": [
        37060
      ],
      "ISaloonProjectPortal": [
        37460
      ],
      "IStargateLPStaking": [
        37521
      ],
      "IStargateLPToken": [
        37539
      ],
      "IStargateRouter": [
        37563
      ],
      "IStrategy": [
        37593
      ],
      "IStrategyFactory": [
        37605
      ],
      "IUniswapV2Router": [
        37913
      ],
      "Initializable": [
        19844
      ],
      "LOG2_10": [
        25874
      ],
      "LOG2_E": [
        25885
      ],
      "MAX_UD60x18": [
        25896
      ],
      "MAX_WHOLE_UD60x18": [
        25907
      ],
      "OwnableUpgradeable": [
        39793
      ],
      "PI": [
        25915
      ],
      "PRBMathUD60x18__AddOverflow": [
        25791
      ],
      "PRBMathUD60x18__CeilOverflow": [
        25797
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        25809
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        25803
      ],
      "PRBMathUD60x18__GmOverflow": [
        25818
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        25824
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        25830
      ],
      "PRBMathUD60x18__SubUnderflow": [
        25839
      ],
      "PRBMathUD60x18__ToUD60x18Overflow": [
        25844
      ],
      "Proxy": [
        22113
      ],
      "SafeERC20": [
        23211
      ],
      "SafeMath": [
        24063
      ],
      "SaloonLib": [
        40150
      ],
      "SaloonRelay": [
        35102
      ],
      "SaloonStorage": [
        35200
      ],
      "StargateStrategy": [
        35888
      ],
      "StorageSlot": [
        23739
      ],
      "StorageSlotUpgradeable": [
        20600
      ],
      "StrategyFactory": [
        35947
      ],
      "UD60x18": [
        25783
      ],
      "UNIT": [
        25926
      ],
      "UUPSUpgradeable": [
        19980
      ],
      "ZERO": [
        25934
      ],
      "add": [
        26784
      ],
      "and": [
        26807
      ],
      "avg": [
        25997
      ],
      "ceil": [
        26024
      ],
      "div": [
        26052
      ],
      "eq": [
        26830
      ],
      "exp": [
        26095
      ],
      "exp2": [
        26138
      ],
      "floor": [
        26150
      ],
      "frac": [
        26162
      ],
      "fromUD60x18": [
        26642
      ],
      "gm": [
        26226
      ],
      "gt": [
        26853
      ],
      "gte": [
        26876
      ],
      "inv": [
        26248
      ],
      "isZero": [
        26894
      ],
      "ln": [
        26275
      ],
      "log10": [
        26325
      ],
      "log2": [
        26426
      ],
      "lshift": [
        26917
      ],
      "lt": [
        26940
      ],
      "lte": [
        26963
      ],
      "mod": [
        26989
      ],
      "msb": [
        24120
      ],
      "mul": [
        26453
      ],
      "mulDiv": [
        24246
      ],
      "mulDiv18": [
        24289
      ],
      "neq": [
        27012
      ],
      "or": [
        27038
      ],
      "pow": [
        26515
      ],
      "powu": [
        26585
      ],
      "prbExp2": [
        25552
      ],
      "prbSqrt": [
        25773
      ],
      "rshift": [
        27061
      ],
      "sqrt": [
        26624
      ],
      "sub": [
        27087
      ],
      "toUD60x18": [
        26672
      ],
      "uHALF_UNIT": [
        25856
      ],
      "uLOG2_10": [
        25867
      ],
      "uLOG2_E": [
        25878
      ],
      "uMAX_UD60x18": [
        25889
      ],
      "uMAX_WHOLE_UD60x18": [
        25900
      ],
      "uUNIT": [
        25919
      ],
      "ud": [
        26688
      ],
      "ud60x18": [
        26704
      ],
      "uncheckedAdd": [
        27114
      ],
      "uncheckedDiv": [
        27199
      ],
      "uncheckedMul": [
        27226
      ],
      "uncheckedSub": [
        27141
      ],
      "unwrap": [
        26721
      ],
      "wrap": [
        26738
      ],
      "xor": [
        27167
      ]
    },
    "nodeType": "SourceUnit",
    "src": "114:16491:51",
    "nodes": [
      {
        "id": 34408,
        "nodeType": "PragmaDirective",
        "src": "114:24:51",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 34409,
        "nodeType": "ImportDirective",
        "src": "140:75:51",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35103,
        "sourceUnit": 22062,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34410,
        "nodeType": "ImportDirective",
        "src": "216:86:51",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35103,
        "sourceUnit": 19981,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34411,
        "nodeType": "ImportDirective",
        "src": "303:58:51",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "file": "openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35103,
        "sourceUnit": 22114,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34412,
        "nodeType": "ImportDirective",
        "src": "362:38:51",
        "nodes": [],
        "absolutePath": "src/lib/OwnableUpgradeable.sol",
        "file": "./lib/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35103,
        "sourceUnit": 39794,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34413,
        "nodeType": "ImportDirective",
        "src": "401:32:51",
        "nodes": [],
        "absolutePath": "src/lib/DelegateCall.sol",
        "file": "./lib/DelegateCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35103,
        "sourceUnit": 37936,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34414,
        "nodeType": "ImportDirective",
        "src": "434:29:51",
        "nodes": [],
        "absolutePath": "src/SaloonStorage.sol",
        "file": "./SaloonStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35103,
        "sourceUnit": 35201,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35102,
        "nodeType": "ContractDefinition",
        "src": "465:16139:51",
        "nodes": [
          {
            "id": 34423,
            "nodeType": "UsingForDirective",
            "src": "546:31:51",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 34421,
              "name": "DelegateCall",
              "nameLocations": [
                "552:12:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37935,
              "src": "552:12:51"
            },
            "typeName": {
              "id": 34422,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "569:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 34447,
            "nodeType": "FunctionDefinition",
            "src": "583:286:51",
            "nodes": [],
            "body": {
              "id": 34446,
              "nodeType": "Block",
              "src": "755:114:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34437,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39679,
                      "src": "765:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:16:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34439,
                  "nodeType": "ExpressionStatement",
                  "src": "765:16:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34441,
                        "name": "_saloonManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34426,
                        "src": "810:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                          "typeString": "contract ISaloonManager"
                        }
                      },
                      {
                        "id": 34442,
                        "name": "_saloonProjectPortal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34429,
                        "src": "826:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                          "typeString": "contract ISaloonProjectPortal"
                        }
                      },
                      {
                        "id": 34443,
                        "name": "_saloonBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34432,
                        "src": "848:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                          "typeString": "contract ISaloonBounty"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                          "typeString": "contract ISaloonManager"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                          "typeString": "contract ISaloonProjectPortal"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                          "typeString": "contract ISaloonBounty"
                        }
                      ],
                      "id": 34440,
                      "name": "setImplementations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34485,
                      "src": "791:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISaloonManager_$37060_$_t_contract$_ISaloonProjectPortal_$37460_$_t_contract$_ISaloonBounty_$36642_$returns$__$",
                        "typeString": "function (contract ISaloonManager,contract ISaloonProjectPortal,contract ISaloonBounty)"
                      }
                    },
                    "id": 34444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34445,
                  "nodeType": "ExpressionStatement",
                  "src": "791:71:51"
                }
              ]
            },
            "functionSelector": "c0c53b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34434,
                  "name": "initializer",
                  "nameLocations": [
                    "743:11:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19746,
                  "src": "743:11:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "743:11:51"
              }
            ],
            "name": "initialize",
            "nameLocation": "592:10:51",
            "parameters": {
              "id": 34433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34426,
                  "mutability": "mutable",
                  "name": "_saloonManager",
                  "nameLocation": "627:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34447,
                  "src": "612:29:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                    "typeString": "contract ISaloonManager"
                  },
                  "typeName": {
                    "id": 34425,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34424,
                      "name": "ISaloonManager",
                      "nameLocations": [
                        "612:14:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37060,
                      "src": "612:14:51"
                    },
                    "referencedDeclaration": 37060,
                    "src": "612:14:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                      "typeString": "contract ISaloonManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34429,
                  "mutability": "mutable",
                  "name": "_saloonProjectPortal",
                  "nameLocation": "672:20:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34447,
                  "src": "651:41:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                    "typeString": "contract ISaloonProjectPortal"
                  },
                  "typeName": {
                    "id": 34428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34427,
                      "name": "ISaloonProjectPortal",
                      "nameLocations": [
                        "651:20:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37460,
                      "src": "651:20:51"
                    },
                    "referencedDeclaration": 37460,
                    "src": "651:20:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                      "typeString": "contract ISaloonProjectPortal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34432,
                  "mutability": "mutable",
                  "name": "_saloonBounty",
                  "nameLocation": "716:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34447,
                  "src": "702:27:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                    "typeString": "contract ISaloonBounty"
                  },
                  "typeName": {
                    "id": 34431,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34430,
                      "name": "ISaloonBounty",
                      "nameLocations": [
                        "702:13:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36642,
                      "src": "702:13:51"
                    },
                    "referencedDeclaration": 36642,
                    "src": "702:13:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                      "typeString": "contract ISaloonBounty"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:133:51"
            },
            "returnParameters": {
              "id": 34436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34456,
            "nodeType": "FunctionDefinition",
            "src": "875:129:51",
            "nodes": [],
            "body": {
              "id": 34455,
              "nodeType": "Block",
              "src": "1002:2:51",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              19974
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34452,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "988:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39698,
                  "src": "988:9:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "988:9:51"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "884:17:51",
            "overrides": {
              "id": 34451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "971:8:51"
            },
            "parameters": {
              "id": 34450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34449,
                  "mutability": "mutable",
                  "name": "_newImplementation",
                  "nameLocation": "910:18:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34456,
                  "src": "902:26:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:28:51"
            },
            "returnParameters": {
              "id": 34454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1002:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 34485,
            "nodeType": "FunctionDefinition",
            "src": "1262:450:51",
            "nodes": [],
            "body": {
              "id": 34484,
              "nodeType": "Block",
              "src": "1430:282:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34475,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "1538:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1553:18:51",
                              "memberName": "setImplementations",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37005,
                              "src": "1538:33:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ISaloonManager_$37060_$_t_contract$_ISaloonProjectPortal_$37460_$_t_contract$_ISaloonBounty_$36642_$returns$__$",
                                "typeString": "function ISaloonManager.setImplementations(contract ISaloonManager,contract ISaloonProjectPortal,contract ISaloonBounty)"
                              }
                            },
                            "id": 34477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1572:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1538:42:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34478,
                            "name": "_saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34459,
                            "src": "1598:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          },
                          {
                            "id": 34479,
                            "name": "_saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34462,
                            "src": "1630:20:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          },
                          {
                            "id": 34480,
                            "name": "_saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34465,
                            "src": "1668:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "expression": {
                            "id": 34473,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1498:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1502:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1498:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1498:197:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34470,
                            "name": "_saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34459,
                            "src": "1448:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1440:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1440:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1440:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1464:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "1440:44:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:265:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34483,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:265:51"
                }
              ]
            },
            "functionSelector": "9300d238",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setImplementations",
            "nameLocation": "1271:18:51",
            "parameters": {
              "id": 34466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34459,
                  "mutability": "mutable",
                  "name": "_saloonManager",
                  "nameLocation": "1314:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34485,
                  "src": "1299:29:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                    "typeString": "contract ISaloonManager"
                  },
                  "typeName": {
                    "id": 34458,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34457,
                      "name": "ISaloonManager",
                      "nameLocations": [
                        "1299:14:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37060,
                      "src": "1299:14:51"
                    },
                    "referencedDeclaration": 37060,
                    "src": "1299:14:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                      "typeString": "contract ISaloonManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34462,
                  "mutability": "mutable",
                  "name": "_saloonProjectPortal",
                  "nameLocation": "1359:20:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34485,
                  "src": "1338:41:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                    "typeString": "contract ISaloonProjectPortal"
                  },
                  "typeName": {
                    "id": 34461,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34460,
                      "name": "ISaloonProjectPortal",
                      "nameLocations": [
                        "1338:20:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37460,
                      "src": "1338:20:51"
                    },
                    "referencedDeclaration": 37460,
                    "src": "1338:20:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                      "typeString": "contract ISaloonProjectPortal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34465,
                  "mutability": "mutable",
                  "name": "_saloonBounty",
                  "nameLocation": "1403:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34485,
                  "src": "1389:27:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                    "typeString": "contract ISaloonBounty"
                  },
                  "typeName": {
                    "id": 34464,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34463,
                      "name": "ISaloonBounty",
                      "nameLocations": [
                        "1389:13:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36642,
                      "src": "1389:13:51"
                    },
                    "referencedDeclaration": 36642,
                    "src": "1389:13:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                      "typeString": "contract ISaloonBounty"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1289:133:51"
            },
            "returnParameters": {
              "id": 34467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1430:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34507,
            "nodeType": "FunctionDefinition",
            "src": "1718:287:51",
            "nodes": [],
            "body": {
              "id": 34506,
              "nodeType": "Block",
              "src": "1791:214:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34499,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "1898:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1913:18:51",
                              "memberName": "setStrategyFactory",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37010,
                              "src": "1898:33:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                "typeString": "function ISaloonManager.setStrategyFactory(address)"
                              }
                            },
                            "id": 34501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1932:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1898:42:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34502,
                            "name": "_strategyFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34487,
                            "src": "1958:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34497,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1858:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1862:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1858:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1858:130:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34494,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "1809:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1801:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1801:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1801:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1824:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "1801:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:197:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34505,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:197:51"
                }
              ]
            },
            "functionSelector": "a5352bfd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34489,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1781:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39698,
                  "src": "1781:9:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:9:51"
              }
            ],
            "name": "setStrategyFactory",
            "nameLocation": "1727:18:51",
            "parameters": {
              "id": 34488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34487,
                  "mutability": "mutable",
                  "name": "_strategyFactory",
                  "nameLocation": "1754:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34507,
                  "src": "1746:24:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1745:26:51"
            },
            "returnParameters": {
              "id": 34491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34536,
            "nodeType": "FunctionDefinition",
            "src": "2524:413:51",
            "nodes": [],
            "body": {
              "id": 34535,
              "nodeType": "Block",
              "src": "2668:269:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34526,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "2775:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2790:20:51",
                              "memberName": "updateTokenWhitelist",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37040,
                              "src": "2775:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.updateTokenWhitelist(address,bool,uint256) returns (bool)"
                              }
                            },
                            "id": 34528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2811:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2775:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34529,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34510,
                            "src": "2837:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 34530,
                            "name": "_whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34512,
                            "src": "2861:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 34531,
                            "name": "_minStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34514,
                            "src": "2891:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34524,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2735:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2739:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2735:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2735:185:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34521,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "2686:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2678:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2678:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2701:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "2678:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:252:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34534,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:252:51"
                }
              ]
            },
            "documentation": {
              "id": 34508,
              "nodeType": "StructuredDocumentation",
              "src": "2011:508:51",
              "text": "@notice Updates the list of ERC20 tokens allow to be used in bounty pools\n @notice _minStakeAmount must either be set on first whitelisting for token, or must be un-whitelisted and then re-whitelisted to reset value\n @dev Only one token is allowed per pool\n @param _token ERC20 to add or remove from whitelist\n @param _whitelisted bool to select if a token will be added or removed\n @param _minStakeAmount The minimum amount for staking for pools pools using such token"
            },
            "functionSelector": "2cb0dfcc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenWhitelist",
            "nameLocation": "2533:20:51",
            "parameters": {
              "id": 34515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34510,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2571:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34536,
                  "src": "2563:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34512,
                  "mutability": "mutable",
                  "name": "_whitelisted",
                  "nameLocation": "2592:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34536,
                  "src": "2587:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34511,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34514,
                  "mutability": "mutable",
                  "name": "_minStakeAmount",
                  "nameLocation": "2622:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34536,
                  "src": "2614:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:90:51"
            },
            "returnParameters": {
              "id": 34518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34536,
                  "src": "2662:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34516,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2661:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34574,
            "nodeType": "FunctionDefinition",
            "src": "3525:597:51",
            "nodes": [],
            "body": {
              "id": 34573,
              "nodeType": "Block",
              "src": "3767:355:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34561,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "3874:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3889:16:51",
                              "memberName": "addNewBountyPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36822,
                              "src": "3874:31:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function ISaloonManager.addNewBountyPool(address,address,string memory,address,uint256,uint256) returns (uint256)"
                              }
                            },
                            "id": 34563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3906:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3874:40:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34564,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34539,
                            "src": "3932:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 34565,
                            "name": "_projectWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34541,
                            "src": "3956:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 34566,
                            "name": "_projectName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34543,
                            "src": "3988:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 34567,
                            "name": "_referrer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34545,
                            "src": "4018:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 34568,
                            "name": "_referralFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34547,
                            "src": "4045:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34569,
                            "name": "_referralEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34549,
                            "src": "4075:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34559,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3834:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3838:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3834:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3834:271:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34556,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "3785:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3777:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34554,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3777:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3777:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3800:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "3777:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:338:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34572,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:338:51"
                }
              ]
            },
            "documentation": {
              "id": 34537,
              "nodeType": "StructuredDocumentation",
              "src": "2943:577:51",
              "text": "@notice Adds a new bounty pool.\n @dev Can only be called by the owner.\n @param _token Token to be used by bounty pool\n @param _projectWallet Address that will be able to deposit funds, set APY and poolCap for the pool\n @param _projectName Name of the project that is hosting the bounty\n @param _referrer Address of the individual that referred this bounty to The Saloon\n @param _referralFee Referral fee that the referrer will receive (in BPS), max 50%\n @param _referralEndTime Timestamp up until the referral will be active"
            },
            "functionSelector": "32fce602",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewBountyPool",
            "nameLocation": "3534:16:51",
            "parameters": {
              "id": 34550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34539,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3568:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3560:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3560:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34541,
                  "mutability": "mutable",
                  "name": "_projectWallet",
                  "nameLocation": "3592:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3584:22:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34543,
                  "mutability": "mutable",
                  "name": "_projectName",
                  "nameLocation": "3630:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3616:26:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34545,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "3660:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3652:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34547,
                  "mutability": "mutable",
                  "name": "_referralFee",
                  "nameLocation": "3687:12:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3679:20:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3679:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34549,
                  "mutability": "mutable",
                  "name": "_referralEndTime",
                  "nameLocation": "3717:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3709:24:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3550:189:51"
            },
            "returnParameters": {
              "id": 34553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34574,
                  "src": "3758:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3757:9:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34598,
            "nodeType": "FunctionDefinition",
            "src": "4358:301:51",
            "nodes": [],
            "body": {
              "id": 34597,
              "nodeType": "Block",
              "src": "4429:230:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34589,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "4536:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4551:20:51",
                              "memberName": "extendReferralPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36873,
                              "src": "4536:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonManager.extendReferralPeriod(uint256,uint256)"
                              }
                            },
                            "id": 34591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4572:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4536:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34592,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34577,
                            "src": "4598:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34593,
                            "name": "_endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34579,
                            "src": "4620:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34587,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4496:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4500:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4496:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4496:146:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34584,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "4447:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4439:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4439:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4439:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4462:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "4439:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4439:213:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34596,
                  "nodeType": "ExpressionStatement",
                  "src": "4439:213:51"
                }
              ]
            },
            "documentation": {
              "id": 34575,
              "nodeType": "StructuredDocumentation",
              "src": "4128:225:51",
              "text": "@notice Extend the referral period for the bounty. The new end time can only be larger than the current value.\n @param _pid The pool id for the bounty\n @param _endTime The new end time for the referral bonus"
            },
            "functionSelector": "5de406dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extendReferralPeriod",
            "nameLocation": "4367:20:51",
            "parameters": {
              "id": 34580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34577,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "4396:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "4388:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34579,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nameLocation": "4410:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34598,
                  "src": "4402:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4387:32:51"
            },
            "returnParameters": {
              "id": 34581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4429:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34620,
            "nodeType": "FunctionDefinition",
            "src": "4665:206:51",
            "nodes": [],
            "body": {
              "id": 34619,
              "nodeType": "Block",
              "src": "4722:149:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34612,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "4812:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4827:11:51",
                              "memberName": "billPremium",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36829,
                              "src": "4812:26:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.billPremium(uint256) returns (bool)"
                              }
                            },
                            "id": 34614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4839:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4812:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34615,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34600,
                            "src": "4849:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34610,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4789:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4793:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4789:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4789:65:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34607,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "4740:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4732:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34605,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4732:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4732:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4755:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "4732:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4732:132:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34618,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:132:51"
                }
              ]
            },
            "functionSelector": "2dbe051e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "billPremium",
            "nameLocation": "4674:11:51",
            "parameters": {
              "id": 34601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34600,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "4694:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34620,
                  "src": "4686:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4686:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4685:14:51"
            },
            "returnParameters": {
              "id": 34604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34620,
                  "src": "4716:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34602,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4716:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4715:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34646,
            "nodeType": "FunctionDefinition",
            "src": "5093:348:51",
            "nodes": [],
            "body": {
              "id": 34645,
              "nodeType": "Block",
              "src": "5204:237:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34637,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "5311:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5326:20:51",
                              "memberName": "collectSaloonProfits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36866,
                              "src": "5311:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.collectSaloonProfits(address,address) returns (bool)"
                              }
                            },
                            "id": 34639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5347:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5311:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34640,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34623,
                            "src": "5373:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 34641,
                            "name": "_saloonWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34625,
                            "src": "5397:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34635,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5271:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5275:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5271:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5271:153:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34632,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "5222:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5214:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34630,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5214:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5214:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5237:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "5214:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5214:220:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34644,
                  "nodeType": "ExpressionStatement",
                  "src": "5214:220:51"
                }
              ]
            },
            "documentation": {
              "id": 34621,
              "nodeType": "StructuredDocumentation",
              "src": "4877:211:51",
              "text": "@notice Transfer Saloon profits for a specific token from premiums and bounties collected\n @param _token Token address to be transferred\n @param _saloonWallet Address where the funds will go to"
            },
            "functionSelector": "cf9564b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectSaloonProfits",
            "nameLocation": "5102:20:51",
            "parameters": {
              "id": 34626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34623,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5131:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34646,
                  "src": "5123:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5123:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34625,
                  "mutability": "mutable",
                  "name": "_saloonWallet",
                  "nameLocation": "5147:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34646,
                  "src": "5139:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5122:39:51"
            },
            "returnParameters": {
              "id": 34629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34646,
                  "src": "5194:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5194:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5193:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34669,
            "nodeType": "FunctionDefinition",
            "src": "5603:316:51",
            "nodes": [],
            "body": {
              "id": 34668,
              "nodeType": "Block",
              "src": "5703:216:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34661,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "5810:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5825:23:51",
                              "memberName": "collectAllSaloonProfits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36850,
                              "src": "5810:38:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.collectAllSaloonProfits(address) returns (bool)"
                              }
                            },
                            "id": 34663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5849:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5810:47:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34664,
                            "name": "_saloonWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34649,
                            "src": "5875:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34659,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5770:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5774:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5770:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5770:132:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34656,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "5721:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5713:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5713:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5713:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5736:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "5713:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5713:199:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34667,
                  "nodeType": "ExpressionStatement",
                  "src": "5713:199:51"
                }
              ]
            },
            "documentation": {
              "id": 34647,
              "nodeType": "StructuredDocumentation",
              "src": "5447:151:51",
              "text": "@notice Transfer Saloon profits for all tokens from premiums and bounties collected\n @param _saloonWallet Address where the funds will go to"
            },
            "functionSelector": "ecd7fbed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectAllSaloonProfits",
            "nameLocation": "5612:23:51",
            "parameters": {
              "id": 34650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34649,
                  "mutability": "mutable",
                  "name": "_saloonWallet",
                  "nameLocation": "5644:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34669,
                  "src": "5636:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5636:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5635:23:51"
            },
            "returnParameters": {
              "id": 34653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34669,
                  "src": "5693:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5693:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5692:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34692,
            "nodeType": "FunctionDefinition",
            "src": "6079:276:51",
            "nodes": [],
            "body": {
              "id": 34691,
              "nodeType": "Block",
              "src": "6148:207:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34684,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "6255:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6270:21:51",
                              "memberName": "collectReferralProfit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36857,
                              "src": "6255:36:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.collectReferralProfit(address) returns (bool)"
                              }
                            },
                            "id": 34686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6292:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6255:45:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34687,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34672,
                            "src": "6318:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34682,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6215:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6219:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6215:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6215:123:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34679,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "6166:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6158:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34677,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6158:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6158:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6181:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "6158:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6158:190:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34690,
                  "nodeType": "ExpressionStatement",
                  "src": "6158:190:51"
                }
              ]
            },
            "documentation": {
              "id": 34670,
              "nodeType": "StructuredDocumentation",
              "src": "5925:149:51",
              "text": "@notice Allows referrers to collect their profit from all bounties for one token\n @param _token Token used by the bounty that was referred"
            },
            "functionSelector": "a089a520",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectReferralProfit",
            "nameLocation": "6088:21:51",
            "parameters": {
              "id": 34673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34672,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6118:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34692,
                  "src": "6110:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6110:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6109:16:51"
            },
            "returnParameters": {
              "id": 34676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34692,
                  "src": "6142:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6142:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6141:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34712,
            "nodeType": "FunctionDefinition",
            "src": "6451:248:51",
            "nodes": [],
            "body": {
              "id": 34711,
              "nodeType": "Block",
              "src": "6512:187:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34705,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37060,
                                "src": "6619:14:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37060_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 34706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6634:25:51",
                              "memberName": "collectAllReferralProfits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36843,
                              "src": "6619:40:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$__$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.collectAllReferralProfits() returns (bool)"
                              }
                            },
                            "id": 34707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6660:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6619:49:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 34703,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6579:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6583:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6579:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6579:103:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34700,
                            "name": "saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35115,
                            "src": "6530:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37060",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 34699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6522:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6522:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6522:22:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6545:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "6522:43:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6522:170:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34710,
                  "nodeType": "ExpressionStatement",
                  "src": "6522:170:51"
                }
              ]
            },
            "documentation": {
              "id": 34693,
              "nodeType": "StructuredDocumentation",
              "src": "6361:85:51",
              "text": "@notice Allows referrers to collect their profit from all bounties for all tokens"
            },
            "functionSelector": "3e8888d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectAllReferralProfits",
            "nameLocation": "6460:25:51",
            "parameters": {
              "id": 34694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6485:2:51"
            },
            "returnParameters": {
              "id": 34697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34712,
                  "src": "6506:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34695,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6506:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6505:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34742,
            "nodeType": "FunctionDefinition",
            "src": "7737:417:51",
            "nodes": [],
            "body": {
              "id": 34741,
              "nodeType": "Block",
              "src": "7876:278:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34731,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "7982:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7996:9:51",
                              "memberName": "payBounty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36453,
                              "src": "7982:23:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_address_$_t_uint16_$_t_uint16_$returns$__$",
                                "typeString": "function ISaloonBounty.payBounty(uint256,address,uint16,uint16)"
                              }
                            },
                            "id": 34733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8006:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7982:32:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34734,
                            "name": "__pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34715,
                            "src": "8032:5:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34735,
                            "name": "_hunter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34717,
                            "src": "8055:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 34736,
                            "name": "_payoutBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34719,
                            "src": "8080:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "id": 34737,
                            "name": "_hunterBonusBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34721,
                            "src": "8108:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "id": 34729,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7942:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7946:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7942:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7942:195:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34726,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "7894:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7886:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34724,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7886:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7886:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7908:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "7886:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7886:261:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34740,
                  "nodeType": "ExpressionStatement",
                  "src": "7886:261:51"
                }
              ]
            },
            "documentation": {
              "id": 34713,
              "nodeType": "StructuredDocumentation",
              "src": "7337:395:51",
              "text": "@notice Pays valid bounty submission to hunter\n @dev only callable by Saloon owner\n @dev Includes Saloon commission + hunter payout\n @param __pid Bounty pool id\n @param _hunter Hunter address that will receive payout\n @param _payoutBPS Percentage of pool to payout in BPS\n @param _payoutBPS Percentage of Saloon's fee that will go to hunter as bonus"
            },
            "functionSelector": "d075afac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payBounty",
            "nameLocation": "7746:9:51",
            "parameters": {
              "id": 34722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34715,
                  "mutability": "mutable",
                  "name": "__pid",
                  "nameLocation": "7773:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34742,
                  "src": "7765:13:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7765:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34717,
                  "mutability": "mutable",
                  "name": "_hunter",
                  "nameLocation": "7796:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34742,
                  "src": "7788:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7788:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34719,
                  "mutability": "mutable",
                  "name": "_payoutBPS",
                  "nameLocation": "7820:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34742,
                  "src": "7813:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 34718,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7813:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34721,
                  "mutability": "mutable",
                  "name": "_hunterBonusBPS",
                  "nameLocation": "7847:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34742,
                  "src": "7840:22:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 34720,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7840:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7755:113:51"
            },
            "returnParameters": {
              "id": 34723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7876:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34766,
            "nodeType": "FunctionDefinition",
            "src": "8310:205:51",
            "nodes": [],
            "body": {
              "id": 34765,
              "nodeType": "Block",
              "src": "8365:150:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34757,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "8454:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8468:5:51",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36578,
                              "src": "8454:19:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function ISaloonBounty.stake(uint256,uint256) returns (uint256)"
                              }
                            },
                            "id": 34759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8474:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8454:28:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34760,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34745,
                            "src": "8484:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34761,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34747,
                            "src": "8490:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34755,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8431:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8435:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8431:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8431:67:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34752,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "8383:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8375:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8375:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8375:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8397:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "8375:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8375:133:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34764,
                  "nodeType": "ExpressionStatement",
                  "src": "8375:133:51"
                }
              ]
            },
            "documentation": {
              "id": 34743,
              "nodeType": "StructuredDocumentation",
              "src": "8160:145:51",
              "text": "@notice Stake tokens in a Bounty pool to earn premium payments.\n @param _pid Bounty pool id\n @param _amount Amount to be staked"
            },
            "functionSelector": "7b0472f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "8319:5:51",
            "parameters": {
              "id": 34748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34745,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "8333:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34766,
                  "src": "8325:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8325:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34747,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8347:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34766,
                  "src": "8339:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8339:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8324:31:51"
            },
            "returnParameters": {
              "id": 34749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8365:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34789,
            "nodeType": "FunctionDefinition",
            "src": "8708:268:51",
            "nodes": [],
            "body": {
              "id": 34788,
              "nodeType": "Block",
              "src": "8775:201:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34781,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "8881:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8895:15:51",
                              "memberName": "scheduleUnstake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36562,
                              "src": "8881:29:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function ISaloonBounty.scheduleUnstake(uint256) returns (bool)"
                              }
                            },
                            "id": 34783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8911:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8881:38:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34784,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34769,
                            "src": "8937:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34779,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8841:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8845:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8841:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8841:118:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34776,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "8793:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8785:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34774,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8785:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8785:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8807:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "8785:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8785:184:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34787,
                  "nodeType": "ExpressionStatement",
                  "src": "8785:184:51"
                }
              ]
            },
            "documentation": {
              "id": 34767,
              "nodeType": "StructuredDocumentation",
              "src": "8521:182:51",
              "text": "@notice Schedule unstake with specific amount\n @dev must be unstaked within a certain time window after scheduled\n @param _tokenId Token Id of ERC721 being unstaked"
            },
            "functionSelector": "106d08df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleUnstake",
            "nameLocation": "8717:15:51",
            "parameters": {
              "id": 34770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34769,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8741:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34789,
                  "src": "8733:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8733:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8732:18:51"
            },
            "returnParameters": {
              "id": 34773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34789,
                  "src": "8769:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8769:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8768:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34815,
            "nodeType": "FunctionDefinition",
            "src": "9168:325:51",
            "nodes": [],
            "body": {
              "id": 34814,
              "nodeType": "Block",
              "src": "9268:225:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34806,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "9374:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9388:7:51",
                              "memberName": "unstake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36634,
                              "src": "9374:21:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                "typeString": "function ISaloonBounty.unstake(uint256,bool) returns (bool)"
                              }
                            },
                            "id": 34808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9396:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9374:30:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34809,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34792,
                            "src": "9422:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34810,
                            "name": "_shouldHarvest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34794,
                            "src": "9448:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 34804,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9334:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9338:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9334:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9334:142:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34801,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "9286:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9278:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34799,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9278:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9278:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9300:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "9278:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9278:208:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34813,
                  "nodeType": "ExpressionStatement",
                  "src": "9278:208:51"
                }
              ]
            },
            "documentation": {
              "id": 34790,
              "nodeType": "StructuredDocumentation",
              "src": "8982:181:51",
              "text": "@notice Unstake scheduled tokenId\n @param _tokenId Token Id of ERC721 being unstaked\n @param _shouldHarvest Whether staker wants to claim their owed premium or not"
            },
            "functionSelector": "9ebea88c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "9177:7:51",
            "parameters": {
              "id": 34795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34792,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9193:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34815,
                  "src": "9185:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9185:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34794,
                  "mutability": "mutable",
                  "name": "_shouldHarvest",
                  "nameLocation": "9208:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34815,
                  "src": "9203:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34793,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9203:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9184:39:51"
            },
            "returnParameters": {
              "id": 34798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34815,
                  "src": "9258:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34796,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9258:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9257:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34836,
            "nodeType": "FunctionDefinition",
            "src": "9595:247:51",
            "nodes": [],
            "body": {
              "id": 34835,
              "nodeType": "Block",
              "src": "9644:198:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34828,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "9750:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9764:12:51",
                              "memberName": "claimPremium",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36347,
                              "src": "9750:26:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonBounty.claimPremium(uint256)"
                              }
                            },
                            "id": 34830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9777:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9750:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34831,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34818,
                            "src": "9803:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34826,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9710:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9714:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9710:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9710:115:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34823,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "9662:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9654:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9654:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9654:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9676:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "9654:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9654:181:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34834,
                  "nodeType": "ExpressionStatement",
                  "src": "9654:181:51"
                }
              ]
            },
            "documentation": {
              "id": 34816,
              "nodeType": "StructuredDocumentation",
              "src": "9499:91:51",
              "text": "@notice Claims premium for specified tokenId\n @param _tokenId Token Id of ERC721"
            },
            "functionSelector": "f47ec3be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimPremium",
            "nameLocation": "9604:12:51",
            "parameters": {
              "id": 34819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34818,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9625:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34836,
                  "src": "9617:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9617:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9616:18:51"
            },
            "returnParameters": {
              "id": 34820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9644:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34857,
            "nodeType": "FunctionDefinition",
            "src": "10846:189:51",
            "nodes": [],
            "body": {
              "id": 34856,
              "nodeType": "Block",
              "src": "10888:147:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34849,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "10977:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10991:11:51",
                              "memberName": "consolidate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36352,
                              "src": "10977:25:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonBounty.consolidate(uint256)"
                              }
                            },
                            "id": 34851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11003:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "10977:34:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34852,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34839,
                            "src": "11013:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34847,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10954:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10958:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "10954:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10954:64:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34844,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "10906:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10898:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34842,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10898:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10898:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10920:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "10898:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10898:130:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34855,
                  "nodeType": "ExpressionStatement",
                  "src": "10898:130:51"
                }
              ]
            },
            "documentation": {
              "id": 34837,
              "nodeType": "StructuredDocumentation",
              "src": "10712:129:51",
              "text": "@notice Processes unstakes and calculates new APY for remaining stakers of a specific pool\n @param _pid Bounty pool id"
            },
            "functionSelector": "949a4a4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consolidate",
            "nameLocation": "10855:11:51",
            "parameters": {
              "id": 34840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34839,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "10875:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34857,
                  "src": "10867:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10867:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10866:14:51"
            },
            "returnParameters": {
              "id": 34841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10888:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34875,
            "nodeType": "FunctionDefinition",
            "src": "11135:179:51",
            "nodes": [],
            "body": {
              "id": 34874,
              "nodeType": "Block",
              "src": "11170:144:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34868,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36642,
                                "src": "11259:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$36642_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 34869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "11273:14:51",
                              "memberName": "consolidateAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36355,
                              "src": "11259:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                "typeString": "function ISaloonBounty.consolidateAll()"
                              }
                            },
                            "id": 34870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11288:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11259:37:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 34866,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11236:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11240:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11236:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11236:61:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34863,
                            "name": "saloonBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35121,
                            "src": "11188:12:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonBounty_$36642",
                              "typeString": "contract ISaloonBounty"
                            }
                          ],
                          "id": 34862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11180:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11180:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11180:21:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11202:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "11180:42:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11180:127:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34873,
                  "nodeType": "ExpressionStatement",
                  "src": "11180:127:51"
                }
              ]
            },
            "documentation": {
              "id": 34858,
              "nodeType": "StructuredDocumentation",
              "src": "11041:89:51",
              "text": "@notice Processes unstakes and calculates new APY for remaining stakers for all pools"
            },
            "functionSelector": "75bfd63d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consolidateAll",
            "nameLocation": "11144:14:51",
            "parameters": {
              "id": 34859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11158:2:51"
            },
            "returnParameters": {
              "id": 34860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11170:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34908,
            "nodeType": "FunctionDefinition",
            "src": "11978:510:51",
            "nodes": [],
            "body": {
              "id": 34907,
              "nodeType": "Block",
              "src": "12161:327:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34896,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "12274:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 34897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12295:26:51",
                              "memberName": "setAPYandPoolCapAndDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37400,
                              "src": "12274:47:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string memory)"
                              }
                            },
                            "id": 34898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12322:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12274:56:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34899,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34878,
                            "src": "12348:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34900,
                            "name": "_poolCap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34880,
                            "src": "12370:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34901,
                            "name": "_apy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34882,
                            "src": "12396:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "id": 34902,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34884,
                            "src": "12418:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34903,
                            "name": "_strategyName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34886,
                            "src": "12444:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 34894,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12234:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12238:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12234:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12234:237:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34891,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "12179:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 34890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12171:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12171:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12171:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12200:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "12171:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12171:310:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34906,
                  "nodeType": "ExpressionStatement",
                  "src": "12171:310:51"
                }
              ]
            },
            "documentation": {
              "id": 34876,
              "nodeType": "StructuredDocumentation",
              "src": "11573:400:51",
              "text": "@notice Sets the average APY,Pool Cap and deposits project payout\n @dev Can only be called by the projectWallet\n @param _pid Bounty pool id\n @param _poolCap Max size of pool in token amount\n @param _apy Average APY that will be paid to stakers\n @param _deposit Amount to be deopsited as bounty payout\n @param _strategyName Name of the strategy to be used"
            },
            "functionSelector": "30ca0794",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAPYandPoolCapAndDeposit",
            "nameLocation": "11987:26:51",
            "parameters": {
              "id": 34887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34878,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "12031:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34908,
                  "src": "12023:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12023:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34880,
                  "mutability": "mutable",
                  "name": "_poolCap",
                  "nameLocation": "12053:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34908,
                  "src": "12045:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12045:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34882,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "12078:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34908,
                  "src": "12071:11:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 34881,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12071:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34884,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nameLocation": "12100:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34908,
                  "src": "12092:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12092:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34886,
                  "mutability": "mutable",
                  "name": "_strategyName",
                  "nameLocation": "12132:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34908,
                  "src": "12118:27:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34885,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12118:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12013:138:51"
            },
            "returnParameters": {
              "id": 34888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12161:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34935,
            "nodeType": "FunctionDefinition",
            "src": "12760:399:51",
            "nodes": [],
            "body": {
              "id": 34934,
              "nodeType": "Block",
              "src": "12888:271:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34925,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "13001:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 34926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13022:18:51",
                              "memberName": "makeProjectDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37249,
                              "src": "13001:39:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.makeProjectDeposit(uint256,uint256,string memory)"
                              }
                            },
                            "id": 34927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "13041:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13001:48:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34928,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34911,
                            "src": "13067:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34929,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34913,
                            "src": "13089:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34930,
                            "name": "_strategyName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34915,
                            "src": "13115:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 34923,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12961:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12965:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12961:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12961:181:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34920,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "12906:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 34919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12898:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34918,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12898:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12898:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12927:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "12898:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12898:254:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34933,
                  "nodeType": "ExpressionStatement",
                  "src": "12898:254:51"
                }
              ]
            },
            "documentation": {
              "id": 34909,
              "nodeType": "StructuredDocumentation",
              "src": "12494:261:51",
              "text": "@notice Makes a deposit that will serve as bounty payout\n @dev Only callable by projectWallet\n @param _pid Bounty pool id\n @param _deposit Amount to be deposited\n @param _strategyName Name of the strategy where deposit will go to"
            },
            "functionSelector": "ae07f948",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeProjectDeposit",
            "nameLocation": "12769:18:51",
            "parameters": {
              "id": 34916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34911,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "12805:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34935,
                  "src": "12797:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12797:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34913,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nameLocation": "12827:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34935,
                  "src": "12819:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12819:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34915,
                  "mutability": "mutable",
                  "name": "_strategyName",
                  "nameLocation": "12859:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34935,
                  "src": "12845:27:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34914,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12845:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12787:91:51"
            },
            "returnParameters": {
              "id": 34917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12888:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34961,
            "nodeType": "FunctionDefinition",
            "src": "13367:370:51",
            "nodes": [],
            "body": {
              "id": 34960,
              "nodeType": "Block",
              "src": "13484:253:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34952,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "13597:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 34953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13618:32:51",
                              "memberName": "scheduleProjectDepositWithdrawal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37387,
                              "src": "13597:53:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function ISaloonProjectPortal.scheduleProjectDepositWithdrawal(uint256,uint256) returns (bool)"
                              }
                            },
                            "id": 34954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "13651:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13597:62:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34955,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34938,
                            "src": "13677:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34956,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34940,
                            "src": "13699:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34950,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13557:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13561:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13557:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13557:163:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34947,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "13502:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 34946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13494:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34945,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13494:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13494:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13523:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "13494:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13494:236:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34959,
                  "nodeType": "ExpressionStatement",
                  "src": "13494:236:51"
                }
              ]
            },
            "documentation": {
              "id": 34936,
              "nodeType": "StructuredDocumentation",
              "src": "13165:197:51",
              "text": "@notice Schedules withdrawal for a project deposit\n @dev withdrawal must be made within a certain time window\n @param _pid Bounty pool id\n @param _amount Amount to withdraw"
            },
            "functionSelector": "5669cbef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleProjectDepositWithdrawal",
            "nameLocation": "13376:32:51",
            "parameters": {
              "id": 34941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34938,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13417:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34961,
                  "src": "13409:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13409:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34940,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "13431:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34961,
                  "src": "13423:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13423:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13408:31:51"
            },
            "returnParameters": {
              "id": 34944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34961,
                  "src": "13474:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34942,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13474:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13473:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34987,
            "nodeType": "FunctionDefinition",
            "src": "13903:354:51",
            "nodes": [],
            "body": {
              "id": 34986,
              "nodeType": "Block",
              "src": "14012:245:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 34978,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "14125:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 34979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "14146:24:51",
                              "memberName": "projectDepositWithdrawal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37336,
                              "src": "14125:45:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function ISaloonProjectPortal.projectDepositWithdrawal(uint256,uint256) returns (bool)"
                              }
                            },
                            "id": 34980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14171:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14125:54:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 34981,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34964,
                            "src": "14197:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34982,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34966,
                            "src": "14219:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34976,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14085:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14089:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14085:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 34983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14085:155:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34973,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "14030:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 34972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14022:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34971,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14022:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14022:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14051:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "14022:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 34984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14022:228:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 34985,
                  "nodeType": "ExpressionStatement",
                  "src": "14022:228:51"
                }
              ]
            },
            "documentation": {
              "id": 34962,
              "nodeType": "StructuredDocumentation",
              "src": "13743:155:51",
              "text": "@notice Completes scheduled withdrawal\n @param _pid Bounty pool id\n @param _amount Amount to withdraw (must be equal to amount scheduled)"
            },
            "functionSelector": "983c1ce0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "projectDepositWithdrawal",
            "nameLocation": "13912:24:51",
            "parameters": {
              "id": 34967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34964,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13945:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34987,
                  "src": "13937:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13937:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34966,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "13959:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34987,
                  "src": "13951:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13951:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13936:31:51"
            },
            "returnParameters": {
              "id": 34970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34987,
                  "src": "14002:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14002:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14001:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35009,
            "nodeType": "FunctionDefinition",
            "src": "14263:322:51",
            "nodes": [],
            "body": {
              "id": 35008,
              "nodeType": "Block",
              "src": "14369:216:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 35001,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "14482:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 35002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "14503:20:51",
                              "memberName": "withdrawProjectYield",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37459,
                              "src": "14482:41:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function ISaloonProjectPortal.withdrawProjectYield(uint256) returns (uint256)"
                              }
                            },
                            "id": 35003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14524:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14482:50:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 35004,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34989,
                            "src": "14550:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 34999,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14442:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14446:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14442:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 35005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14442:126:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 34996,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "14387:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 34995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14379:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14379:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14379:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14408:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "14379:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 35006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14379:199:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 35007,
                  "nodeType": "ExpressionStatement",
                  "src": "14379:199:51"
                }
              ]
            },
            "functionSelector": "db53e8b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawProjectYield",
            "nameLocation": "14272:20:51",
            "parameters": {
              "id": 34990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34989,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "14301:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35009,
                  "src": "14293:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14293:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14292:14:51"
            },
            "returnParameters": {
              "id": 34993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34992,
                  "mutability": "mutable",
                  "name": "returnedAmount",
                  "nameLocation": "14349:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35009,
                  "src": "14341:22:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14341:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14340:24:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35032,
            "nodeType": "FunctionDefinition",
            "src": "14659:272:51",
            "nodes": [],
            "body": {
              "id": 35031,
              "nodeType": "Block",
              "src": "14721:210:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 35024,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "14834:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 35025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "14855:14:51",
                              "memberName": "windDownBounty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37452,
                              "src": "14834:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function ISaloonProjectPortal.windDownBounty(uint256) returns (bool)"
                              }
                            },
                            "id": 35026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14870:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14834:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 35027,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35012,
                            "src": "14896:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 35022,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14794:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14798:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14794:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 35028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14794:120:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35019,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "14739:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 35018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14731:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35017,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14731:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14731:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 35021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14760:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "14731:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 35029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14731:193:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 35030,
                  "nodeType": "ExpressionStatement",
                  "src": "14731:193:51"
                }
              ]
            },
            "documentation": {
              "id": 35010,
              "nodeType": "StructuredDocumentation",
              "src": "14591:63:51",
              "text": "@notice Deactivates pool\n @param _pid Bounty pool id"
            },
            "functionSelector": "bb7019c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "windDownBounty",
            "nameLocation": "14668:14:51",
            "parameters": {
              "id": 35013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35012,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "14691:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35032,
                  "src": "14683:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14683:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14682:14:51"
            },
            "returnParameters": {
              "id": 35016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35032,
                  "src": "14715:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35014,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14715:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14714:6:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35056,
            "nodeType": "FunctionDefinition",
            "src": "15083:349:51",
            "nodes": [],
            "body": {
              "id": 35055,
              "nodeType": "Block",
              "src": "15178:254:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 35047,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "15291:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 35048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15312:26:51",
                              "memberName": "updateProjectWalletAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37426,
                              "src": "15291:47:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.updateProjectWalletAddress(uint256,address)"
                              }
                            },
                            "id": 35049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15339:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15291:56:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 35050,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35035,
                            "src": "15365:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 35051,
                            "name": "_projectWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35037,
                            "src": "15387:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35045,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15251:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15255:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15251:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 35052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15251:164:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35042,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "15196:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 35041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15188:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15188:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15188:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 35044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15217:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "15188:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 35053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15188:237:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 35054,
                  "nodeType": "ExpressionStatement",
                  "src": "15188:237:51"
                }
              ]
            },
            "documentation": {
              "id": 35033,
              "nodeType": "StructuredDocumentation",
              "src": "14937:141:51",
              "text": "@notice Updates the pool's project wallet address\n @param _pid Bounty pool id\n @param _projectWallet The new project wallet"
            },
            "functionSelector": "995974c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProjectWalletAddress",
            "nameLocation": "15092:26:51",
            "parameters": {
              "id": 35038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35035,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "15127:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35056,
                  "src": "15119:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15119:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35037,
                  "mutability": "mutable",
                  "name": "_projectWallet",
                  "nameLocation": "15141:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35056,
                  "src": "15133:22:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15133:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15118:38:51"
            },
            "returnParameters": {
              "id": 35039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15178:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35080,
            "nodeType": "FunctionDefinition",
            "src": "15865:315:51",
            "nodes": [],
            "body": {
              "id": 35079,
              "nodeType": "Block",
              "src": "15937:243:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 35071,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "16050:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 35072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "16071:20:51",
                              "memberName": "receiveStrategyYield",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37348,
                              "src": "16050:41:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.receiveStrategyYield(address,uint256)"
                              }
                            },
                            "id": 35073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16092:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16050:50:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 35074,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35059,
                            "src": "16118:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 35075,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35061,
                            "src": "16142:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 35069,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16010:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16014:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16010:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 35076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16010:153:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35066,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "15955:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 35065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15947:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35064,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15947:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15947:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 35068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15976:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "15947:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 35077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15947:226:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 35078,
                  "nodeType": "ExpressionStatement",
                  "src": "15947:226:51"
                }
              ]
            },
            "baseFunctions": [
              36119
            ],
            "documentation": {
              "id": 35057,
              "nodeType": "StructuredDocumentation",
              "src": "15438:422:51",
              "text": "@notice Callback function from strategies upon converting yield to underlying\n @dev Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS?\n - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or\n   referralBalances are incremented.\n @param _token Token being received\n @param _amount Amount being received"
            },
            "functionSelector": "1aebcecb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveStrategyYield",
            "nameLocation": "15874:20:51",
            "parameters": {
              "id": 35062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35059,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "15903:6:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35080,
                  "src": "15895:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15895:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35061,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "15919:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35080,
                  "src": "15911:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15911:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15894:33:51"
            },
            "returnParameters": {
              "id": 35063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15937:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35101,
            "nodeType": "FunctionDefinition",
            "src": "16337:265:51",
            "nodes": [],
            "body": {
              "id": 35100,
              "nodeType": "Block",
              "src": "16387:215:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 35093,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37460,
                                "src": "16500:20:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37460_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 35094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "16521:19:51",
                              "memberName": "compoundYieldForPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37235,
                              "src": "16500:40:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.compoundYieldForPid(uint256)"
                              }
                            },
                            "id": 35095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16541:8:51",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16500:49:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 35096,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35083,
                            "src": "16567:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 35091,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16460:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16464:18:51",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16460:22:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 35097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16460:125:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35088,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35118,
                            "src": "16405:19:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37460",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 35087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16397:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16397:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16397:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 35090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16426:20:51",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37934,
                      "src": "16397:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 35098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16397:198:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 35099,
                  "nodeType": "ExpressionStatement",
                  "src": "16397:198:51"
                }
              ]
            },
            "documentation": {
              "id": 35081,
              "nodeType": "StructuredDocumentation",
              "src": "16186:146:51",
              "text": "@notice Harvest pending yield from active strategy for single pid and reinvest\n @param _pid Pool id whose strategy should be compounded"
            },
            "functionSelector": "e78ea3df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compoundYieldForPid",
            "nameLocation": "16346:19:51",
            "parameters": {
              "id": 35084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35083,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "16374:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35101,
                  "src": "16366:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16366:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16365:14:51"
            },
            "returnParameters": {
              "id": 35085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16387:0:51"
            },
            "scope": 35102,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34415,
              "name": "SaloonStorage",
              "nameLocations": [
                "489:13:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35200,
              "src": "489:13:51"
            },
            "id": 34416,
            "nodeType": "InheritanceSpecifier",
            "src": "489:13:51"
          },
          {
            "baseName": {
              "id": 34417,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "504:18:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39793,
              "src": "504:18:51"
            },
            "id": 34418,
            "nodeType": "InheritanceSpecifier",
            "src": "504:18:51"
          },
          {
            "baseName": {
              "id": 34419,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "524:15:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19980,
              "src": "524:15:51"
            },
            "id": 34420,
            "nodeType": "InheritanceSpecifier",
            "src": "524:15:51"
          }
        ],
        "canonicalName": "SaloonRelay",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35102,
          19980,
          19665,
          19296,
          39793,
          20540,
          19844,
          35200,
          36120
        ],
        "name": "SaloonRelay",
        "nameLocation": "474:11:51",
        "scope": 35103,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 51
}