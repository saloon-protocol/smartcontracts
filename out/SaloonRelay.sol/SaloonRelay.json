{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "BountyBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "hunter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BountyPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenDecimals",
          "type": "uint256"
        }
      ],
      "name": "NewBountyDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PremiumBilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOrUnstakeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "referralPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "tokenWhitelistUpdated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnershipTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeStrategies",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        }
      ],
      "name": "getRouterImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "_saloonManager",
          "type": "address"
        }
      ],
      "name": "initManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "_saloonManager",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonProjectPortal",
          "name": "_saloonProjectPortal",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonBounty",
          "name": "_saloonBounty",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonView",
          "name": "_saloonView",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minTokenStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "xDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastClaimedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelimit",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasUnstaked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pidNFTList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pidStrategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "apy",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "projectWallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "projectName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "poolCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "scalingMultiplier",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.GeneralInfo",
          "name": "generalInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "projectDepositHeld",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "projectDepositInStrategy",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.DepositInfo",
          "name": "depositInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "premiumBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premiumAvailable",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.PremiumInfo",
          "name": "premiumInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalScheduledAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "withdrawalExecuted",
              "type": "bool"
            }
          ],
          "internalType": "struct ISaloon.TimelockInfo",
          "name": "poolTimelock",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "currentX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentY",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "unstakedTokens",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ISaloon.CurveInfo",
          "name": "curveInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "referralFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISaloon.ReferralInfo",
          "name": "referralInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "assessmentPeriodEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "freezeTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "receiveStrategyYield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonBounty",
      "outputs": [
        {
          "internalType": "contract ISaloonBounty",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonBountyProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonManager",
      "outputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonPremiumProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonProjectPortal",
      "outputs": [
        {
          "internalType": "contract ISaloonProjectPortal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "saloonStrategyProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saloonView",
      "outputs": [
        {
          "internalType": "contract ISaloonView",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISaloonManager",
          "name": "_saloonManager",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonProjectPortal",
          "name": "_saloonProjectPortal",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonBounty",
          "name": "_saloonBounty",
          "type": "address"
        },
        {
          "internalType": "contract ISaloonView",
          "name": "_saloonView",
          "type": "address"
        }
      ],
      "name": "setImplementations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyAddressToPid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyFactory",
      "outputs": [
        {
          "internalType": "contract IStrategyFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b50608051611d9161004c60003960008181610cde01528181610d2701528181610dc601528181610e060152610e990152611d916000f3fe6080604052600436106101cd5760003560e01c806376e1df48116100f75780639f224f3511610095578063ca00614811610064578063ca0061481461065c578063e45abd0f14610689578063f2fde38b146106b6578063f8c8765e146106d6576101cd565b80639f224f35146105da578063b1fc19d3146105fa578063b20b24291461061a578063b842e87f14610647576101cd565b80638da5cb5b116100d15780638da5cb5b1461054f578063957deecc1461056d57806396ea48e81461059a5780639ef35710146105ba576101cd565b806376e1df48146104f757806379923898146105175780638391454014610537576101cd565b8063277fd2a11161016f57806352d1902d1161013e57806352d1902d14610455578063598d17bf1461046a57806360b2fa7614610497578063753d7563146104b7576101cd565b8063277fd2a1146103d55780633659cfe6146103f557806339458723146104155780634f1ef28614610442576101cd565b80631526fe27116101ab5780631526fe27146102b05780631aebcecb146102e55780631f8bc79014610305578063220e1124146103b5576101cd565b8063011b408b146101ec578063074ecf03146102375780630a07f54314610290575b6101ea6101e56000356001600160e01b0319166106f6565b6109f4565b005b3480156101f857600080fd5b50610224610207366004611794565b600a60209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561024357600080fd5b506102786102523660046117cd565b600c6020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b03909116815260200161022e565b34801561029c57600080fd5b50600354610278906001600160a01b031681565b3480156102bc57600080fd5b506102d06102cb3660046117ef565b610a1d565b60405161022e999897969594939291906118c3565b3480156102f157600080fd5b506101ea610300366004611a06565b610c7e565b34801561031157600080fd5b5061036f6103203660046117ef565b6005602081905260009182526040909120805460018201546002830154600384015460048501549585015460068601546007870154600890970154959794969395929493919290919060ff1689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e083015215156101008201526101200161022e565b3480156103c157600080fd5b50600054610278906001600160a01b031681565b3480156103e157600080fd5b50600154610278906001600160a01b031681565b34801561040157600080fd5b506101ea610410366004611a32565b610cd4565b34801561042157600080fd5b50610224610430366004611a32565b60116020526000908152604090205481565b6101ea610450366004611a65565b610dbc565b34801561046157600080fd5b50610224610e8c565b34801561047657600080fd5b50610224610485366004611a32565b60096020526000908152604090205481565b3480156104a357600080fd5b506101ea6104b2366004611b29565b610f3f565b3480156104c357600080fd5b506104e76104d2366004611a32565b600f6020526000908152604090205460ff1681565b604051901515815260200161022e565b34801561050357600080fd5b50610278610512366004611b85565b6106f6565b34801561052357600080fd5b50600254610278906001600160a01b031681565b34801561054357600080fd5b506102246301e1338081565b34801561055b57600080fd5b506045546001600160a01b0316610278565b34801561057957600080fd5b50610224610588366004611a32565b600e6020526000908152604090205481565b3480156105a657600080fd5b506102246105b53660046117cd565b610f97565b3480156105c657600080fd5b50600b54610278906001600160a01b031681565b3480156105e657600080fd5b506102786105f53660046117ef565b610fc8565b34801561060657600080fd5b506101ea610615366004611a32565b610ff2565b34801561062657600080fd5b506102246106353660046117ef565b600d6020526000908152604090205481565b34801561065357600080fd5b506101ea61102f565b34801561066857600080fd5b50610224610677366004611a32565b60086020526000908152604090205481565b34801561069557600080fd5b506102246106a4366004611a32565b60076020526000908152604090205481565b3480156106c257600080fd5b506101ea6106d1366004611a32565b6110af565b3480156106e257600080fd5b506101ea6106f1366004611b29565b61113e565b60006001600160e01b0319821663a5352bfd60e01b148061072757506001600160e01b03198216630b2c37f360e21b145b8061074257506001600160e01b0319821663197e730160e11b145b8061075d57506001600160e01b0319821663177901b760e21b145b8061077857506001600160e01b031982166316df028f60e11b145b8061079357506001600160e01b0319821663cf9564b960e01b145b806107ae57506001600160e01b0319821663ecd7fbed60e01b145b806107c957506001600160e01b031982166305044d2960e51b145b806107e457506001600160e01b03198216633e8888d960e01b145b156107fa5750506000546001600160a01b031690565b6001600160e01b0319821663341d6beb60e21b148061082957506001600160e01b031982166307b0472f60e41b145b8061084457506001600160e01b0319821663106d08df60e01b145b8061085f57506001600160e01b031982166327afaa2360e21b145b8061087a57506001600160e01b03198216637a3f61df60e11b145b8061089557506001600160e01b031982166381c6f1a760e01b145b806108b057506001600160e01b03198216634a4d252560e11b145b806108cb57506001600160e01b031982166375bfd63d60e01b145b156108e15750506002546001600160a01b031690565b6001600160e01b03198216630c3281e560e21b148061091057506001600160e01b031982166315c0ff2960e31b145b8061092b57506001600160e01b03198216635669cbef60e01b145b8061094657506001600160e01b031982166304c1e0e760e51b145b8061096157506001600160e01b0319821663db53e8b560e01b145b8061097c57506001600160e01b0319821663bb7019c160e01b145b8061099757506001600160e01b031982166326565d3160e21b145b806109b257506001600160e01b03198216631aebcecb60e01b145b806109cd57506001600160e01b0319821663e78ea3df60e01b145b156109e35750506001546001600160a01b031690565b50506003546001600160a01b031690565b3660008037600080366000845af43d6000803e808015610a13573d6000f35b3d6000fd5b505050565b60048181548110610a2d57600080fd5b60009182526020918290206040805161010081018252601890930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b909104169183019190915260018101549092166060820152600282018054929350909183916080840191610aa690611baf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad290611baf565b8015610b1f5780601f10610af457610100808354040283529160200191610b1f565b820191906000526020600020905b815481529060010190602001808311610b0257829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260059093015460609283015282518084018452600686015481526007860154818301528351808501855260088701548152600987015481840152845160808082018752600a8901548252600b89015482860152600c89015482880152600d89015460ff1615158287015286519081018752600e890180548252600f8a01548287015260108a01548289015260118a018054895181890281018901909a52808a52999a9599949893979596929591949186019392909190830182828015610c2857602002820191906000526020600020905b815481526020019060010190808311610c14575b5050509190925250506040805160608101825260128501546001600160a01b0316815260138501546020820152601485015491810191909152601584015460168501546017909501549394919390925060ff1689565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092019092526020810180516001600160e01b0316631aebcecb60e01b179052600154610a18921690611268565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610d255760405162461bcd60e51b8152600401610d1c90611be9565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d6e600080516020611d15833981519152546001600160a01b031690565b6001600160a01b031614610d945760405162461bcd60e51b8152600401610d1c90611c35565b610d9d816112b1565b60408051600080825260208201909252610db9918391906112b9565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e045760405162461bcd60e51b8152600401610d1c90611be9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e4d600080516020611d15833981519152546001600160a01b031690565b6001600160a01b031614610e735760405162461bcd60e51b8152600401610d1c90611c35565b610e7c826112b1565b610e88828260016112b9565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f2c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610d1c565b50600080516020611d1583398151915290565b610f47611424565b600080546001600160a01b039586166001600160a01b0319918216179091556001805494861694821694909417909355600280549285169284169290921790915560038054919093169116179055565b60066020528160005260406000208181548110610fb357600080fd5b90600052602060002001600091509150505481565b60108181548110610fd857600080fd5b6000918252602090912001546001600160a01b0316905081565b6040805160048152602481019091526020810180516001600160e01b031663204a7f0760e21b179052610e88906001600160a01b03831690611268565b6046546001600160a01b031633146110985760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792070656e64696e67206f776e65722063616e2061636365707420747260448201526530b739b332b960d11b6064820152608401610d1c565b6046546110ad906001600160a01b031661147e565b565b6110b7611424565b6001600160a01b03811661111c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d1c565b604680546001600160a01b0319166001600160a01b0392909216919091179055565b601254610100900460ff161580801561115e5750601254600160ff909116105b806111785750303b158015611178575060125460ff166001145b6111db5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d1c565b6012805460ff1916600117905580156111fe576012805461ff0019166101001790555b6112066114db565b61120f85610ff2565b61121b85858585610f3f565b8015611261576012805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6040518151600090819060208501865af461129a573d6112915763037b81af60e11b8152600481fd5b3d6000823e3d81fd5b3d8152602081013d6000823e3d0160405292915050565b610db9611424565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156112ec57610a188361150a565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611346575060408051601f3d908101601f1916820190925261134391810190611c81565b60015b6113a95760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610d1c565b600080516020611d1583398151915281146114185760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610d1c565b50610a188383836115a6565b6045546001600160a01b031633146110ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d1c565b604580546001600160a01b038381166001600160a01b03198084168217909455604680549094169093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601254610100900460ff166115025760405162461bcd60e51b8152600401610d1c90611c9a565b6110ad6115d1565b6001600160a01b0381163b6115775760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610d1c565b600080516020611d1583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6115af83611601565b6000825111806115bc5750805b15610a18576115cb8383611641565b50505050565b601254610100900460ff166115f85760405162461bcd60e51b8152600401610d1c90611c9a565b6110ad3361147e565b61160a8161150a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6116a95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d1c565b600080846001600160a01b0316846040516116c49190611ce5565b600060405180830381855af49150503d80600081146116ff576040519150601f19603f3d011682016040523d82523d6000602084013e611704565b606091505b509150915061172c8282604051806060016040528060278152602001611d3560279139611735565b95945050505050565b6060831561174457508161174e565b61174e8383611755565b9392505050565b8151156117655781518083602001fd5b8060405162461bcd60e51b8152600401610d1c9190611d01565b6001600160a01b0381168114610db957600080fd5b600080604083850312156117a757600080fd5b82356117b28161177f565b915060208301356117c28161177f565b809150509250929050565b600080604083850312156117e057600080fd5b50508035926020909101359150565b60006020828403121561180157600080fd5b5035919050565b60005b8381101561182357818101518382015260200161180b565b50506000910152565b60008151808452611844816020860160208601611808565b601f01601f19169290920160200192915050565b60006080830182518452602080840151818601526040840151604086015260608401516080606087015282815180855260a0880191508383019450600092505b808310156118b85784518252938301936001929092019190830190611898565b509695505050505050565b6102008082528a516001600160a01b039081169183019190915260208b015160ff1661022083015260408b015161ffff1661024083015260608b01511661026082015260808a015161010061028083015260009061192561030084018261182c565b905060a08c01516102a084015260c08c01516102c084015260e08c01516102e084015261195f602084018c80518252602090810151910152565b8951606084015260208a01516080840152885160a0840152602089015160c0840152604089015160e0840152606089015115156101008401528281036101208401526119ab8189611858565b87516001600160a01b03166101408501526020880151610160850152604088015161018085015291506119db9050565b846101a0830152836101c08301526119f86101e083018415159052565b9a9950505050505050505050565b60008060408385031215611a1957600080fd5b8235611a248161177f565b946020939093013593505050565b600060208284031215611a4457600080fd5b813561174e8161177f565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611a7857600080fd5b8235611a838161177f565b9150602083013567ffffffffffffffff80821115611aa057600080fd5b818501915085601f830112611ab457600080fd5b813581811115611ac657611ac6611a4f565b604051601f8201601f19908116603f01168101908382118183101715611aee57611aee611a4f565b81604052828152886020848701011115611b0757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060808587031215611b3f57600080fd5b8435611b4a8161177f565b93506020850135611b5a8161177f565b92506040850135611b6a8161177f565b91506060850135611b7a8161177f565b939692955090935050565b600060208284031215611b9757600080fd5b81356001600160e01b03198116811461174e57600080fd5b600181811c90821680611bc357607f821691505b602082108103611be357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611c9357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611cf7818460208701611808565b9190910192915050565b60208152600061174e602083018461182c56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f41540318f10395684b27ec528cd6e5942f8e6138850a8c56ce66baa89c35fe164736f6c63430008110033",
    "sourceMap": "465:5850:46:-:0;;;1332:4:10;1289:48;;465:5850:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101cd5760003560e01c806376e1df48116100f75780639f224f3511610095578063ca00614811610064578063ca0061481461065c578063e45abd0f14610689578063f2fde38b146106b6578063f8c8765e146106d6576101cd565b80639f224f35146105da578063b1fc19d3146105fa578063b20b24291461061a578063b842e87f14610647576101cd565b80638da5cb5b116100d15780638da5cb5b1461054f578063957deecc1461056d57806396ea48e81461059a5780639ef35710146105ba576101cd565b806376e1df48146104f757806379923898146105175780638391454014610537576101cd565b8063277fd2a11161016f57806352d1902d1161013e57806352d1902d14610455578063598d17bf1461046a57806360b2fa7614610497578063753d7563146104b7576101cd565b8063277fd2a1146103d55780633659cfe6146103f557806339458723146104155780634f1ef28614610442576101cd565b80631526fe27116101ab5780631526fe27146102b05780631aebcecb146102e55780631f8bc79014610305578063220e1124146103b5576101cd565b8063011b408b146101ec578063074ecf03146102375780630a07f54314610290575b6101ea6101e56000356001600160e01b0319166106f6565b6109f4565b005b3480156101f857600080fd5b50610224610207366004611794565b600a60209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561024357600080fd5b506102786102523660046117cd565b600c6020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b03909116815260200161022e565b34801561029c57600080fd5b50600354610278906001600160a01b031681565b3480156102bc57600080fd5b506102d06102cb3660046117ef565b610a1d565b60405161022e999897969594939291906118c3565b3480156102f157600080fd5b506101ea610300366004611a06565b610c7e565b34801561031157600080fd5b5061036f6103203660046117ef565b6005602081905260009182526040909120805460018201546002830154600384015460048501549585015460068601546007870154600890970154959794969395929493919290919060ff1689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e083015215156101008201526101200161022e565b3480156103c157600080fd5b50600054610278906001600160a01b031681565b3480156103e157600080fd5b50600154610278906001600160a01b031681565b34801561040157600080fd5b506101ea610410366004611a32565b610cd4565b34801561042157600080fd5b50610224610430366004611a32565b60116020526000908152604090205481565b6101ea610450366004611a65565b610dbc565b34801561046157600080fd5b50610224610e8c565b34801561047657600080fd5b50610224610485366004611a32565b60096020526000908152604090205481565b3480156104a357600080fd5b506101ea6104b2366004611b29565b610f3f565b3480156104c357600080fd5b506104e76104d2366004611a32565b600f6020526000908152604090205460ff1681565b604051901515815260200161022e565b34801561050357600080fd5b50610278610512366004611b85565b6106f6565b34801561052357600080fd5b50600254610278906001600160a01b031681565b34801561054357600080fd5b506102246301e1338081565b34801561055b57600080fd5b506045546001600160a01b0316610278565b34801561057957600080fd5b50610224610588366004611a32565b600e6020526000908152604090205481565b3480156105a657600080fd5b506102246105b53660046117cd565b610f97565b3480156105c657600080fd5b50600b54610278906001600160a01b031681565b3480156105e657600080fd5b506102786105f53660046117ef565b610fc8565b34801561060657600080fd5b506101ea610615366004611a32565b610ff2565b34801561062657600080fd5b506102246106353660046117ef565b600d6020526000908152604090205481565b34801561065357600080fd5b506101ea61102f565b34801561066857600080fd5b50610224610677366004611a32565b60086020526000908152604090205481565b34801561069557600080fd5b506102246106a4366004611a32565b60076020526000908152604090205481565b3480156106c257600080fd5b506101ea6106d1366004611a32565b6110af565b3480156106e257600080fd5b506101ea6106f1366004611b29565b61113e565b60006001600160e01b0319821663a5352bfd60e01b148061072757506001600160e01b03198216630b2c37f360e21b145b8061074257506001600160e01b0319821663197e730160e11b145b8061075d57506001600160e01b0319821663177901b760e21b145b8061077857506001600160e01b031982166316df028f60e11b145b8061079357506001600160e01b0319821663cf9564b960e01b145b806107ae57506001600160e01b0319821663ecd7fbed60e01b145b806107c957506001600160e01b031982166305044d2960e51b145b806107e457506001600160e01b03198216633e8888d960e01b145b156107fa5750506000546001600160a01b031690565b6001600160e01b0319821663341d6beb60e21b148061082957506001600160e01b031982166307b0472f60e41b145b8061084457506001600160e01b0319821663106d08df60e01b145b8061085f57506001600160e01b031982166327afaa2360e21b145b8061087a57506001600160e01b03198216637a3f61df60e11b145b8061089557506001600160e01b031982166381c6f1a760e01b145b806108b057506001600160e01b03198216634a4d252560e11b145b806108cb57506001600160e01b031982166375bfd63d60e01b145b156108e15750506002546001600160a01b031690565b6001600160e01b03198216630c3281e560e21b148061091057506001600160e01b031982166315c0ff2960e31b145b8061092b57506001600160e01b03198216635669cbef60e01b145b8061094657506001600160e01b031982166304c1e0e760e51b145b8061096157506001600160e01b0319821663db53e8b560e01b145b8061097c57506001600160e01b0319821663bb7019c160e01b145b8061099757506001600160e01b031982166326565d3160e21b145b806109b257506001600160e01b03198216631aebcecb60e01b145b806109cd57506001600160e01b0319821663e78ea3df60e01b145b156109e35750506001546001600160a01b031690565b50506003546001600160a01b031690565b3660008037600080366000845af43d6000803e808015610a13573d6000f35b3d6000fd5b505050565b60048181548110610a2d57600080fd5b60009182526020918290206040805161010081018252601890930290910180546001600160a01b03808216855260ff600160a01b8304169585019590955261ffff600160a81b909104169183019190915260018101549092166060820152600282018054929350909183916080840191610aa690611baf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad290611baf565b8015610b1f5780601f10610af457610100808354040283529160200191610b1f565b820191906000526020600020905b815481529060010190602001808311610b0257829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260059093015460609283015282518084018452600686015481526007860154818301528351808501855260088701548152600987015481840152845160808082018752600a8901548252600b89015482860152600c89015482880152600d89015460ff1615158287015286519081018752600e890180548252600f8a01548287015260108a01548289015260118a018054895181890281018901909a52808a52999a9599949893979596929591949186019392909190830182828015610c2857602002820191906000526020600020905b815481526020019060010190808311610c14575b5050509190925250506040805160608101825260128501546001600160a01b0316815260138501546020820152601485015491810191909152601584015460168501546017909501549394919390925060ff1689565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092019092526020810180516001600160e01b0316631aebcecb60e01b179052600154610a18921690611268565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610d255760405162461bcd60e51b8152600401610d1c90611be9565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d6e600080516020611d15833981519152546001600160a01b031690565b6001600160a01b031614610d945760405162461bcd60e51b8152600401610d1c90611c35565b610d9d816112b1565b60408051600080825260208201909252610db9918391906112b9565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e045760405162461bcd60e51b8152600401610d1c90611be9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e4d600080516020611d15833981519152546001600160a01b031690565b6001600160a01b031614610e735760405162461bcd60e51b8152600401610d1c90611c35565b610e7c826112b1565b610e88828260016112b9565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f2c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610d1c565b50600080516020611d1583398151915290565b610f47611424565b600080546001600160a01b039586166001600160a01b0319918216179091556001805494861694821694909417909355600280549285169284169290921790915560038054919093169116179055565b60066020528160005260406000208181548110610fb357600080fd5b90600052602060002001600091509150505481565b60108181548110610fd857600080fd5b6000918252602090912001546001600160a01b0316905081565b6040805160048152602481019091526020810180516001600160e01b031663204a7f0760e21b179052610e88906001600160a01b03831690611268565b6046546001600160a01b031633146110985760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792070656e64696e67206f776e65722063616e2061636365707420747260448201526530b739b332b960d11b6064820152608401610d1c565b6046546110ad906001600160a01b031661147e565b565b6110b7611424565b6001600160a01b03811661111c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d1c565b604680546001600160a01b0319166001600160a01b0392909216919091179055565b601254610100900460ff161580801561115e5750601254600160ff909116105b806111785750303b158015611178575060125460ff166001145b6111db5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d1c565b6012805460ff1916600117905580156111fe576012805461ff0019166101001790555b6112066114db565b61120f85610ff2565b61121b85858585610f3f565b8015611261576012805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6040518151600090819060208501865af461129a573d6112915763037b81af60e11b8152600481fd5b3d6000823e3d81fd5b3d8152602081013d6000823e3d0160405292915050565b610db9611424565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156112ec57610a188361150a565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611346575060408051601f3d908101601f1916820190925261134391810190611c81565b60015b6113a95760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610d1c565b600080516020611d1583398151915281146114185760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610d1c565b50610a188383836115a6565b6045546001600160a01b031633146110ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d1c565b604580546001600160a01b038381166001600160a01b03198084168217909455604680549094169093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601254610100900460ff166115025760405162461bcd60e51b8152600401610d1c90611c9a565b6110ad6115d1565b6001600160a01b0381163b6115775760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610d1c565b600080516020611d1583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6115af83611601565b6000825111806115bc5750805b15610a18576115cb8383611641565b50505050565b601254610100900460ff166115f85760405162461bcd60e51b8152600401610d1c90611c9a565b6110ad3361147e565b61160a8161150a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6116a95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d1c565b600080846001600160a01b0316846040516116c49190611ce5565b600060405180830381855af49150503d80600081146116ff576040519150601f19603f3d011682016040523d82523d6000602084013e611704565b606091505b509150915061172c8282604051806060016040528060278152602001611d3560279139611735565b95945050505050565b6060831561174457508161174e565b61174e8383611755565b9392505050565b8151156117655781518083602001fd5b8060405162461bcd60e51b8152600401610d1c9190611d01565b6001600160a01b0381168114610db957600080fd5b600080604083850312156117a757600080fd5b82356117b28161177f565b915060208301356117c28161177f565b809150509250929050565b600080604083850312156117e057600080fd5b50508035926020909101359150565b60006020828403121561180157600080fd5b5035919050565b60005b8381101561182357818101518382015260200161180b565b50506000910152565b60008151808452611844816020860160208601611808565b601f01601f19169290920160200192915050565b60006080830182518452602080840151818601526040840151604086015260608401516080606087015282815180855260a0880191508383019450600092505b808310156118b85784518252938301936001929092019190830190611898565b509695505050505050565b6102008082528a516001600160a01b039081169183019190915260208b015160ff1661022083015260408b015161ffff1661024083015260608b01511661026082015260808a015161010061028083015260009061192561030084018261182c565b905060a08c01516102a084015260c08c01516102c084015260e08c01516102e084015261195f602084018c80518252602090810151910152565b8951606084015260208a01516080840152885160a0840152602089015160c0840152604089015160e0840152606089015115156101008401528281036101208401526119ab8189611858565b87516001600160a01b03166101408501526020880151610160850152604088015161018085015291506119db9050565b846101a0830152836101c08301526119f86101e083018415159052565b9a9950505050505050505050565b60008060408385031215611a1957600080fd5b8235611a248161177f565b946020939093013593505050565b600060208284031215611a4457600080fd5b813561174e8161177f565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611a7857600080fd5b8235611a838161177f565b9150602083013567ffffffffffffffff80821115611aa057600080fd5b818501915085601f830112611ab457600080fd5b813581811115611ac657611ac6611a4f565b604051601f8201601f19908116603f01168101908382118183101715611aee57611aee611a4f565b81604052828152886020848701011115611b0757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060808587031215611b3f57600080fd5b8435611b4a8161177f565b93506020850135611b5a8161177f565b92506040850135611b6a8161177f565b91506060850135611b7a8161177f565b939692955090935050565b600060208284031215611b9757600080fd5b81356001600160e01b03198116811461174e57600080fd5b600181811c90821680611bc357607f821691505b602082108103611be357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611c9357600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611cf7818460208701611808565b9190910192915050565b60208152600061174e602083018461182c56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f41540318f10395684b27ec528cd6e5942f8e6138850a8c56ce66baa89c35fe164736f6c63430008110033",
    "sourceMap": "465:5850:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6263:43;6273:32;6297:7;;-1:-1:-1;;;;;;6297:7:46;6273:23;:32::i;:::-;6263:9;:43::i;:::-;465:5850;1696:71:47;;;;;;;;;;-1:-1:-1;1696:71:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:25:69;;;677:2;662:18;1696:71:47;;;;;;;;2044:68;;;;;;;;;;-1:-1:-1;2044:68:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2044:68:47;;;;;;-1:-1:-1;;;;;1251:32:69;;;1233:51;;1221:2;1206:18;2044:68:47;1087:203:69;967:29:47;;;;;;;;;;-1:-1:-1;967:29:47;;;;-1:-1:-1;;;;;967:29:47;;;1307:26;;;;;;;;;;-1:-1:-1;1307:26:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;4672:315:46:-;;;;;;;;;;-1:-1:-1;4672:315:46;;;;;:::i;:::-;;:::i;1366:42:47:-;;;;;;;;;;-1:-1:-1;1366:42:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6701:25:69;;;6757:2;6742:18;;6735:34;;;;6785:18;;;6778:34;;;;6843:2;6828:18;;6821:34;;;;6886:3;6871:19;;6864:35;;;;6930:3;6915:19;;6908:35;6974:3;6959:19;;6952:35;7018:3;7003:19;;6996:35;7075:14;7068:22;7062:3;7047:19;;7040:51;6688:3;6673:19;1366:42:47;6336:761:69;834:35:47;;;;;;;;;;-1:-1:-1;834:35:47;;;;-1:-1:-1;;;;;834:35:47;;;875:47;;;;;;;;;;-1:-1:-1;875:47:47;;;;-1:-1:-1;;;;;875:47:47;;;3317:197:10;;;;;;;;;;-1:-1:-1;3317:197:10;;;;;:::i;:::-;;:::i;2542:54:47:-;;;;;;;;;;-1:-1:-1;2542:54:47;;;;;:::i;:::-;;;;;;;;;;;;;;3763:222:10;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;1635:55:47:-;;;;;;;;;;-1:-1:-1;1635:55:47;;;;;:::i;:::-;;;;;;;;;;;;;;1437:382:46;;;;;;;;;;-1:-1:-1;1437:382:46;;;;;:::i;:::-;;:::i;2376:46:47:-;;;;;;;;;;-1:-1:-1;2376:46:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10138:14:69;;10131:22;10113:41;;10101:2;10086:18;2376:46:47;9973:187:69;2078:2161:46;;;;;;;;;;-1:-1:-1;2078:2161:46;;;;;:::i;:::-;;:::i;928:33:47:-;;;;;;;;;;-1:-1:-1;928:33:47;;;;-1:-1:-1;;;;;928:33:47;;;1003:39;;;;;;;;;;;;1034:8;1003:39;;1562:85:66;;;;;;;;;;-1:-1:-1;1634:6:66;;-1:-1:-1;;;;;1634:6:66;1562:85;;2277:55:47;;;;;;;;;;-1:-1:-1;2277:55:47;;;;;:::i;:::-;;;;;;;;;;;;;;1439:47;;;;;;;;;;-1:-1:-1;1439:47:47;;;;;:::i;:::-;;:::i;1887:39::-;;;;;;;;;;-1:-1:-1;1887:39:47;;;;-1:-1:-1;;;;;1887:39:47;;;2466:29;;;;;;;;;;-1:-1:-1;2466:29:47;;;;;:::i;:::-;;:::i;1094:202:46:-;;;;;;;;;;-1:-1:-1;1094:202:46;;;;;:::i;:::-;;:::i;2161:51:47:-;;;;;;;;;;-1:-1:-1;2161:51:47;;;;;:::i;:::-;;;;;;;;;;;;;;2562:216:66;;;;;;;;;;;;;:::i;1575:54:47:-;;;;;;;;;;-1:-1:-1;1575:54:47;;;;;:::i;:::-;;;;;;;;;;;;;;1516:53;;;;;;;;;;-1:-1:-1;1516:53:47;;;;;:::i;:::-;;;;;;;;;;;;;;2336:220:66;;;;;;;;;;-1:-1:-1;2336:220:66;;;;;:::i;:::-;;:::i;583:427:46:-;;;;;;;;;;-1:-1:-1;583:427:46;;;;;:::i;:::-;;:::i;2078:2161::-;2144:7;-1:-1:-1;;;;;;2180:49:46;;-1:-1:-1;;;2180:49:46;;:116;;-1:-1:-1;;;;;;;2245:51:46;;-1:-1:-1;;;2245:51:46;2180:116;:179;;;-1:-1:-1;;;;;;;2312:47:46;;-1:-1:-1;;;2312:47:46;2180:179;:246;;;-1:-1:-1;;;;;;;2375:51:46;;-1:-1:-1;;;2375:51:46;2180:246;:304;;;-1:-1:-1;;;;;;;2442:42:46;;-1:-1:-1;;;2442:42:46;2180:304;:371;;;-1:-1:-1;;;;;;;2500:51:46;;-1:-1:-1;;;2500:51:46;2180:371;:441;;;-1:-1:-1;;;;;;;2567:54:46;;-1:-1:-1;;;2567:54:46;2180:441;:509;;;-1:-1:-1;;;;;;;2637:52:46;;-1:-1:-1;;;2637:52:46;2180:509;:581;;;-1:-1:-1;;;;;;;2705:56:46;;-1:-1:-1;;;2705:56:46;2180:581;2163:2019;;;-1:-1:-1;;2801:13:46;;-1:-1:-1;;;;;2801:13:46;;2078:2161::o;2163:2019::-;-1:-1:-1;;;;;;2849:39:46;;-1:-1:-1;;;2849:39:46;;:90;;-1:-1:-1;;;;;;;2904:35:46;;-1:-1:-1;;;2904:35:46;2849:90;:151;;;-1:-1:-1;;;;;;;2955:45:46;;-1:-1:-1;;;2955:45:46;2849:151;:204;;;-1:-1:-1;;;;;;;3016:37:46;;-1:-1:-1;;;3016:37:46;2849:204;:262;;;-1:-1:-1;;;;;;;3069:42:46;;-1:-1:-1;;;3069:42:46;2849:262;:329;;;-1:-1:-1;;;;;;;3127:51:46;;-1:-1:-1;;;3127:51:46;2849:329;:386;;;-1:-1:-1;;;;;;;3194:41:46;;-1:-1:-1;;;3194:41:46;2849:386;:446;;;-1:-1:-1;;;;;;;3251:44:46;;-1:-1:-1;;;3251:44:46;2849:446;2832:1350;;;-1:-1:-1;;3335:12:46;;-1:-1:-1;;;;;3335:12:46;;2078:2161::o;2832:1350::-;-1:-1:-1;;;;;;3382:63:46;;-1:-1:-1;;;3382:63:46;;:134;;-1:-1:-1;;;;;;;3461:55:46;;-1:-1:-1;;;3461:55:46;3382:134;:231;;;-1:-1:-1;;;;;;;3532:81:46;;-1:-1:-1;;;3532:81:46;3382:231;:308;;;-1:-1:-1;;;;;;;3629:61:46;;-1:-1:-1;;;3629:61:46;3382:308;:381;;;-1:-1:-1;;;;;;;3706:57:46;;-1:-1:-1;;;3706:57:46;3382:381;:448;;;-1:-1:-1;;;;;;;3779:51:46;;-1:-1:-1;;;3779:51:46;3382:448;:527;;;-1:-1:-1;;;;;;;3846:63:46;;-1:-1:-1;;;3846:63:46;3382:527;:600;;;-1:-1:-1;;;;;;;3925:57:46;;-1:-1:-1;;;3925:57:46;3382:600;:672;;;-1:-1:-1;;;;;;;3998:56:46;;-1:-1:-1;;;3998:56:46;3382:672;3365:817;;;-1:-1:-1;;4094:19:46;;-1:-1:-1;;;;;4094:19:46;;2078:2161::o;3365:817::-;-1:-1:-1;;4160:10:46;;-1:-1:-1;;;;;4160:10:46;;2078:2161::o;5167:1052::-;5552:14;5549:1;5546;5533:34;5863:1;5844;5812:14;5793:1;5761:14;5738:5;5708:170;5952:16;5949:1;5946;5931:38;5990:6;6057:66;;;;6172:16;6169:1;6162:27;6057:66;6092:16;6089:1;6082:27;5983:220;;;5167:1052;:::o;1307:26:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1307:26:47;;;;;;-1:-1:-1;;;1307:26:47;;;;;;;;;;;-1:-1:-1;;;1307:26:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1307:26:47;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1307:26:47;;;-1:-1:-1;;1307:26:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1307:26:47;;;;-1:-1:-1;;1307:26:47;;;;;;;;;;;;-1:-1:-1;;;;;1307:26:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1307:26:47;;;:::o;4672:315:46:-;4817:153;;;-1:-1:-1;;;;;12027:32:69;;;4817:153:46;;;12009:51:69;12076:18;;;;12069:34;;;4817:153:46;;;;;;;;;;11982:18:69;;;;4817:153:46;;;;;;;;-1:-1:-1;;;;;4817:153:46;-1:-1:-1;;;4817:153:46;;;4762:19;;4754:226;;4762:19;;4754:49;:226::i;3317:197:10:-;-1:-1:-1;;;;;1898:6:10;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:10;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:10;:20;-1:-1:-1;;;;;;;;;;;1642:65:7;-1:-1:-1;;;;;1642:65:7;;1563:151;1971:20:10;-1:-1:-1;;;;;1971:30:10;;1963:87;;;;-1:-1:-1;;;1963:87:10;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;3763:222::-;-1:-1:-1;;;;;1898:6:10;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:10;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:10;:20;-1:-1:-1;;;;;;;;;;;1642:65:7;-1:-1:-1;;;;;1642:65:7;;1563:151;1971:20:10;-1:-1:-1;;;;;1971:30:10;;1963:87;;;;-1:-1:-1;;;1963:87:10;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:10;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:10;;13142:2:69;2308:92:10;;;13124:21:69;13181:2;13161:18;;;13154:30;13220:34;13200:18;;;13193:62;13291:26;13271:18;;;13264:54;13335:19;;2308:92:10;12940:420:69;2308:92:10;-1:-1:-1;;;;;;;;;;;;3006:131:10;:::o;1437:382:46:-;1455:13:66;:11;:13::i;:::-;1658::46::1;:30:::0;;-1:-1:-1;;;;;1658:30:46;;::::1;-1:-1:-1::0;;;;;;1658:30:46;;::::1;;::::0;;;;1698:42;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1750:12:::1;:28:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1788:10:::1;:24:::0;;;;;::::1;::::0;::::1;;::::0;;1437:382::o;1439:47:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2466:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2466:29:47;;-1:-1:-1;2466:29:47;:::o;1094:202:46:-;1221:58;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1221:58:46;-1:-1:-1;;;1221:58:46;;;1163:126;;-1:-1:-1;;;;;1163:44:46;;;;:126::i;2562:216:66:-;2637:13;;-1:-1:-1;;;;;2637:13:66;2654:10;2637:27;2616:112;;;;-1:-1:-1;;;2616:112:66;;13567:2:69;2616:112:66;;;13549:21:69;13606:2;13586:18;;;13579:30;13645:34;13625:18;;;13618:62;-1:-1:-1;;;13696:18:69;;;13689:36;13742:19;;2616:112:66;13365:402:69;2616:112:66;2757:13;;2738:33;;-1:-1:-1;;;;;2757:13:66;2738:18;:33::i;:::-;2562:216::o;2336:220::-;1455:13;:11;:13::i;:::-;-1:-1:-1;;;;;2429:22:66;::::1;2408:107;;;::::0;-1:-1:-1;;;2408:107:66;;13974:2:69;2408:107:66::1;::::0;::::1;13956:21:69::0;14013:2;13993:18;;;13986:30;14052:34;14032:18;;;14025:62;-1:-1:-1;;;14103:18:69;;;14096:36;14149:19;;2408:107:66::1;13772:402:69::0;2408:107:66::1;2525:13;:24:::0;;-1:-1:-1;;;;;;2525:24:66::1;-1:-1:-1::0;;;;;2525:24:66;;;::::1;::::0;;;::::1;::::0;;2336:220::o;583:427:46:-;3291:13:9;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:9;;3369:1;3354:12;;;;:16;3336:34;3335:124;;;-1:-1:-1;3431:4:9;1476:19:15;:23;;;3392:66:9;;-1:-1:-1;3441:12:9;;;;;:17;3392:66;3314:217;;;;-1:-1:-1;;;3314:217:9;;14381:2:69;3314:217:9;;;14363:21:69;14420:2;14400:18;;;14393:30;14459:34;14439:18;;;14432:62;-1:-1:-1;;;14510:18:69;;;14503:44;14564:19;;3314:217:9;14179:410:69;3314:217:9;3541:12;:16;;-1:-1:-1;;3541:16:9;3556:1;3541:16;;;3567:65;;;;3601:13;:20;;-1:-1:-1;;3601:20:9;;;;;3567:65;798:16:46::1;:14;:16::i;:::-;824:27;836:14;824:11;:27::i;:::-;861:142;893:14;921:20;955:13;982:11;861:18;:142::i;:::-;3656:14:9::0;3652:99;;;3686:13;:21;;-1:-1:-1;;3686:21:9;;;3726:14;;-1:-1:-1;14746:36:69;;3726:14:9;;14734:2:69;14719:18;3726:14:9;;;;;;;3652:99;3258:499;583:427:46;;;;:::o;1022:1364:63:-;1205:4;1199:11;1496:12;;1553:1;;;;1469:4;1458:16;;1429:7;1402:5;1368:204;1341:682;;1681:16;1671:161;;-1:-1:-1;;;1728:10:63;1721:51;1812:1;1800:10;1793:21;1671:161;1939:16;1936:1;1924:10;1909:47;1992:16;1980:10;1973:36;1341:682;2124:16;2112:10;2105:36;2191:4;2179:10;2175:21;2242:16;2239:1;2224:13;2209:50;2352:16;2333:36;2327:4;2320:50;1022:1364;;-1:-1:-1;;1022:1364:63:o;1302:129:46:-;1455:13:66;:11;:13::i;2938:974:7:-;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:7;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:7;;;;;;;;-1:-1:-1;;3531:63:7;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:7;;15184:2:69;3758:56:7;;;15166:21:69;15223:2;15203:18;;;15196:30;15262:34;15242:18;;;15235:62;-1:-1:-1;;;15313:18:69;;;15306:44;15367:19;;3758:56:7;14982:410:69;3527:302:7;-1:-1:-1;;;;;;;;;;;3644:28:7;;3636:82;;;;-1:-1:-1;;;3636:82:7;;15599:2:69;3636:82:7;;;15581:21:69;15638:2;15618:18;;;15611:30;15677:34;15657:18;;;15650:62;-1:-1:-1;;;15728:18:69;;;15721:39;15777:19;;3636:82:7;15397:405:69;3636:82:7;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;1720:130:66:-;1634:6;;-1:-1:-1;;;;;1634:6:66;920:10:16;1783:23:66;1775:68;;;;-1:-1:-1;;;1775:68:66;;16009:2:69;1775:68:66;;;15991:21:69;;;16028:18;;;16021:30;16087:34;16067:18;;;16060:62;16139:18;;1775:68:66;15807:356:69;2932:223:66;3024:6;;;-1:-1:-1;;;;;3040:17:66;;;-1:-1:-1;;;;;;3040:17:66;;;;;;;;3067:13;:26;;;;;;;;3108:40;;3024:6;;;3040:17;3024:6;;3108:40;;3005:16;;3108:40;2995:160;2932:223;:::o;1124:95::-;5379:13:9;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:9;;;;;;;:::i;:::-;1186:26:66::1;:24;:26::i;1805:281:7:-:0;-1:-1:-1;;;;;1476:19:15;;;1878:106:7;;;;-1:-1:-1;;;1878:106:7;;16782:2:69;1878:106:7;;;16764:21:69;16821:2;16801:18;;;16794:30;16860:34;16840:18;;;16833:62;-1:-1:-1;;;16911:18:69;;;16904:43;16964:19;;1878:106:7;16580:409:69;1878:106:7;-1:-1:-1;;;;;;;;;;;1994:85:7;;-1:-1:-1;;;;;;1994:85:7;-1:-1:-1;;;;;1994:85:7;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;1225:111:66:-;5379:13:9;;;;;;;5371:69;;;;-1:-1:-1;;;5371:69:9;;;;;;;:::i;:::-;1297:32:66::1;920:10:16::0;1297:18:66::1;:32::i;2192:152:7:-:0;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:7;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:15;;;7195:88:7;;;;-1:-1:-1;;;7195:88:7;;17196:2:69;7195:88:7;;;17178:21:69;17235:2;17215:18;;;17208:30;17274:34;17254:18;;;17247:62;-1:-1:-1;;;17325:18:69;;;17318:36;17371:19;;7195:88:7;16994:402:69;7195:88:7;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:7;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:7:o;7438:295:15:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:15;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;:::-;7438:295;;;;;:::o;7739:540::-;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:15;;;;;;;;:::i;14:131:69:-;-1:-1:-1;;;;;89:31:69;;79:42;;69:70;;135:1;132;125:12;150:388;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:69;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;725:248::-;793:6;801;854:2;842:9;833:7;829:23;825:32;822:52;;;870:1;867;860:12;822:52;-1:-1:-1;;893:23:69;;;963:2;948:18;;;935:32;;-1:-1:-1;725:248:69:o;1524:180::-;1583:6;1636:2;1624:9;1615:7;1611:23;1607:32;1604:52;;;1652:1;1649;1642:12;1604:52;-1:-1:-1;1675:23:69;;1524:180;-1:-1:-1;1524:180:69:o;1884:250::-;1969:1;1979:113;1993:6;1990:1;1987:13;1979:113;;;2069:11;;;2063:18;2050:11;;;2043:39;2015:2;2008:10;1979:113;;;-1:-1:-1;;2126:1:69;2108:16;;2101:27;1884:250::o;2139:271::-;2181:3;2219:5;2213:12;2246:6;2241:3;2234:19;2262:76;2331:6;2324:4;2319:3;2315:14;2308:4;2301:5;2297:16;2262:76;:::i;:::-;2392:2;2371:15;-1:-1:-1;;2367:29:69;2358:39;;;;2399:4;2354:50;;2139:271;-1:-1:-1;;2139:271:69:o;2954:752::-;3006:3;3045:4;3040:3;3036:14;3077:5;3071:12;3066:3;3059:25;3103:4;3154:2;3147:5;3143:14;3137:21;3132:2;3127:3;3123:12;3116:43;3208:4;3201:5;3197:16;3191:23;3184:4;3179:3;3175:14;3168:47;3261:4;3254:5;3250:16;3244:23;3299:4;3292;3287:3;3283:14;3276:28;3326:4;3359:12;3353:19;3394:6;3388:4;3381:20;3428:3;3423;3419:13;3410:22;;3473:2;3459:12;3455:21;3441:35;;3494:1;3485:10;;3504:175;3518:6;3515:1;3512:13;3504:175;;;3581:13;;3567:28;;3654:15;;;;3540:1;3533:9;;;;;3617:14;;;;3504:175;;;-1:-1:-1;3695:5:69;2954:752;-1:-1:-1;;;;;;2954:752:69:o;3951:2060::-;4650:3;4662:21;;;4723:13;;-1:-1:-1;;;;;4719:39:69;;;4699:18;;;4692:67;;;;4806:4;4794:17;;4788:24;1776:4;1765:16;4867:3;4852:19;;1753:29;4921:4;4909:17;;4903:24;1865:6;1854:18;4985:3;4970:19;;1842:31;5039:4;5027:17;;5021:24;1044:31;5104:3;5089:19;;1032:44;5158:4;5146:17;;5140:24;5201:6;5195:3;5180:19;;5173:35;-1:-1:-1;;5231:54:69;5280:3;5265:19;;5140:24;5231:54;:::i;:::-;5217:68;;5340:4;5332:6;5328:17;5322:24;5316:3;5305:9;5301:19;5294:53;5402:4;5394:6;5390:17;5384:24;5378:3;5367:9;5363:19;5356:53;5464:4;5456:6;5452:17;5446:24;5440:3;5429:9;5425:19;5418:53;5480:59;5533:4;5522:9;5518:20;5510:6;2492:12;;2480:25;;2554:4;2543:16;;;2537:23;2521:14;;2514:47;2415:152;5480:59;2492:12;;5601:4;5586:20;;2480:25;2554:4;2543:16;;2537:23;2521:14;;;2514:47;2746:12;;5670:4;5655:20;;2734:25;2808:4;2797:16;;2791:23;2775:14;;;2768:47;2864:4;2853:16;;2847:23;2831:14;;;2824:47;2934:4;2923:16;;2917:23;2910:31;2903:39;2887:14;;;2880:63;5725:9;5717:6;5713:22;5707:3;5696:9;5692:19;5685:51;5753:43;5789:6;5781;5753:43;:::i;:::-;3793:12;;-1:-1:-1;;;;;3789:38:69;5859:3;5844:19;;3777:51;3877:4;3866:16;;3860:23;3844:14;;;3837:47;3933:4;3922:16;;3916:23;3900:14;;;3893:47;5745:51;-1:-1:-1;5805:59:69;;-1:-1:-1;3711:235:69;5805:59;5901:6;5895:3;5884:9;5880:19;5873:35;5945:6;5939:3;5928:9;5924:19;5917:35;5961:44;6000:3;5989:9;5985:19;5977:6;2642:13;2635:21;2623:34;;2572:91;5961:44;3951:2060;;;;;;;;;;;;:::o;6016:315::-;6084:6;6092;6145:2;6133:9;6124:7;6120:23;6116:32;6113:52;;;6161:1;6158;6151:12;6113:52;6200:9;6187:23;6219:31;6244:5;6219:31;:::i;:::-;6269:5;6321:2;6306:18;;;;6293:32;;-1:-1:-1;;;6016:315:69:o;7572:247::-;7631:6;7684:2;7672:9;7663:7;7659:23;7655:32;7652:52;;;7700:1;7697;7690:12;7652:52;7739:9;7726:23;7758:31;7783:5;7758:31;:::i;7824:127::-;7885:10;7880:3;7876:20;7873:1;7866:31;7916:4;7913:1;7906:15;7940:4;7937:1;7930:15;7956:1056;8033:6;8041;8094:2;8082:9;8073:7;8069:23;8065:32;8062:52;;;8110:1;8107;8100:12;8062:52;8149:9;8136:23;8168:31;8193:5;8168:31;:::i;:::-;8218:5;-1:-1:-1;8274:2:69;8259:18;;8246:32;8297:18;8327:14;;;8324:34;;;8354:1;8351;8344:12;8324:34;8392:6;8381:9;8377:22;8367:32;;8437:7;8430:4;8426:2;8422:13;8418:27;8408:55;;8459:1;8456;8449:12;8408:55;8495:2;8482:16;8517:2;8513;8510:10;8507:36;;;8523:18;;:::i;:::-;8598:2;8592:9;8566:2;8652:13;;-1:-1:-1;;8648:22:69;;;8672:2;8644:31;8640:40;8628:53;;;8696:18;;;8716:22;;;8693:46;8690:72;;;8742:18;;:::i;:::-;8782:10;8778:2;8771:22;8817:2;8809:6;8802:18;8857:7;8852:2;8847;8843;8839:11;8835:20;8832:33;8829:53;;;8878:1;8875;8868:12;8829:53;8934:2;8929;8925;8921:11;8916:2;8908:6;8904:15;8891:46;8979:1;8974:2;8969;8961:6;8957:15;8953:24;8946:35;9000:6;8990:16;;;;;;;7956:1056;;;;;:::o;9199:769::-;9383:6;9391;9399;9407;9460:3;9448:9;9439:7;9435:23;9431:33;9428:53;;;9477:1;9474;9467:12;9428:53;9516:9;9503:23;9535:31;9560:5;9535:31;:::i;:::-;9585:5;-1:-1:-1;9642:2:69;9627:18;;9614:32;9655:33;9614:32;9655:33;:::i;:::-;9707:7;-1:-1:-1;9766:2:69;9751:18;;9738:32;9779:33;9738:32;9779:33;:::i;:::-;9831:7;-1:-1:-1;9890:2:69;9875:18;;9862:32;9903:33;9862:32;9903:33;:::i;:::-;9199:769;;;;-1:-1:-1;9199:769:69;;-1:-1:-1;;9199:769:69:o;10165:286::-;10223:6;10276:2;10264:9;10255:7;10251:23;10247:32;10244:52;;;10292:1;10289;10282:12;10244:52;10318:23;;-1:-1:-1;;;;;;10370:32:69;;10360:43;;10350:71;;10417:1;10414;10407:12;11450:380;11529:1;11525:12;;;;11572;;;11593:61;;11647:4;11639:6;11635:17;11625:27;;11593:61;11700:2;11692:6;11689:14;11669:18;11666:38;11663:161;;11746:10;11741:3;11737:20;11734:1;11727:31;11781:4;11778:1;11771:15;11809:4;11806:1;11799:15;11663:161;;11450:380;;;:::o;12114:408::-;12316:2;12298:21;;;12355:2;12335:18;;;12328:30;12394:34;12389:2;12374:18;;12367:62;-1:-1:-1;;;12460:2:69;12445:18;;12438:42;12512:3;12497:19;;12114:408::o;12527:::-;12729:2;12711:21;;;12768:2;12748:18;;;12741:30;12807:34;12802:2;12787:18;;12780:62;-1:-1:-1;;;12873:2:69;12858:18;;12851:42;12925:3;12910:19;;12527:408::o;14793:184::-;14863:6;14916:2;14904:9;14895:7;14891:23;14887:32;14884:52;;;14932:1;14929;14922:12;14884:52;-1:-1:-1;14955:16:69;;14793:184;-1:-1:-1;14793:184:69:o;16168:407::-;16370:2;16352:21;;;16409:2;16389:18;;;16382:30;16448:34;16443:2;16428:18;;16421:62;-1:-1:-1;;;16514:2:69;16499:18;;16492:41;16565:3;16550:19;;16168:407::o;17401:287::-;17530:3;17568:6;17562:13;17584:66;17643:6;17638:3;17631:4;17623:6;17619:17;17584:66;:::i;:::-;17666:16;;;;;17401:287;-1:-1:-1;;17401:287:69:o;17693:220::-;17842:2;17831:9;17824:21;17805:4;17862:45;17903:2;17892:9;17888:18;17880:6;17862:45;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "19875": [
        {
          "start": 3294,
          "length": 32
        },
        {
          "start": 3367,
          "length": 32
        },
        {
          "start": 3526,
          "length": 32
        },
        {
          "start": 3590,
          "length": 32
        },
        {
          "start": 3737,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "YEAR()": "83914540",
    "acceptOwnershipTransfer()": "b842e87f",
    "activeStrategies(uint256)": "b20b2429",
    "activeTokens(uint256)": "9f224f35",
    "getRouterImplementation(bytes4)": "76e1df48",
    "initManager(address)": "b1fc19d3",
    "initialize(address,address,address,address)": "f8c8765e",
    "minTokenStakeAmount(address)": "39458723",
    "nftInfo(uint256)": "1f8bc790",
    "owner()": "8da5cb5b",
    "pidNFTList(uint256,uint256)": "96ea48e8",
    "pidStrategies(uint256,bytes32)": "074ecf03",
    "poolInfo(uint256)": "1526fe27",
    "proxiableUUID()": "52d1902d",
    "receiveStrategyYield(address,uint256)": "1aebcecb",
    "referralBalances(address,address)": "011b408b",
    "saloonBounty()": "79923898",
    "saloonBountyProfit(address)": "e45abd0f",
    "saloonManager()": "220e1124",
    "saloonPremiumProfit(address)": "ca006148",
    "saloonProjectPortal()": "277fd2a1",
    "saloonStrategyProfit(address)": "598d17bf",
    "saloonView()": "0a07f543",
    "setImplementations(address,address,address,address)": "60b2fa76",
    "strategyAddressToPid(address)": "957deecc",
    "strategyFactory()": "9ef35710",
    "tokenWhitelist(address)": "753d7563",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"BountyBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hunter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BountyPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"NewBountyDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PremiumBilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalOrUnstakeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"referralPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"tokenWhitelistUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeStrategies\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"getRouterImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"_saloonManager\",\"type\":\"address\"}],\"name\":\"initManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"_saloonManager\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonProjectPortal\",\"name\":\"_saloonProjectPortal\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonBounty\",\"name\":\"_saloonBounty\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonView\",\"name\":\"_saloonView\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minTokenStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelimit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasUnstaked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pidNFTList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pidStrategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"apy\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"projectWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"poolCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scalingMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.GeneralInfo\",\"name\":\"generalInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"projectDepositHeld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectDepositInStrategy\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.DepositInfo\",\"name\":\"depositInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"premiumBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premiumAvailable\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.PremiumInfo\",\"name\":\"premiumInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalScheduledAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawalExecuted\",\"type\":\"bool\"}],\"internalType\":\"struct ISaloon.TimelockInfo\",\"name\":\"poolTimelock\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"currentX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"unstakedTokens\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ISaloon.CurveInfo\",\"name\":\"curveInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ISaloon.ReferralInfo\",\"name\":\"referralInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"assessmentPeriodEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"freezeTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"receiveStrategyYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonBounty\",\"outputs\":[{\"internalType\":\"contract ISaloonBounty\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonBountyProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonManager\",\"outputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonPremiumProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonProjectPortal\",\"outputs\":[{\"internalType\":\"contract ISaloonProjectPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saloonStrategyProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saloonView\",\"outputs\":[{\"internalType\":\"contract ISaloonView\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISaloonManager\",\"name\":\"_saloonManager\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonProjectPortal\",\"name\":\"_saloonProjectPortal\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonBounty\",\"name\":\"_saloonBounty\",\"type\":\"address\"},{\"internalType\":\"contract ISaloonView\",\"name\":\"_saloonView\",\"type\":\"address\"}],\"name\":\"setImplementations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyAddressToPid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyFactory\",\"outputs\":[{\"internalType\":\"contract IStrategyFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"receiveStrategyYield(address,uint256)\":{\"details\":\"Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS? - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or   referralBalances are incremented.\",\"params\":{\"_amount\":\"Amount being received\",\"_token\":\"Token being received\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveStrategyYield(address,uint256)\":{\"notice\":\"Callback function from strategies upon converting yield to underlying\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SaloonRelay.sol\":\"SaloonRelay\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":decimath/=lib/decimath/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31\",\"dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb\",\"dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a\",\"dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622\",\"dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x26058f63de05c657b2409bb4349c25b3cd3d0d61f523318b661894b7ec34fc7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5df5fc65c6255a2fceeadb3ff3d419878eda019f93d015d4faf96c5c44c54329\",\"dweb:/ipfs/QmeNa1t44nAMjhwEcN86sf5udkpATLWHQkdXbaTrzvYHTW\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/prb-math/src/Core.sol\":{\"keccak256\":\"0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc\",\"dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo\"]},\"lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4\",\"dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ\"]},\"src/SaloonRelay.sol\":{\"keccak256\":\"0x7e88e1e86b87f4d01bb861baffc7a91a4773214d8b78a1c0185580a9859bb215\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3a711f00dd21b171afa62aa5344b310a531c4e32ea3e90ef8d59a592a1cd709\",\"dweb:/ipfs/QmYny84kdUvGfMSP9giiGpUmspkM3GrS7586bYbmADTENK\"]},\"src/SaloonStorage.sol\":{\"keccak256\":\"0x800c161ef350e49d6efe86c3e4c920e4ee2f3f49915425b299b20eeaea6df417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50f1a0597054d4af6035ded3080425c35a2b837e333817d6944e0d17968cb262\",\"dweb:/ipfs/QmVtvwgtLbNq5ZHys8kTmBVEZ2HRUg9Dr8ABoPjW6bY91k\"]},\"src/StargateStrategy.sol\":{\"keccak256\":\"0x0633bc75edcdfef96951bcbad280038bb026403f3ef064d898030dd5a620be66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7e5a105815447426d835c8f7f5f124147ca49a1c266327d10ba4e313b122d28\",\"dweb:/ipfs/QmSA4CVzbAHcM5YkBhWEYsmuDxAibPXEPL9Sh2FiPc4Be1\"]},\"src/StrategyFactory.sol\":{\"keccak256\":\"0x3ef442ffea0e03e931d821eebe90677816511ee62ae8249860c43a290862081c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://df5cb9796c8a0d21b1d459d758b9179ac9176c6c923f63be9f88344966ff5a2f\",\"dweb:/ipfs/QmeKmvwNbfMoo3267sRvsSzeuZdFXnHhYTqFJa4VQzT4h3\"]},\"src/interfaces/ISaloon.sol\":{\"keccak256\":\"0x713d355ffdb4e5fc1816a5108adda048cf112072d3a0d299d2875c1c7e37ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f75bd0b18d54865d4ec645299c48ec0a9967a5e2bf7bcb512d3572591fc6556\",\"dweb:/ipfs/QmTnrQWzNskGFS4mVDg8f7d1DJRkXj9wTBHdADGCkwGsEX\"]},\"src/interfaces/ISaloonBounty.sol\":{\"keccak256\":\"0x5101bfe17d0266e4197aa2206b9a3faa368734108e3cf3f8045bad0564129553\",\"urls\":[\"bzz-raw://10d2494a725d5a539ac7cf26c33c0cb850a9719974f3ee447c8cdbc68e4a09e3\",\"dweb:/ipfs/QmeKTBH4JBuH8txMvpYu8MSTe2NSpJNjMXqn1WLmL1XVXR\"]},\"src/interfaces/ISaloonManager.sol\":{\"keccak256\":\"0x93cd04243e59ba51f461b65a18fd2238020b87b9798ca61d720596fac9a1670a\",\"urls\":[\"bzz-raw://516b555faaf44c91cd72a7cb0588987219640e597f5ee898d5a26ab818356f5a\",\"dweb:/ipfs/QmWr9AmzE7PJjs3RVbQzvinBzDtcXsfHjaXQkDTeAMxXZP\"]},\"src/interfaces/ISaloonProjectPortal.sol\":{\"keccak256\":\"0xf58e96cea1ab6ca8ef10ca4a3144f1faa15abd516ec535157413c3761ead36ba\",\"urls\":[\"bzz-raw://51cc3a7b544b512de6f843d27554bc4804260cbe2edc36692e3c06f3d887883c\",\"dweb:/ipfs/QmVyR3HASnuiC1573gYWYucopsocLLiEG8c7aGuvWURSMq\"]},\"src/interfaces/ISaloonView.sol\":{\"keccak256\":\"0xffb61ca9ca170f73bb3c0f2184bb23c1f3bc97ca21575df1fcbf93e568b6887f\",\"urls\":[\"bzz-raw://88c5e73acb16f094708d0446225f096011fe8c71a5c3721618fb718d382e8bae\",\"dweb:/ipfs/QmUGESkt5hQNnvoUK9hcuggDmyfRYAnQyHFThSdYq4yU3j\"]},\"src/interfaces/IStargateLPStaking.sol\":{\"keccak256\":\"0xe9a1809f72ea884a7efbe242ab20c076a410c3c9343f922358c925dde0bb646e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://49f815734c64e5e40562194c971c0e2cd07ab4fe5b598dd31bdbd99d4f7332a3\",\"dweb:/ipfs/QmUMBPbPmDQR3eRj3Witv6zSDxhf5eLZwWM2Rh17LKoDXH\"]},\"src/interfaces/IStargateLPToken.sol\":{\"keccak256\":\"0x833d671a6a8931417d786c94ea52ab7836a5600a62dd9a7fd51a89ae046c1b0f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da84e795a91b6ee4c13f765819192ab21f293f73ef19d971da6749d9fd918abb\",\"dweb:/ipfs/QmZ5mGyuaJwGJU3zGqHkmjntKgjeuoaY6xNDzoNwk8aBCA\"]},\"src/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x49e37ab901c32cdff42e175d9331be3c9f049b67f72453100da8643afbb49bcf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b3c3d5c34d78c40a967009367cd9b8ac25f3bc46907bc3fb8afaeb2ba5622ebc\",\"dweb:/ipfs/QmYGMT4kXiqKVdf4affdUvHF8ErhqkhqxiVsAwG8pFJMTp\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0x61df32bf05ed8ada74307ad39b9e4feacab1f429b74b089e317714f9c158e48e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://914514dd8e6e691b42b9b594195d5c12f0227179148799678dd633bfb8097852\",\"dweb:/ipfs/QmQrBUcs5AQnKRzR4zbMkjqxtjQagQ9y4UeKHB7kqskJDw\"]},\"src/interfaces/IStrategyFactory.sol\":{\"keccak256\":\"0x053b70c802f8ff3d446dbb1fe4dad88f6af977959d7253b488e0862759381375\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fdaec0ba085431307e27883728914ca26812547e70c033501e1800a33bbf8729\",\"dweb:/ipfs/QmfQa3gdT7RdC9wejgXTK16h5LpE2t34drxkR71Q3G4Yod\"]},\"src/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0x1cbd03c5fe3ee590bdd40fd62c47fe403f6ee3734be9e0c24be2ecfe87bf3f5f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d7b0b3b880c5a29585ffcb3142d78a2f5749cb4c5e1f2461a2052ea0f5cf9a2e\",\"dweb:/ipfs/QmWJg3HTUsEx56YS2ntgoH7f3inuTJvV39WvcC2pQbcNVe\"]},\"src/lib/DelegateCall.sol\":{\"keccak256\":\"0x42940e46c9950fa521644f60131b6d7e7e9f72dffc946c5ea4d97572805a0e84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e72fd325a5ca30a00cde08c0fd31706866538ed1bc9d7b36d8b113680a4a53f2\",\"dweb:/ipfs/QmfZWfizfzZQumN928UrwxHn8Mt4h4cYysqL6Y5RZFENb4\"]},\"src/lib/OwnableUpgradeable.sol\":{\"keccak256\":\"0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5\",\"dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz\"]},\"src/lib/SaloonLib.sol\":{\"keccak256\":\"0x7b4b18c7fa60e84486c89a13097744a5dd84af9156f77fced61c990ffd805fb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f80d6be5cc55e81251aff91e5b5a6250f5974e3f3563566f9d1d64ed9ed9f1e\",\"dweb:/ipfs/QmSLJPxBpTc8EH23DtApJqHKqwtAXdWEwZ9rj4PDDsijnS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "oldAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hunter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BountyPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewBountyDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PremiumBilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalOrUnstakeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "referralPaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "tokenWhitelistUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "YEAR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeStrategies",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "sig",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouterImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "_saloonManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "_saloonManager",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonProjectPortal",
              "name": "_saloonProjectPortal",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonBounty",
              "name": "_saloonBounty",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonView",
              "name": "_saloonView",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minTokenStakeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nftInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "xDelta",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unclaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastClaimedTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timelimit",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "hasUnstaked",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pidNFTList",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pidStrategies",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "struct ISaloon.GeneralInfo",
              "name": "generalInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "tokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "apy",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "projectWallet",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "projectName",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "poolCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scalingMultiplier",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.DepositInfo",
              "name": "depositInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "projectDepositHeld",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectDepositInStrategy",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.PremiumInfo",
              "name": "premiumInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "premiumBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premiumAvailable",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.TimelockInfo",
              "name": "poolTimelock",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timelock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalScheduledAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrawalExecuted",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.CurveInfo",
              "name": "curveInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "currentX",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentY",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "unstakedTokens",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct ISaloon.ReferralInfo",
              "name": "referralInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "referralFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "assessmentPeriodEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "freezeTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveStrategyYield"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "referralBalances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonBounty",
          "outputs": [
            {
              "internalType": "contract ISaloonBounty",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonBountyProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonManager",
          "outputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonPremiumProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonProjectPortal",
          "outputs": [
            {
              "internalType": "contract ISaloonProjectPortal",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonStrategyProfit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "saloonView",
          "outputs": [
            {
              "internalType": "contract ISaloonView",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISaloonManager",
              "name": "_saloonManager",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonProjectPortal",
              "name": "_saloonProjectPortal",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonBounty",
              "name": "_saloonBounty",
              "type": "address"
            },
            {
              "internalType": "contract ISaloonView",
              "name": "_saloonView",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setImplementations"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyAddressToPid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyFactory",
          "outputs": [
            {
              "internalType": "contract IStrategyFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "receiveStrategyYield(address,uint256)": {
            "details": "Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS? - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or   referralBalances are incremented.",
            "params": {
              "_amount": "Amount being received",
              "_token": "Token being received"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "receiveStrategyYield(address,uint256)": {
            "notice": "Callback function from strategies upon converting yield to underlying"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":decimath/=lib/decimath/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SaloonRelay.sol": "SaloonRelay"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xf90ca139c587aa92eab3b5d88cdfd9a95e631b6322c92f9a8b0c75c5cd0f8ce1",
        "urls": [
          "bzz-raw://3cef964a3698c9262b531397276bd3a6fe5c213c34c3924a0939da41398b6f31",
          "dweb:/ipfs/QmcnsZqgs3XUrrptUzVcL7BR4W6qQjBkif2SSpbJGvLE87"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5",
        "urls": [
          "bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb",
          "dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x8d195f4fb42b15464ab01ae3fb99b6f5c88526ae9b4187f0774741ad0dc6d3d2",
        "urls": [
          "bzz-raw://3a2c223fb1f1d38983f2c58d410032d20220b1050c1effbbfcac71e73da3e622",
          "dweb:/ipfs/QmQ1da9VzJZc6bkN7hNUeMUm3JxNxDBvSTDkqSkrfAZZp2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a",
        "urls": [
          "bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8",
          "dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x26058f63de05c657b2409bb4349c25b3cd3d0d61f523318b661894b7ec34fc7a",
        "urls": [
          "bzz-raw://5df5fc65c6255a2fceeadb3ff3d419878eda019f93d015d4faf96c5c44c54329",
          "dweb:/ipfs/QmeNa1t44nAMjhwEcN86sf5udkpATLWHQkdXbaTrzvYHTW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
        "urls": [
          "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
          "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/Core.sol": {
        "keccak256": "0xd9bf37732247227a79bfb841feeecf6d2034757148339cc767360ddecc6a0e76",
        "urls": [
          "bzz-raw://1afab013adfcf6bf71209f50db687e3cb1795b71eea91469c99a8c2928c823fc",
          "dweb:/ipfs/Qmai1k6DxQEYqb522CfdBdhAKs3smC82Lx2ZCKpTJaTypo"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0x648e9c6ed63976cb72326bae32ba99ed430467e1f223a4e31ee43c6e7414b926",
        "urls": [
          "bzz-raw://e75af9611cf2ed8b257ab08def7ff29063d9f9b161f0a9292c17f30ab27e49a4",
          "dweb:/ipfs/QmSRvXiFQBTvKt28GEnHswMLA9CfKPpewxHhinqzgoMGrJ"
        ],
        "license": "MIT"
      },
      "src/SaloonRelay.sol": {
        "keccak256": "0x7e88e1e86b87f4d01bb861baffc7a91a4773214d8b78a1c0185580a9859bb215",
        "urls": [
          "bzz-raw://e3a711f00dd21b171afa62aa5344b310a531c4e32ea3e90ef8d59a592a1cd709",
          "dweb:/ipfs/QmYny84kdUvGfMSP9giiGpUmspkM3GrS7586bYbmADTENK"
        ],
        "license": "MIT"
      },
      "src/SaloonStorage.sol": {
        "keccak256": "0x800c161ef350e49d6efe86c3e4c920e4ee2f3f49915425b299b20eeaea6df417",
        "urls": [
          "bzz-raw://50f1a0597054d4af6035ded3080425c35a2b837e333817d6944e0d17968cb262",
          "dweb:/ipfs/QmVtvwgtLbNq5ZHys8kTmBVEZ2HRUg9Dr8ABoPjW6bY91k"
        ],
        "license": "MIT"
      },
      "src/StargateStrategy.sol": {
        "keccak256": "0x0633bc75edcdfef96951bcbad280038bb026403f3ef064d898030dd5a620be66",
        "urls": [
          "bzz-raw://b7e5a105815447426d835c8f7f5f124147ca49a1c266327d10ba4e313b122d28",
          "dweb:/ipfs/QmSA4CVzbAHcM5YkBhWEYsmuDxAibPXEPL9Sh2FiPc4Be1"
        ],
        "license": "MIT"
      },
      "src/StrategyFactory.sol": {
        "keccak256": "0x3ef442ffea0e03e931d821eebe90677816511ee62ae8249860c43a290862081c",
        "urls": [
          "bzz-raw://df5cb9796c8a0d21b1d459d758b9179ac9176c6c923f63be9f88344966ff5a2f",
          "dweb:/ipfs/QmeKmvwNbfMoo3267sRvsSzeuZdFXnHhYTqFJa4VQzT4h3"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/ISaloon.sol": {
        "keccak256": "0x713d355ffdb4e5fc1816a5108adda048cf112072d3a0d299d2875c1c7e37ac0b",
        "urls": [
          "bzz-raw://0f75bd0b18d54865d4ec645299c48ec0a9967a5e2bf7bcb512d3572591fc6556",
          "dweb:/ipfs/QmTnrQWzNskGFS4mVDg8f7d1DJRkXj9wTBHdADGCkwGsEX"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISaloonBounty.sol": {
        "keccak256": "0x5101bfe17d0266e4197aa2206b9a3faa368734108e3cf3f8045bad0564129553",
        "urls": [
          "bzz-raw://10d2494a725d5a539ac7cf26c33c0cb850a9719974f3ee447c8cdbc68e4a09e3",
          "dweb:/ipfs/QmeKTBH4JBuH8txMvpYu8MSTe2NSpJNjMXqn1WLmL1XVXR"
        ],
        "license": null
      },
      "src/interfaces/ISaloonManager.sol": {
        "keccak256": "0x93cd04243e59ba51f461b65a18fd2238020b87b9798ca61d720596fac9a1670a",
        "urls": [
          "bzz-raw://516b555faaf44c91cd72a7cb0588987219640e597f5ee898d5a26ab818356f5a",
          "dweb:/ipfs/QmWr9AmzE7PJjs3RVbQzvinBzDtcXsfHjaXQkDTeAMxXZP"
        ],
        "license": null
      },
      "src/interfaces/ISaloonProjectPortal.sol": {
        "keccak256": "0xf58e96cea1ab6ca8ef10ca4a3144f1faa15abd516ec535157413c3761ead36ba",
        "urls": [
          "bzz-raw://51cc3a7b544b512de6f843d27554bc4804260cbe2edc36692e3c06f3d887883c",
          "dweb:/ipfs/QmVyR3HASnuiC1573gYWYucopsocLLiEG8c7aGuvWURSMq"
        ],
        "license": null
      },
      "src/interfaces/ISaloonView.sol": {
        "keccak256": "0xffb61ca9ca170f73bb3c0f2184bb23c1f3bc97ca21575df1fcbf93e568b6887f",
        "urls": [
          "bzz-raw://88c5e73acb16f094708d0446225f096011fe8c71a5c3721618fb718d382e8bae",
          "dweb:/ipfs/QmUGESkt5hQNnvoUK9hcuggDmyfRYAnQyHFThSdYq4yU3j"
        ],
        "license": null
      },
      "src/interfaces/IStargateLPStaking.sol": {
        "keccak256": "0xe9a1809f72ea884a7efbe242ab20c076a410c3c9343f922358c925dde0bb646e",
        "urls": [
          "bzz-raw://49f815734c64e5e40562194c971c0e2cd07ab4fe5b598dd31bdbd99d4f7332a3",
          "dweb:/ipfs/QmUMBPbPmDQR3eRj3Witv6zSDxhf5eLZwWM2Rh17LKoDXH"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStargateLPToken.sol": {
        "keccak256": "0x833d671a6a8931417d786c94ea52ab7836a5600a62dd9a7fd51a89ae046c1b0f",
        "urls": [
          "bzz-raw://da84e795a91b6ee4c13f765819192ab21f293f73ef19d971da6749d9fd918abb",
          "dweb:/ipfs/QmZ5mGyuaJwGJU3zGqHkmjntKgjeuoaY6xNDzoNwk8aBCA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStargateRouter.sol": {
        "keccak256": "0x49e37ab901c32cdff42e175d9331be3c9f049b67f72453100da8643afbb49bcf",
        "urls": [
          "bzz-raw://b3c3d5c34d78c40a967009367cd9b8ac25f3bc46907bc3fb8afaeb2ba5622ebc",
          "dweb:/ipfs/QmYGMT4kXiqKVdf4affdUvHF8ErhqkhqxiVsAwG8pFJMTp"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0x61df32bf05ed8ada74307ad39b9e4feacab1f429b74b089e317714f9c158e48e",
        "urls": [
          "bzz-raw://914514dd8e6e691b42b9b594195d5c12f0227179148799678dd633bfb8097852",
          "dweb:/ipfs/QmQrBUcs5AQnKRzR4zbMkjqxtjQagQ9y4UeKHB7kqskJDw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IStrategyFactory.sol": {
        "keccak256": "0x053b70c802f8ff3d446dbb1fe4dad88f6af977959d7253b488e0862759381375",
        "urls": [
          "bzz-raw://fdaec0ba085431307e27883728914ca26812547e70c033501e1800a33bbf8729",
          "dweb:/ipfs/QmfQa3gdT7RdC9wejgXTK16h5LpE2t34drxkR71Q3G4Yod"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/IUniswapV2Router.sol": {
        "keccak256": "0x1cbd03c5fe3ee590bdd40fd62c47fe403f6ee3734be9e0c24be2ecfe87bf3f5f",
        "urls": [
          "bzz-raw://d7b0b3b880c5a29585ffcb3142d78a2f5749cb4c5e1f2461a2052ea0f5cf9a2e",
          "dweb:/ipfs/QmWJg3HTUsEx56YS2ntgoH7f3inuTJvV39WvcC2pQbcNVe"
        ],
        "license": "GPL-3.0"
      },
      "src/lib/DelegateCall.sol": {
        "keccak256": "0x42940e46c9950fa521644f60131b6d7e7e9f72dffc946c5ea4d97572805a0e84",
        "urls": [
          "bzz-raw://e72fd325a5ca30a00cde08c0fd31706866538ed1bc9d7b36d8b113680a4a53f2",
          "dweb:/ipfs/QmfZWfizfzZQumN928UrwxHn8Mt4h4cYysqL6Y5RZFENb4"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/OwnableUpgradeable.sol": {
        "keccak256": "0x46618d6df8f4ec4b253b76b0eac798eb11f3eab276a2c562b5ef1d3967535661",
        "urls": [
          "bzz-raw://73ba7147a1b98514b81fb3de40606db7e9710887b3c7f907b1c5895cf25199d5",
          "dweb:/ipfs/QmaBxrMpqkoTKWo2hNDDgF3EMRc3zRAJdqnER4ApktXWsz"
        ],
        "license": "MIT"
      },
      "src/lib/SaloonLib.sol": {
        "keccak256": "0x7b4b18c7fa60e84486c89a13097744a5dd84af9156f77fced61c990ffd805fb3",
        "urls": [
          "bzz-raw://7f80d6be5cc55e81251aff91e5b5a6250f5974e3f3563566f9d1d64ed9ed9f1e",
          "dweb:/ipfs/QmSLJPxBpTc8EH23DtApJqHKqwtAXdWEwZ9rj4PDDsijnS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SaloonRelay.sol",
    "id": 33961,
    "exportedSymbols": {
      "Address": [
        22997
      ],
      "AddressUpgradeable": [
        20498
      ],
      "ContextUpgradeable": [
        20540
      ],
      "DelegateCall": [
        38538
      ],
      "E": [
        25192
      ],
      "ERC1967Upgrade": [
        22061
      ],
      "ERC1967UpgradeUpgradeable": [
        19665
      ],
      "HALF_UNIT": [
        25203
      ],
      "IBeacon": [
        22123
      ],
      "IBeaconUpgradeable": [
        19675
      ],
      "IERC1822Proxiable": [
        21706
      ],
      "IERC1822ProxiableUpgradeable": [
        19296
      ],
      "IERC20": [
        22201
      ],
      "IERC20Permit": [
        22262
      ],
      "ISaloon": [
        35439
      ],
      "ISaloonBounty": [
        35959
      ],
      "ISaloonManager": [
        37245
      ],
      "ISaloonProjectPortal": [
        37643
      ],
      "ISaloonView": [
        38063
      ],
      "IStargateLPStaking": [
        38124
      ],
      "IStargateLPToken": [
        38142
      ],
      "IStargateRouter": [
        38166
      ],
      "IStrategy": [
        38196
      ],
      "IStrategyFactory": [
        38208
      ],
      "IUniswapV2Router": [
        38516
      ],
      "Initializable": [
        19844
      ],
      "LOG2_10": [
        25214
      ],
      "LOG2_E": [
        25225
      ],
      "MAX_UD60x18": [
        25236
      ],
      "MAX_WHOLE_UD60x18": [
        25247
      ],
      "OwnableUpgradeable": [
        40396
      ],
      "PI": [
        25255
      ],
      "PRBMathUD60x18__AddOverflow": [
        25131
      ],
      "PRBMathUD60x18__CeilOverflow": [
        25137
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        25149
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        25143
      ],
      "PRBMathUD60x18__GmOverflow": [
        25158
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        25164
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        25170
      ],
      "PRBMathUD60x18__SubUnderflow": [
        25179
      ],
      "PRBMathUD60x18__ToUD60x18Overflow": [
        25184
      ],
      "Proxy": [
        22113
      ],
      "SafeERC20": [
        22551
      ],
      "SafeMath": [
        23403
      ],
      "SaloonLib": [
        40753
      ],
      "SaloonRelay": [
        33960
      ],
      "SaloonStorage": [
        34062
      ],
      "StargateStrategy": [
        35207
      ],
      "StorageSlot": [
        23079
      ],
      "StorageSlotUpgradeable": [
        20600
      ],
      "StrategyFactory": [
        35266
      ],
      "UD60x18": [
        25123
      ],
      "UNIT": [
        25266
      ],
      "UUPSUpgradeable": [
        19980
      ],
      "ZERO": [
        25274
      ],
      "add": [
        26124
      ],
      "and": [
        26147
      ],
      "avg": [
        25337
      ],
      "ceil": [
        25364
      ],
      "div": [
        25392
      ],
      "eq": [
        26170
      ],
      "exp": [
        25435
      ],
      "exp2": [
        25478
      ],
      "floor": [
        25490
      ],
      "frac": [
        25502
      ],
      "fromUD60x18": [
        25982
      ],
      "gm": [
        25566
      ],
      "gt": [
        26193
      ],
      "gte": [
        26216
      ],
      "inv": [
        25588
      ],
      "isZero": [
        26234
      ],
      "ln": [
        25615
      ],
      "log10": [
        25665
      ],
      "log2": [
        25766
      ],
      "lshift": [
        26257
      ],
      "lt": [
        26280
      ],
      "lte": [
        26303
      ],
      "mod": [
        26329
      ],
      "msb": [
        23460
      ],
      "mul": [
        25793
      ],
      "mulDiv": [
        23586
      ],
      "mulDiv18": [
        23629
      ],
      "neq": [
        26352
      ],
      "or": [
        26378
      ],
      "pow": [
        25855
      ],
      "powu": [
        25925
      ],
      "prbExp2": [
        24892
      ],
      "prbSqrt": [
        25113
      ],
      "rshift": [
        26401
      ],
      "sqrt": [
        25964
      ],
      "sub": [
        26427
      ],
      "toUD60x18": [
        26012
      ],
      "uHALF_UNIT": [
        25196
      ],
      "uLOG2_10": [
        25207
      ],
      "uLOG2_E": [
        25218
      ],
      "uMAX_UD60x18": [
        25229
      ],
      "uMAX_WHOLE_UD60x18": [
        25240
      ],
      "uUNIT": [
        25259
      ],
      "ud": [
        26028
      ],
      "ud60x18": [
        26044
      ],
      "uncheckedAdd": [
        26454
      ],
      "uncheckedDiv": [
        26539
      ],
      "uncheckedMul": [
        26566
      ],
      "uncheckedSub": [
        26481
      ],
      "unwrap": [
        26061
      ],
      "wrap": [
        26078
      ],
      "xor": [
        26507
      ]
    },
    "nodeType": "SourceUnit",
    "src": "114:6202:46",
    "nodes": [
      {
        "id": 33618,
        "nodeType": "PragmaDirective",
        "src": "114:24:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 33619,
        "nodeType": "ImportDirective",
        "src": "140:75:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33961,
        "sourceUnit": 22062,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33620,
        "nodeType": "ImportDirective",
        "src": "216:86:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33961,
        "sourceUnit": 19981,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33621,
        "nodeType": "ImportDirective",
        "src": "303:58:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "file": "openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33961,
        "sourceUnit": 22114,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33622,
        "nodeType": "ImportDirective",
        "src": "362:38:46",
        "nodes": [],
        "absolutePath": "src/lib/OwnableUpgradeable.sol",
        "file": "./lib/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33961,
        "sourceUnit": 40397,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33623,
        "nodeType": "ImportDirective",
        "src": "401:32:46",
        "nodes": [],
        "absolutePath": "src/lib/DelegateCall.sol",
        "file": "./lib/DelegateCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33961,
        "sourceUnit": 38539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33624,
        "nodeType": "ImportDirective",
        "src": "434:29:46",
        "nodes": [],
        "absolutePath": "src/SaloonStorage.sol",
        "file": "./SaloonStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33961,
        "sourceUnit": 34063,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33960,
        "nodeType": "ContractDefinition",
        "src": "465:5850:46",
        "nodes": [
          {
            "id": 33633,
            "nodeType": "UsingForDirective",
            "src": "546:31:46",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 33631,
              "name": "DelegateCall",
              "nameLocations": [
                "552:12:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38538,
              "src": "552:12:46"
            },
            "typeName": {
              "id": 33632,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "569:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 33665,
            "nodeType": "FunctionDefinition",
            "src": "583:427:46",
            "nodes": [],
            "body": {
              "id": 33664,
              "nodeType": "Block",
              "src": "788:222:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33650,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40282,
                      "src": "798:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33652,
                  "nodeType": "ExpressionStatement",
                  "src": "798:16:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33654,
                        "name": "_saloonManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33636,
                        "src": "836:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                          "typeString": "contract ISaloonManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                          "typeString": "contract ISaloonManager"
                        }
                      ],
                      "id": 33653,
                      "name": "initManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33685,
                      "src": "824:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISaloonManager_$37245_$returns$__$",
                        "typeString": "function (contract ISaloonManager)"
                      }
                    },
                    "id": 33655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:27:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33656,
                  "nodeType": "ExpressionStatement",
                  "src": "824:27:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33658,
                        "name": "_saloonManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33636,
                        "src": "893:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                          "typeString": "contract ISaloonManager"
                        }
                      },
                      {
                        "id": 33659,
                        "name": "_saloonProjectPortal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33639,
                        "src": "921:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                          "typeString": "contract ISaloonProjectPortal"
                        }
                      },
                      {
                        "id": 33660,
                        "name": "_saloonBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33642,
                        "src": "955:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                          "typeString": "contract ISaloonBounty"
                        }
                      },
                      {
                        "id": 33661,
                        "name": "_saloonView",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33645,
                        "src": "982:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISaloonView_$38063",
                          "typeString": "contract ISaloonView"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                          "typeString": "contract ISaloonManager"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                          "typeString": "contract ISaloonProjectPortal"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                          "typeString": "contract ISaloonBounty"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISaloonView_$38063",
                          "typeString": "contract ISaloonView"
                        }
                      ],
                      "id": 33657,
                      "name": "setImplementations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33728,
                      "src": "861:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISaloonManager_$37245_$_t_contract$_ISaloonProjectPortal_$37643_$_t_contract$_ISaloonBounty_$35959_$_t_contract$_ISaloonView_$38063_$returns$__$",
                        "typeString": "function (contract ISaloonManager,contract ISaloonProjectPortal,contract ISaloonBounty,contract ISaloonView)"
                      }
                    },
                    "id": 33662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:142:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33663,
                  "nodeType": "ExpressionStatement",
                  "src": "861:142:46"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33647,
                  "name": "initializer",
                  "nameLocations": [
                    "776:11:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19746,
                  "src": "776:11:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "776:11:46"
              }
            ],
            "name": "initialize",
            "nameLocation": "592:10:46",
            "parameters": {
              "id": 33646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33636,
                  "mutability": "mutable",
                  "name": "_saloonManager",
                  "nameLocation": "627:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33665,
                  "src": "612:29:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                    "typeString": "contract ISaloonManager"
                  },
                  "typeName": {
                    "id": 33635,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33634,
                      "name": "ISaloonManager",
                      "nameLocations": [
                        "612:14:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37245,
                      "src": "612:14:46"
                    },
                    "referencedDeclaration": 37245,
                    "src": "612:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                      "typeString": "contract ISaloonManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33639,
                  "mutability": "mutable",
                  "name": "_saloonProjectPortal",
                  "nameLocation": "672:20:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33665,
                  "src": "651:41:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                    "typeString": "contract ISaloonProjectPortal"
                  },
                  "typeName": {
                    "id": 33638,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33637,
                      "name": "ISaloonProjectPortal",
                      "nameLocations": [
                        "651:20:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37643,
                      "src": "651:20:46"
                    },
                    "referencedDeclaration": 37643,
                    "src": "651:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                      "typeString": "contract ISaloonProjectPortal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33642,
                  "mutability": "mutable",
                  "name": "_saloonBounty",
                  "nameLocation": "716:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33665,
                  "src": "702:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                    "typeString": "contract ISaloonBounty"
                  },
                  "typeName": {
                    "id": 33641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33640,
                      "name": "ISaloonBounty",
                      "nameLocations": [
                        "702:13:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35959,
                      "src": "702:13:46"
                    },
                    "referencedDeclaration": 35959,
                    "src": "702:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                      "typeString": "contract ISaloonBounty"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33645,
                  "mutability": "mutable",
                  "name": "_saloonView",
                  "nameLocation": "751:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33665,
                  "src": "739:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonView_$38063",
                    "typeString": "contract ISaloonView"
                  },
                  "typeName": {
                    "id": 33644,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33643,
                      "name": "ISaloonView",
                      "nameLocations": [
                        "739:11:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38063,
                      "src": "739:11:46"
                    },
                    "referencedDeclaration": 38063,
                    "src": "739:11:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonView_$38063",
                      "typeString": "contract ISaloonView"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:166:46"
            },
            "returnParameters": {
              "id": 33649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:46"
            },
            "scope": 33960,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33685,
            "nodeType": "FunctionDefinition",
            "src": "1094:202:46",
            "nodes": [],
            "body": {
              "id": 33684,
              "nodeType": "Block",
              "src": "1153:143:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 33678,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37245,
                                "src": "1244:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 33679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1259:10:46",
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37058,
                              "src": "1244:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                "typeString": "function ISaloonManager.initialize()"
                              }
                            },
                            "id": 33680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1270:8:46",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1244:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 33676,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1221:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1225:18:46",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1221:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 33681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1221:58:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 33673,
                            "name": "_saloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33668,
                            "src": "1171:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                              "typeString": "contract ISaloonManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                              "typeString": "contract ISaloonManager"
                            }
                          ],
                          "id": 33672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1163:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1163:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1163:23:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 33675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1187:20:46",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38537,
                      "src": "1163:44:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 33682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:126:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 33683,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:126:46"
                }
              ]
            },
            "functionSelector": "b1fc19d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initManager",
            "nameLocation": "1103:11:46",
            "parameters": {
              "id": 33669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33668,
                  "mutability": "mutable",
                  "name": "_saloonManager",
                  "nameLocation": "1130:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33685,
                  "src": "1115:29:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                    "typeString": "contract ISaloonManager"
                  },
                  "typeName": {
                    "id": 33667,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33666,
                      "name": "ISaloonManager",
                      "nameLocations": [
                        "1115:14:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37245,
                      "src": "1115:14:46"
                    },
                    "referencedDeclaration": 37245,
                    "src": "1115:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                      "typeString": "contract ISaloonManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:31:46"
            },
            "returnParameters": {
              "id": 33670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1153:0:46"
            },
            "scope": 33960,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33694,
            "nodeType": "FunctionDefinition",
            "src": "1302:129:46",
            "nodes": [],
            "body": {
              "id": 33693,
              "nodeType": "Block",
              "src": "1429:2:46",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              19974
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33691,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33690,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1415:9:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40301,
                  "src": "1415:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1415:9:46"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "1311:17:46",
            "overrides": {
              "id": 33689,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1398:8:46"
            },
            "parameters": {
              "id": 33688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33687,
                  "mutability": "mutable",
                  "name": "_newImplementation",
                  "nameLocation": "1337:18:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33694,
                  "src": "1329:26:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:28:46"
            },
            "returnParameters": {
              "id": 33692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:46"
            },
            "scope": 33960,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 33728,
            "nodeType": "FunctionDefinition",
            "src": "1437:382:46",
            "nodes": [],
            "body": {
              "id": 33727,
              "nodeType": "Block",
              "src": "1648:171:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33711,
                      "name": "saloonManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33974,
                      "src": "1658:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                        "typeString": "contract ISaloonManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33712,
                      "name": "_saloonManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33697,
                      "src": "1674:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                        "typeString": "contract ISaloonManager"
                      }
                    },
                    "src": "1658:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                      "typeString": "contract ISaloonManager"
                    }
                  },
                  "id": 33714,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:30:46"
                },
                {
                  "expression": {
                    "id": 33717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33715,
                      "name": "saloonProjectPortal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33977,
                      "src": "1698:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                        "typeString": "contract ISaloonProjectPortal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33716,
                      "name": "_saloonProjectPortal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33700,
                      "src": "1720:20:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                        "typeString": "contract ISaloonProjectPortal"
                      }
                    },
                    "src": "1698:42:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                      "typeString": "contract ISaloonProjectPortal"
                    }
                  },
                  "id": 33718,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:42:46"
                },
                {
                  "expression": {
                    "id": 33721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33719,
                      "name": "saloonBounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33980,
                      "src": "1750:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                        "typeString": "contract ISaloonBounty"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33720,
                      "name": "_saloonBounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33703,
                      "src": "1765:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                        "typeString": "contract ISaloonBounty"
                      }
                    },
                    "src": "1750:28:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                      "typeString": "contract ISaloonBounty"
                    }
                  },
                  "id": 33722,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:28:46"
                },
                {
                  "expression": {
                    "id": 33725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33723,
                      "name": "saloonView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33983,
                      "src": "1788:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonView_$38063",
                        "typeString": "contract ISaloonView"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33724,
                      "name": "_saloonView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33706,
                      "src": "1801:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISaloonView_$38063",
                        "typeString": "contract ISaloonView"
                      }
                    },
                    "src": "1788:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonView_$38063",
                      "typeString": "contract ISaloonView"
                    }
                  },
                  "id": 33726,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:24:46"
                }
              ]
            },
            "functionSelector": "60b2fa76",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33708,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1638:9:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40301,
                  "src": "1638:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1638:9:46"
              }
            ],
            "name": "setImplementations",
            "nameLocation": "1446:18:46",
            "parameters": {
              "id": 33707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33697,
                  "mutability": "mutable",
                  "name": "_saloonManager",
                  "nameLocation": "1489:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33728,
                  "src": "1474:29:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                    "typeString": "contract ISaloonManager"
                  },
                  "typeName": {
                    "id": 33696,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33695,
                      "name": "ISaloonManager",
                      "nameLocations": [
                        "1474:14:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37245,
                      "src": "1474:14:46"
                    },
                    "referencedDeclaration": 37245,
                    "src": "1474:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                      "typeString": "contract ISaloonManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33700,
                  "mutability": "mutable",
                  "name": "_saloonProjectPortal",
                  "nameLocation": "1534:20:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33728,
                  "src": "1513:41:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                    "typeString": "contract ISaloonProjectPortal"
                  },
                  "typeName": {
                    "id": 33699,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33698,
                      "name": "ISaloonProjectPortal",
                      "nameLocations": [
                        "1513:20:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37643,
                      "src": "1513:20:46"
                    },
                    "referencedDeclaration": 37643,
                    "src": "1513:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                      "typeString": "contract ISaloonProjectPortal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33703,
                  "mutability": "mutable",
                  "name": "_saloonBounty",
                  "nameLocation": "1578:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33728,
                  "src": "1564:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                    "typeString": "contract ISaloonBounty"
                  },
                  "typeName": {
                    "id": 33702,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33701,
                      "name": "ISaloonBounty",
                      "nameLocations": [
                        "1564:13:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35959,
                      "src": "1564:13:46"
                    },
                    "referencedDeclaration": 35959,
                    "src": "1564:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                      "typeString": "contract ISaloonBounty"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33706,
                  "mutability": "mutable",
                  "name": "_saloonView",
                  "nameLocation": "1613:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33728,
                  "src": "1601:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISaloonView_$38063",
                    "typeString": "contract ISaloonView"
                  },
                  "typeName": {
                    "id": 33705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33704,
                      "name": "ISaloonView",
                      "nameLocations": [
                        "1601:11:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38063,
                      "src": "1601:11:46"
                    },
                    "referencedDeclaration": 38063,
                    "src": "1601:11:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISaloonView_$38063",
                      "typeString": "contract ISaloonView"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1464:166:46"
            },
            "returnParameters": {
              "id": 33710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1648:0:46"
            },
            "scope": 33960,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33916,
            "nodeType": "FunctionDefinition",
            "src": "2078:2161:46",
            "nodes": [],
            "body": {
              "id": 33915,
              "nodeType": "Block",
              "src": "2153:2086:46",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 33781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 33769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 33763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 33757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 33751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 33745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 33739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 33735,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33730,
                                      "src": "2180:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 33736,
                                          "name": "ISaloonManager",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37245,
                                          "src": "2187:14:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                            "typeString": "type(contract ISaloonManager)"
                                          }
                                        },
                                        "id": 33737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2202:18:46",
                                        "memberName": "setStrategyFactory",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 37195,
                                        "src": "2187:33:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function ISaloonManager.setStrategyFactory(address)"
                                        }
                                      },
                                      "id": 33738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2221:8:46",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "2187:42:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "2180:49:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 33744,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 33740,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33730,
                                      "src": "2245:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 33741,
                                          "name": "ISaloonManager",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37245,
                                          "src": "2252:14:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                            "typeString": "type(contract ISaloonManager)"
                                          }
                                        },
                                        "id": 33742,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2267:20:46",
                                        "memberName": "updateTokenWhitelist",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 37225,
                                        "src": "2252:35:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function ISaloonManager.updateTokenWhitelist(address,bool,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 33743,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2288:8:46",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "2252:44:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "2245:51:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "2180:116:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 33750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33746,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33730,
                                    "src": "2312:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 33747,
                                        "name": "ISaloonManager",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37245,
                                        "src": "2319:14:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                          "typeString": "type(contract ISaloonManager)"
                                        }
                                      },
                                      "id": 33748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2334:16:46",
                                      "memberName": "addNewBountyPool",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37004,
                                      "src": "2319:31:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function ISaloonManager.addNewBountyPool(address,address,string memory,address,uint256,uint256) returns (uint256)"
                                      }
                                    },
                                    "id": 33749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2351:8:46",
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "2319:40:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "2312:47:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2180:179:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 33756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33752,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33730,
                                  "src": "2375:3:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 33753,
                                      "name": "ISaloonManager",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37245,
                                      "src": "2382:14:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                        "typeString": "type(contract ISaloonManager)"
                                      }
                                    },
                                    "id": 33754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2397:20:46",
                                    "memberName": "extendReferralPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 37055,
                                    "src": "2382:35:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                      "typeString": "function ISaloonManager.extendReferralPeriod(uint256,uint256)"
                                    }
                                  },
                                  "id": 33755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2418:8:46",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2382:44:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "2375:51:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2180:246:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 33762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33758,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33730,
                                "src": "2442:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 33759,
                                    "name": "ISaloonManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37245,
                                    "src": "2449:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                      "typeString": "type(contract ISaloonManager)"
                                    }
                                  },
                                  "id": 33760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2464:11:46",
                                  "memberName": "billPremium",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37011,
                                  "src": "2449:26:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function ISaloonManager.billPremium(uint256) returns (bool)"
                                  }
                                },
                                "id": 33761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2476:8:46",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "2449:35:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "2442:42:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2180:304:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 33768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33764,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33730,
                              "src": "2500:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 33765,
                                  "name": "ISaloonManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37245,
                                  "src": "2507:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                    "typeString": "type(contract ISaloonManager)"
                                  }
                                },
                                "id": 33766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2522:20:46",
                                "memberName": "collectSaloonProfits",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37048,
                                "src": "2507:35:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function ISaloonManager.collectSaloonProfits(address,address) returns (bool)"
                                }
                              },
                              "id": 33767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2543:8:46",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "2507:44:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2500:51:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2180:371:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 33774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33770,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33730,
                            "src": "2567:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 33771,
                                "name": "ISaloonManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37245,
                                "src": "2574:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                  "typeString": "type(contract ISaloonManager)"
                                }
                              },
                              "id": 33772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2589:23:46",
                              "memberName": "collectAllSaloonProfits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37032,
                              "src": "2574:38:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$",
                                "typeString": "function ISaloonManager.collectAllSaloonProfits(address) returns (bool)"
                              }
                            },
                            "id": 33773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2613:8:46",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2574:47:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "2567:54:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2180:441:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 33780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33776,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33730,
                          "src": "2637:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 33777,
                              "name": "ISaloonManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37245,
                              "src": "2644:14:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                                "typeString": "type(contract ISaloonManager)"
                              }
                            },
                            "id": 33778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2659:21:46",
                            "memberName": "collectReferralProfit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37039,
                            "src": "2644:36:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function ISaloonManager.collectReferralProfit(address) returns (bool)"
                            }
                          },
                          "id": 33779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2681:8:46",
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "2644:45:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2637:52:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2180:509:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 33786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33782,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33730,
                        "src": "2705:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 33783,
                            "name": "ISaloonManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37245,
                            "src": "2712:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISaloonManager_$37245_$",
                              "typeString": "type(contract ISaloonManager)"
                            }
                          },
                          "id": 33784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2727:25:46",
                          "memberName": "collectAllReferralProfits",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37025,
                          "src": "2712:40:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function ISaloonManager.collectAllReferralProfits() returns (bool)"
                          }
                        },
                        "id": 33785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2753:8:46",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2712:49:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2705:56:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2180:581:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 33840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 33828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 33822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 33816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 33810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 33804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 33798,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 33794,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33730,
                                      "src": "2849:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 33795,
                                          "name": "ISaloonBounty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35959,
                                          "src": "2856:13:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                            "typeString": "type(contract ISaloonBounty)"
                                          }
                                        },
                                        "id": 33796,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2870:9:46",
                                        "memberName": "payBounty",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 35770,
                                        "src": "2856:23:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_address_$_t_uint16_$_t_uint16_$returns$__$",
                                          "typeString": "function ISaloonBounty.payBounty(uint256,address,uint16,uint16)"
                                        }
                                      },
                                      "id": 33797,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2880:8:46",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "2856:32:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "2849:39:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 33803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 33799,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33730,
                                      "src": "2904:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 33800,
                                          "name": "ISaloonBounty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35959,
                                          "src": "2911:13:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                            "typeString": "type(contract ISaloonBounty)"
                                          }
                                        },
                                        "id": 33801,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2925:5:46",
                                        "memberName": "stake",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 35895,
                                        "src": "2911:19:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function ISaloonBounty.stake(uint256,uint256) returns (uint256)"
                                        }
                                      },
                                      "id": 33802,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2931:8:46",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "2911:28:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "2904:35:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "2849:90:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 33809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33805,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33730,
                                    "src": "2955:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 33806,
                                        "name": "ISaloonBounty",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35959,
                                        "src": "2962:13:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                          "typeString": "type(contract ISaloonBounty)"
                                        }
                                      },
                                      "id": 33807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2976:15:46",
                                      "memberName": "scheduleUnstake",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 35879,
                                      "src": "2962:29:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function ISaloonBounty.scheduleUnstake(uint256) returns (bool)"
                                      }
                                    },
                                    "id": 33808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2992:8:46",
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "2962:38:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "2955:45:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2849:151:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 33815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33811,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33730,
                                  "src": "3016:3:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 33812,
                                      "name": "ISaloonBounty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35959,
                                      "src": "3023:13:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                        "typeString": "type(contract ISaloonBounty)"
                                      }
                                    },
                                    "id": 33813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3037:7:46",
                                    "memberName": "unstake",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35951,
                                    "src": "3023:21:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                      "typeString": "function ISaloonBounty.unstake(uint256,bool) returns (bool)"
                                    }
                                  },
                                  "id": 33814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3045:8:46",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3023:30:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "3016:37:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2849:204:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 33821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33817,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33730,
                                "src": "3069:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 33818,
                                    "name": "ISaloonBounty",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35959,
                                    "src": "3076:13:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                      "typeString": "type(contract ISaloonBounty)"
                                    }
                                  },
                                  "id": 33819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3090:12:46",
                                  "memberName": "claimPremium",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35666,
                                  "src": "3076:26:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function ISaloonBounty.claimPremium(uint256)"
                                  }
                                },
                                "id": 33820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3103:8:46",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "3076:35:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "3069:42:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2849:262:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 33827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33823,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33730,
                              "src": "3127:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 33824,
                                  "name": "ISaloonBounty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35959,
                                  "src": "3134:13:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                    "typeString": "type(contract ISaloonBounty)"
                                  }
                                },
                                "id": 33825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3148:21:46",
                                "memberName": "calculateEffectiveAPY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35661,
                                "src": "3134:35:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function ISaloonBounty.calculateEffectiveAPY(uint256,uint256,uint256) view returns (uint256)"
                                }
                              },
                              "id": 33826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3170:8:46",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "3134:44:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "3127:51:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2849:329:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 33833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33829,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33730,
                            "src": "3194:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 33830,
                                "name": "ISaloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35959,
                                "src": "3201:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                  "typeString": "type(contract ISaloonBounty)"
                                }
                              },
                              "id": 33831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3215:11:46",
                              "memberName": "consolidate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35671,
                              "src": "3201:25:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonBounty.consolidate(uint256)"
                              }
                            },
                            "id": 33832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3227:8:46",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3201:34:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3194:41:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2849:386:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 33839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33835,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33730,
                          "src": "3251:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 33836,
                              "name": "ISaloonBounty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35959,
                              "src": "3258:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISaloonBounty_$35959_$",
                                "typeString": "type(contract ISaloonBounty)"
                              }
                            },
                            "id": 33837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3272:14:46",
                            "memberName": "consolidateAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35674,
                            "src": "3258:28:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                              "typeString": "function ISaloonBounty.consolidateAll()"
                            }
                          },
                          "id": 33838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3287:8:46",
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "3258:37:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3251:44:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2849:446:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 33899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 33893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 33887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 33881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 33875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 33869,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 33863,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 33857,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 33851,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 33847,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33730,
                                          "src": "3382:3:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 33848,
                                              "name": "ISaloonProjectPortal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 37643,
                                              "src": "3389:20:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                                "typeString": "type(contract ISaloonProjectPortal)"
                                              }
                                            },
                                            "id": 33849,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "3410:26:46",
                                            "memberName": "setAPYandPoolCapAndDeposit",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 37583,
                                            "src": "3389:47:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function ISaloonProjectPortal.setAPYandPoolCapAndDeposit(uint256,uint256,uint16,uint256,string memory)"
                                            }
                                          },
                                          "id": 33850,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3437:8:46",
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "3389:56:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "3382:63:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 33856,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 33852,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33730,
                                          "src": "3461:3:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 33853,
                                              "name": "ISaloonProjectPortal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 37643,
                                              "src": "3468:20:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                                "typeString": "type(contract ISaloonProjectPortal)"
                                              }
                                            },
                                            "id": 33854,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "3489:18:46",
                                            "memberName": "makeProjectDeposit",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 37432,
                                            "src": "3468:39:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function ISaloonProjectPortal.makeProjectDeposit(uint256,uint256,string memory)"
                                            }
                                          },
                                          "id": 33855,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3508:8:46",
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "3468:48:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "3461:55:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "3382:134:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 33862,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 33858,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33730,
                                        "src": "3532:3:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 33859,
                                            "name": "ISaloonProjectPortal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37643,
                                            "src": "3551:20:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                              "typeString": "type(contract ISaloonProjectPortal)"
                                            }
                                          },
                                          "id": 33860,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "3572:32:46",
                                          "memberName": "scheduleProjectDepositWithdrawal",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 37570,
                                          "src": "3551:53:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function ISaloonProjectPortal.scheduleProjectDepositWithdrawal(uint256,uint256) returns (bool)"
                                          }
                                        },
                                        "id": 33861,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "3605:8:46",
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "3551:62:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "3532:81:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3382:231:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 33868,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 33864,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33730,
                                      "src": "3629:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 33865,
                                          "name": "ISaloonProjectPortal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37643,
                                          "src": "3636:20:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                            "typeString": "type(contract ISaloonProjectPortal)"
                                          }
                                        },
                                        "id": 33866,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "3657:24:46",
                                        "memberName": "projectDepositWithdrawal",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 37519,
                                        "src": "3636:45:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function ISaloonProjectPortal.projectDepositWithdrawal(uint256,uint256) returns (bool)"
                                        }
                                      },
                                      "id": 33867,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3682:8:46",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "3636:54:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "3629:61:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3382:308:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 33874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33870,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33730,
                                    "src": "3706:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 33871,
                                        "name": "ISaloonProjectPortal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37643,
                                        "src": "3713:20:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                          "typeString": "type(contract ISaloonProjectPortal)"
                                        }
                                      },
                                      "id": 33872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3734:20:46",
                                      "memberName": "withdrawProjectYield",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37642,
                                      "src": "3713:41:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function ISaloonProjectPortal.withdrawProjectYield(uint256) returns (uint256)"
                                      }
                                    },
                                    "id": 33873,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3755:8:46",
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "3713:50:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "3706:57:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3382:381:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 33880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 33876,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33730,
                                  "src": "3779:3:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 33877,
                                      "name": "ISaloonProjectPortal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37643,
                                      "src": "3786:20:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                        "typeString": "type(contract ISaloonProjectPortal)"
                                      }
                                    },
                                    "id": 33878,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3807:14:46",
                                    "memberName": "windDownBounty",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 37635,
                                    "src": "3786:35:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function ISaloonProjectPortal.windDownBounty(uint256) returns (bool)"
                                    }
                                  },
                                  "id": 33879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3822:8:46",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3786:44:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "3779:51:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3382:448:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 33886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33882,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33730,
                                "src": "3846:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 33883,
                                    "name": "ISaloonProjectPortal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37643,
                                    "src": "3853:20:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                      "typeString": "type(contract ISaloonProjectPortal)"
                                    }
                                  },
                                  "id": 33884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3874:26:46",
                                  "memberName": "updateProjectWalletAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37609,
                                  "src": "3853:47:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function ISaloonProjectPortal.updateProjectWalletAddress(uint256,address)"
                                  }
                                },
                                "id": 33885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3901:8:46",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "3853:56:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "3846:63:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3382:527:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 33892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 33888,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33730,
                              "src": "3925:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 33889,
                                  "name": "ISaloonProjectPortal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37643,
                                  "src": "3932:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                    "typeString": "type(contract ISaloonProjectPortal)"
                                  }
                                },
                                "id": 33890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3953:20:46",
                                "memberName": "receiveStrategyYield",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37531,
                                "src": "3932:41:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function ISaloonProjectPortal.receiveStrategyYield(address,uint256)"
                                }
                              },
                              "id": 33891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3974:8:46",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "3932:50:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "3925:57:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3382:600:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 33898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33894,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33730,
                            "src": "3998:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 33895,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37643,
                                "src": "4005:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 33896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4026:19:46",
                              "memberName": "compoundYieldForPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37420,
                              "src": "4005:40:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.compoundYieldForPid(uint256)"
                              }
                            },
                            "id": 33897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4046:8:46",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4005:49:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3998:56:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3382:672:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 33911,
                        "nodeType": "Block",
                        "src": "4131:51:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33908,
                                  "name": "saloonView",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33983,
                                  "src": "4160:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISaloonView_$38063",
                                    "typeString": "contract ISaloonView"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISaloonView_$38063",
                                    "typeString": "contract ISaloonView"
                                  }
                                ],
                                "id": 33907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4152:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33906,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4152:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4152:19:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 33734,
                            "id": 33910,
                            "nodeType": "Return",
                            "src": "4145:26:46"
                          }
                        ]
                      },
                      "id": 33912,
                      "nodeType": "IfStatement",
                      "src": "3365:817:46",
                      "trueBody": {
                        "id": 33905,
                        "nodeType": "Block",
                        "src": "4065:60:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33902,
                                  "name": "saloonProjectPortal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33977,
                                  "src": "4094:19:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                                    "typeString": "contract ISaloonProjectPortal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                                    "typeString": "contract ISaloonProjectPortal"
                                  }
                                ],
                                "id": 33901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4086:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33900,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4086:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4086:28:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 33734,
                            "id": 33904,
                            "nodeType": "Return",
                            "src": "4079:35:46"
                          }
                        ]
                      }
                    },
                    "id": 33913,
                    "nodeType": "IfStatement",
                    "src": "2832:1350:46",
                    "trueBody": {
                      "id": 33846,
                      "nodeType": "Block",
                      "src": "3306:53:46",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33843,
                                "name": "saloonBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33980,
                                "src": "3335:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                                  "typeString": "contract ISaloonBounty"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISaloonBounty_$35959",
                                  "typeString": "contract ISaloonBounty"
                                }
                              ],
                              "id": 33842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3327:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33841,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3327:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3327:21:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "functionReturnParameters": 33734,
                          "id": 33845,
                          "nodeType": "Return",
                          "src": "3320:28:46"
                        }
                      ]
                    }
                  },
                  "id": 33914,
                  "nodeType": "IfStatement",
                  "src": "2163:2019:46",
                  "trueBody": {
                    "id": 33793,
                    "nodeType": "Block",
                    "src": "2772:54:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33790,
                              "name": "saloonManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33974,
                              "src": "2801:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                                "typeString": "contract ISaloonManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISaloonManager_$37245",
                                "typeString": "contract ISaloonManager"
                              }
                            ],
                            "id": 33789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2793:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33788,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2793:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2793:22:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 33734,
                        "id": 33792,
                        "nodeType": "Return",
                        "src": "2786:29:46"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "76e1df48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRouterImplementation",
            "nameLocation": "2087:23:46",
            "parameters": {
              "id": 33731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33730,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2118:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33916,
                  "src": "2111:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 33729,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:12:46"
            },
            "returnParameters": {
              "id": 33734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33916,
                  "src": "2144:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2143:9:46"
            },
            "scope": 33960,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33940,
            "nodeType": "FunctionDefinition",
            "src": "4672:315:46",
            "nodes": [],
            "body": {
              "id": 33939,
              "nodeType": "Block",
              "src": "4744:243:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 33931,
                                "name": "ISaloonProjectPortal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37643,
                                "src": "4857:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISaloonProjectPortal_$37643_$",
                                  "typeString": "type(contract ISaloonProjectPortal)"
                                }
                              },
                              "id": 33932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4878:20:46",
                              "memberName": "receiveStrategyYield",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37531,
                              "src": "4857:41:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function ISaloonProjectPortal.receiveStrategyYield(address,uint256)"
                              }
                            },
                            "id": 33933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4899:8:46",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4857:50:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 33934,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33919,
                            "src": "4925:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 33935,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33921,
                            "src": "4949:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33929,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4817:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4821:18:46",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4817:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 33936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4817:153:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 33926,
                            "name": "saloonProjectPortal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33977,
                            "src": "4762:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISaloonProjectPortal_$37643",
                              "typeString": "contract ISaloonProjectPortal"
                            }
                          ],
                          "id": 33925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4754:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4754:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4754:28:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 33928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4783:20:46",
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38537,
                      "src": "4754:49:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 33937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:226:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 33938,
                  "nodeType": "ExpressionStatement",
                  "src": "4754:226:46"
                }
              ]
            },
            "baseFunctions": [
              35438
            ],
            "documentation": {
              "id": 33917,
              "nodeType": "StructuredDocumentation",
              "src": "4245:422:46",
              "text": "@notice Callback function from strategies upon converting yield to underlying\n @dev Anyone can call this but will result in lost funds for non-strategies. TODO ADD MODIFIER TO THIS?\n - Tokens are transferred from msg.sender to this contract and saloonStrategyProfit and/or\n   referralBalances are incremented.\n @param _token Token being received\n @param _amount Amount being received"
            },
            "functionSelector": "1aebcecb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveStrategyYield",
            "nameLocation": "4681:20:46",
            "parameters": {
              "id": 33922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33919,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4710:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33940,
                  "src": "4702:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4702:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33921,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4726:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33940,
                  "src": "4718:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4718:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4701:33:46"
            },
            "returnParameters": {
              "id": 33923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4744:0:46"
            },
            "scope": 33960,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33948,
            "nodeType": "FunctionDefinition",
            "src": "5167:1052:46",
            "nodes": [],
            "body": {
              "id": 33947,
              "nodeType": "Block",
              "src": "5218:1001:46",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5293:920:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5546:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5549:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "5552:12:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5552:14:46"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5533:12:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5533:34:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5533:34:46"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5694:184:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "5738:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5738:5:46"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "5761:14:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5793:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "5812:12:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5812:14:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5844:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5863:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "5708:12:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5708:170:46"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "5698:6:46",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5946:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5949:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "5952:14:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5952:16:46"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5931:14:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5931:38:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5931:38:46"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6064:59:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6089:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "6092:14:46"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6092:16:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "6082:6:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6082:27:46"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6082:27:46"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "6057:66:46",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6062:1:46",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6144:59:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6169:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "6172:14:46"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6172:16:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "6162:6:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6162:27:46"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6162:27:46"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "6136:67:46",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "5990:6:46"
                        },
                        "nodeType": "YulSwitch",
                        "src": "5983:220:46"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 33943,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5761:14:46",
                      "valueSize": 1
                    }
                  ],
                  "id": 33946,
                  "nodeType": "InlineAssembly",
                  "src": "5284:929:46"
                }
              ]
            },
            "documentation": {
              "id": 33941,
              "nodeType": "StructuredDocumentation",
              "src": "4993:169:46",
              "text": "@dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nameLocation": "5176:9:46",
            "parameters": {
              "id": 33944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33943,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "5194:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 33948,
                  "src": "5186:22:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5185:24:46"
            },
            "returnParameters": {
              "id": 33945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5218:0:46"
            },
            "scope": 33960,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 33959,
            "nodeType": "FunctionDefinition",
            "src": "6225:88:46",
            "nodes": [],
            "body": {
              "id": 33958,
              "nodeType": "Block",
              "src": "6253:60:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 33953,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6297:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6301:3:46",
                            "memberName": "sig",
                            "nodeType": "MemberAccess",
                            "src": "6297:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 33952,
                          "name": "getRouterImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33916,
                          "src": "6273:23:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_address_$",
                            "typeString": "function (bytes4) view returns (address)"
                          }
                        },
                        "id": 33955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6273:32:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33951,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33948,
                      "src": "6263:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6263:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33957,
                  "nodeType": "ExpressionStatement",
                  "src": "6263:43:46"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6233:2:46"
            },
            "returnParameters": {
              "id": 33950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6253:0:46"
            },
            "scope": 33960,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33625,
              "name": "SaloonStorage",
              "nameLocations": [
                "489:13:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34062,
              "src": "489:13:46"
            },
            "id": 33626,
            "nodeType": "InheritanceSpecifier",
            "src": "489:13:46"
          },
          {
            "baseName": {
              "id": 33627,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "504:18:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40396,
              "src": "504:18:46"
            },
            "id": 33628,
            "nodeType": "InheritanceSpecifier",
            "src": "504:18:46"
          },
          {
            "baseName": {
              "id": 33629,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "524:15:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19980,
              "src": "524:15:46"
            },
            "id": 33630,
            "nodeType": "InheritanceSpecifier",
            "src": "524:15:46"
          }
        ],
        "canonicalName": "SaloonRelay",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33960,
          19980,
          19665,
          19296,
          40396,
          20540,
          19844,
          34062,
          35439
        ],
        "name": "SaloonRelay",
        "nameLocation": "474:11:46",
        "scope": 33961,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 46
}